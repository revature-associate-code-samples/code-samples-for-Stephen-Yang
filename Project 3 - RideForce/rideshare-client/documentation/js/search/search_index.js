var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/guards/AccessGuard.html",[0,2.761,1,3.106]],["body/guards/AccessGuard.html",[0,3.52,1,4.971,2,0.233,3,0.233,4,0.174,5,4.625,6,0.263,7,1.233,8,6.859,9,0.831,10,3.52,11,2.155,12,2.182,13,0.928,14,4.625,15,1.301,16,0.021,17,0.874,18,0.33,19,0.985,20,2.335,21,4.625,22,6.658,23,3.043,24,6.859,25,4.625,26,1.446,27,1.196,28,2.471,29,3.043,30,0.851,31,1.233,32,0.696,33,1.279,34,3.959,35,4.625,36,3.52,37,2.363,38,4.625,39,1.666,40,2.712,41,2.217,42,0.233,43,0.294,44,1.279,45,2.526,46,1.348,47,4.625,48,3.406,49,3.192,50,1.666,51,3.959,52,0.982,53,0.574,54,1.968,55,1.152,56,1.214,57,2.363,58,3.52,59,4.625,60,4.625,61,4.625,62,4.625,63,3.959,64,4.625,65,2.93,66,0.016,67,0.016]],["title/classes/AddressModel.html",[43,0.231,68,2.761]],["body/classes/AddressModel.html",[2,0.231,3,0.231,4,0.173,6,0.261,13,1.117,16,0.021,17,0.87,18,0.398,19,0.981,23,3.351,42,0.231,43,0.368,53,0.57,66,0.016,67,0.016,68,4.402,69,3.934,70,0.356,71,2.28,72,4.817,73,4.596,74,1.956,75,0.818,76,3.353,77,6.643,78,6.643,79,6.989,80,6.989,81,1.339,82,4.596,83,3.392,84,6.643,85,5.784,86,2.216,87,5.784,88,4.596,89,4.402,90,4.596,91,2.773,92,3.665,93,4.596,94,4.596,95,4.596,96,4.951]],["title/components/AdminComponent.html",[97,0.281,98,1.004]],["body/components/AdminComponent.html",[2,0.139,3,0.139,4,0.104,6,0.157,7,0.866,9,0.733,10,2.102,11,1.85,12,1.755,13,1.055,15,0.619,16,0.021,17,0.806,18,0.325,19,0.468,20,1.95,26,1.334,27,0.962,30,0.709,32,0.416,33,0.764,39,0.995,42,0.139,43,0.176,44,1.128,46,1.414,52,1.27,53,0.788,55,1.334,56,1.071,66,0.011,67,0.011,70,0.316,75,0.577,76,1.84,81,1.165,92,4.372,97,0.53,98,1.482,99,0.995,100,0.995,101,0.995,102,2.364,103,1.851,104,3.491,105,4.079,106,4.079,107,3.491,108,1.57,109,0.943,110,2.196,111,2.074,112,2.584,113,1.321,114,4.079,115,1.321,116,4.079,117,4.585,118,5.357,119,5.357,120,5.357,121,5.357,122,5.357,123,5.357,124,5.357,125,1.734,126,2.926,127,4.079,128,1.137,129,1.2,130,3.394,131,1.956,132,1.956,133,1.956,134,1.956,135,1.64,136,1.956,137,2.762,138,2.084,139,1.84,140,4.079,141,1.734,142,2.762,143,2.815,144,4.154,145,2.815,146,2.584,147,2.762,148,4.079,149,2.699,150,4.552,151,2.762,152,4.079,153,2.762,154,1.929,155,3.469,156,2.545,157,1.951,158,2.762,159,4.079,160,2.228,161,1.57,162,0.943,163,0.848,164,2.762,165,1.551,166,2.762,167,4.079,168,3.491,169,1.11,170,2.762,171,1.75,172,1.086,173,2.762,174,1.508,175,2.762,176,2.762,177,1.95,178,2.762,179,2.762,180,5.357,181,2.762,182,2.762,183,2.762,184,2.762,185,2.762,186,2.762,187,2.762,188,2.762,189,2.762,190,2.584,191,3.104,192,2.392,193,3.491,194,2.584,195,4.079,196,3.491,197,2.584,198,2.815,199,4.079,200,0.894,201,1.253,202,1.189,203,1.929,204,0.995,205,0.805,206,0.995,207,0.995,208,0.805,209,0.995,210,0.764,211,0.995,212,0.764,213,0.764,214,0.995,215,0.764,216,0.995,217,0.764,218,0.995,219,0.764,220,0.995,221,0.805,222,0.995,223,0.764,224,0.995,225,0.764,226,0.995,227,0.805,228,0.995,229,0.805,230,0.995,231,0.764,232,0.995,233,0.764,234,0.995,235,0.764,236,0.995,237,0.805,238,0.848,239,0.764,240,0.943,241,0.995]],["title/interfaces/ApiError.html",[242,0.77,243,2.504]],["body/interfaces/ApiError.html",[2,0.222,3,0.222,4,0.166,6,0.251,16,0.021,18,0.419,19,0.955,27,1.115,42,0.284,50,1.588,53,0.698,54,2.397,66,0.015,67,0.015,70,0.342,71,1.588,75,0.796,81,1.242,86,2.01,198,3.887,242,1.196,243,3.887,244,3.354,245,3.354,246,4.248,247,6.208,248,3.773,249,3.641,250,3.641,251,5.416,252,4.772,253,4.055,254,4.821,255,6.542,256,3.887,257,5.633,258,4.287,259,5.633,260,2.7,261,4.821,262,5.633,263,5.633,264,3.171,265,2.029,266,5.633,267,3.569,268,4.979,269,3.641,270,4.408,271,3.773,272,3.773,273,3.773,274,3.773,275,4.821]],["title/components/AppComponent.html",[97,0.281,208,1.058]],["body/components/AppComponent.html",[2,0.181,3,0.181,4,0.135,6,0.204,7,1.043,9,0.644,13,1.043,15,1.101,16,0.021,17,0.95,18,0.359,19,0.833,27,0.644,30,0.609,32,0.54,41,3.127,42,0.181,43,0.228,52,1.19,53,0.748,54,2.091,55,1.396,56,1.29,57,2.51,66,0.013,67,0.013,70,0.435,74,2.091,75,0.695,81,1.222,97,0.535,98,0.992,99,1.292,100,1.292,101,1.292,109,1.224,110,2.263,111,2.153,113,1.591,115,1.591,131,2.687,141,1.161,156,2.091,161,1.161,162,1.224,163,1.101,172,1.101,200,1.161,201,1.509,202,1.432,203,2.172,204,1.292,205,1.045,206,1.292,207,1.292,208,1.757,209,1.292,210,0.992,211,1.292,212,0.992,213,0.992,214,1.292,215,0.992,216,1.292,217,0.992,218,1.292,219,0.992,220,1.292,221,1.045,222,1.292,223,0.992,224,1.292,225,0.992,226,1.292,227,1.045,228,1.292,229,1.045,230,1.292,231,0.992,232,1.292,233,0.992,234,1.292,235,0.992,236,1.292,237,1.045,238,1.101,239,0.992,240,1.224,241,1.292,265,2.172,276,3.07,277,3.739,278,4.206,279,4.914,280,4.914,281,2.882,282,3.562,283,6.029,284,3.989,285,6.523,286,4.914,287,3.07,288,3.826,289,4.914,290,2.683,291,3.739,292,4.206,293,2.882,294,4.266,295,4.914,296,3.586,297,5.161,298,4.206,299,3.739,300,3.739,301,3.586,302,4.206,303,3.586,304,3.586,305,2.683,306,2.729,307,3.586,308,3.586,309,3.586]],["title/modules/AppModule.html",[310,1.981,311,2.504]],["body/modules/AppModule.html",[2,0.148,3,0.148,4,0.111,11,1.981,16,0.021,30,0.925,32,0.443,39,1.813,42,0.215,43,0.187,65,2.708,66,0.012,67,0.012,70,0.228,98,1.692,111,0.858,126,2.76,169,1.183,200,0.953,205,1.783,208,1.999,210,1.692,212,1.692,215,1.692,217,1.692,219,1.692,221,1.783,223,1.692,225,1.692,227,1.783,229,1.783,231,1.692,233,1.692,235,1.692,237,1.783,239,1.692,265,2.112,267,3.876,277,3.253,278,3.658,310,2.334,311,5.227,312,1.328,313,3.473,314,4.203,315,2.519,316,2.519,317,2.519,318,2.519,319,2.519,320,3.876,321,4.222,322,3.876,323,2.603,324,3.658,325,2.519,326,1.503,327,2.943,328,4.274,329,3.658,330,3.658,331,4.274,332,3.658,333,2.031,334,4.274,335,2.943,336,3.658,337,5.032,338,4.274,339,2.519,340,4.274,341,4.274,342,2.24,343,2.519,344,2.519,345,2.519,346,2.519,347,2.519,348,2.519,349,2.519,350,2.031,351,2.519,352,2.519,353,2.943,354,4.274,355,2.943,356,2.031,357,2.943,358,2.519,359,2.943,360,2.943,361,2.943,362,2.943,363,2.943,364,1.607,365,2.943,366,3.658,367,2.031,368,2.24,369,5.032,370,1.726,371,2.943,372,2.24,373,2.943,374,2.519,375,2.519,376,2.943,377,2.519,378,1.607,379,2.519,380,2.943,381,2.943,382,2.519,383,2.519,384,2.031,385,2.519,386,2.519,387,2.24,388,2.519,389,2.519,390,4.274,391,2.943,392,2.943,393,2.943,394,2.943,395,2.943,396,2.943,397,2.943,398,2.24,399,4.274,400,4.274]],["title/classes/AppPage.html",[43,0.231,401,2.761]],["body/classes/AppPage.html",[2,0.273,3,0.273,4,0.204,6,0.308,7,1.357,13,1.022,16,0.021,27,1.263,30,0.672,41,2.598,42,0.273,43,0.407,66,0.017,67,0.017,202,1.579,333,3.74,401,4.867,402,4.638,403,7.028,404,7.028,405,5.419,406,5.419,407,4.638,408,5.419,409,5.419,410,5.419]],["title/modules/AppRoutingModule.html",[310,1.981,320,2.299]],["body/modules/AppRoutingModule.html",[2,0.206,3,0.206,4,0.154,16,0.021,26,1.646,30,0.916,32,0.616,33,1.133,42,0.302,43,0.342,66,0.015,67,0.015,97,0.566,98,1.486,112,2.596,128,0.87,202,1.194,205,1.566,210,1.486,212,1.486,213,1.133,215,1.486,217,1.486,219,1.486,225,1.486,227,1.566,231,1.486,233,1.486,237,1.566,290,2.237,310,2.237,313,2.828,320,3.404,336,4.598,345,3.507,346,3.507,347,3.507,348,3.507,349,3.507,350,2.828,351,3.507,352,3.507,358,3.507,374,3.507,375,3.507,382,3.507,383,3.507,384,2.828,385,3.507,386,3.507,387,3.118,388,3.507,389,3.507,411,4.097,412,4.097,413,5.372,414,3.507,415,5.372,416,4.097,417,4.097,418,3.507,419,3.507,420,3.118,421,3.118,422,3.118,423,1.326,424,7.328,425,4.097,426,4.097,427,5.372,428,4.137,429,4.097,430,2.093,431,1.647,432,4.097,433,3.507,434,1.964,435,2.828,436,3.507,437,3.507,438,3.118,439,4.097]],["title/injectables/Auth0Service.html",[31,0.77,288,2.128]],["body/injectables/Auth0Service.html",[2,0.146,3,0.146,4,0.109,6,0.165,7,0.897,9,0.52,12,1.869,13,1.093,15,1.228,16,0.021,17,0.825,18,0.332,19,0.929,27,1.18,28,2.332,30,0.618,31,1.058,32,0.436,33,0.801,40,1.699,41,1.389,42,0.146,43,0.184,45,1.582,46,1.453,50,1.521,51,4.691,53,0.68,54,1.798,55,1.565,57,2.158,66,0.012,67,0.012,75,0.597,81,1.093,91,2.025,128,1.163,129,0.946,141,2.033,145,2.915,149,2.905,157,1.297,162,1.702,163,1.531,191,3.215,238,1.977,260,2.391,264,3.108,281,4.16,282,3.979,288,2.477,313,2.915,326,2.158,344,3.616,423,1.774,430,3.492,436,4.691,440,2.479,441,5.827,442,5.481,443,4.224,444,5.481,445,5.481,446,4.691,447,4.224,448,4.224,449,2.204,450,2.896,451,2.896,452,2.896,453,2.479,454,2.314,455,2.896,456,4.986,457,2.896,458,2.896,459,3.215,460,2.915,461,6.438,462,2.896,463,2.676,464,2.025,465,2.993,466,4.224,467,2.896,468,4.224,469,3.215,470,2.896,471,2.915,472,2.477,473,2.915,474,4.224,475,2.896,476,2.896,477,2.676,478,3.616,479,4.986,480,4.224,481,2.896,482,2.158,483,6.438,484,4.224,485,4.224,486,2.477,487,3.215,488,4.224,489,3.215,490,5.481,491,2.676,492,4.224,493,2.915,494,3.215,495,4.224,496,4.986,497,4.224,498,4.224,499,4.224,500,4.224,501,4.986,502,2.896,503,4.224,504,2.203,505,2.158,506,4.224,507,2.896,508,3.215,509,4.224,510,4.224,511,4.224,512,2.896,513,2.896,514,2.479,515,2.896,516,2.896,517,4.224,518,4.224,519,2.896,520,2.896,521,4.224,522,3.215,523,2.479,524,2.896,525,2.896,526,4.224,527,2.896,528,2.896,529,4.224,530,2.896,531,2.896,532,2.896,533,2.896,534,2.896,535,2.896,536,2.896,537,2.896,538,2.896,539,2.896,540,2.896,541,2.896,542,2.204,543,2.896,544,2.896,545,2.896]],["title/injectables/AuthService.html",[31,0.77,126,1.637]],["body/injectables/AuthService.html",[2,0.141,3,0.141,4,0.105,6,0.159,7,0.874,9,0.74,11,1.86,12,1.501,13,0.961,15,1.094,16,0.021,17,0.735,18,0.278,19,0.829,20,2.167,26,1.025,27,1.243,28,2.713,29,2.342,30,0.82,31,1.037,32,0.421,33,0.773,36,2.128,37,1.428,39,1.007,40,1.64,41,1.341,42,0.141,43,0.178,46,1.571,49,3.719,52,1.275,53,0.891,54,2.816,55,1.547,66,0.011,67,0.011,70,0.418,76,1.857,81,1.22,97,0.217,103,1.2,112,3.095,126,1.857,128,1.144,129,0.922,131,3.172,135,1.124,141,0.905,154,1.941,161,1.745,168,3.524,172,1.457,190,3.095,246,2.414,249,3.643,250,2.414,264,3.069,284,4.056,297,2.393,312,2.432,326,2.103,366,2.393,367,3.965,370,2.414,423,1.333,430,2.103,431,1.964,438,4.101,454,1.566,464,2.881,465,3.137,473,2.841,477,2.608,478,3.524,486,2.414,508,3.133,522,2.128,542,2.128,546,2.393,547,2.865,548,4.182,549,5.389,550,5.389,551,2.128,552,4.122,553,2.796,554,2.608,555,2.414,556,4.117,557,4.117,558,4.117,559,5.389,560,2.796,561,2.841,562,4.491,563,3.133,564,2.393,565,3.133,566,4.613,567,3.524,568,4.117,569,4.117,570,2.796,571,4.613,572,3.133,573,2.796,574,2.796,575,3.372,576,2.796,577,2.128,578,2.393,579,1.771,580,2.128,581,2.796,582,2.796,583,1.262,584,1.771,585,1.771,586,1.262,587,4.117,588,2.796,589,2.796,590,2.796,591,2.796,592,2.796,593,2.796,594,2.796,595,2.796,596,2.796,597,2.796,598,2.796,599,2.796,600,3.524,601,2.796,602,2.796,603,2.796,604,2.796,605,2.796,606,2.796,607,2.796,608,2.796,609,2.796,610,2.796,611,2.796,612,2.796,613,2.796,614,2.796,615,2.796,616,2.796,617,2.796,618,2.796,619,1.93,620,2.796,621,2.128,622,2.796,623,1.93,624,2.393,625,4.117,626,2.796,627,2.796,628,2.796,629,2.796,630,4.886,631,4.886,632,4.117,633,2.796,634,2.393,635,2.796,636,3.524,637,2.796]],["title/components/CallbackComponent.html",[97,0.281,210,1.004]],["body/components/CallbackComponent.html",[2,0.216,3,0.216,4,0.161,9,0.77,16,0.021,17,0.922,27,0.994,30,0.531,32,0.645,42,0.216,43,0.273,44,1.53,56,1.452,57,2.825,66,0.015,67,0.015,70,0.332,97,0.52,98,1.185,99,1.543,100,1.543,101,1.543,108,1.983,109,1.462,110,2.301,111,2.179,113,1.791,115,1.791,125,1.387,161,1.387,200,1.387,201,1.699,202,1.612,203,2.331,204,1.543,205,1.249,206,1.543,207,1.543,208,1.249,209,1.543,210,1.79,211,1.543,212,1.185,213,1.185,214,1.543,215,1.185,216,1.543,217,1.185,218,1.543,219,1.185,220,1.543,221,1.249,222,1.543,223,1.185,224,1.543,225,1.185,226,1.543,227,1.249,228,1.543,229,1.249,230,1.543,231,1.185,232,1.543,233,1.185,234,1.543,235,1.185,236,1.543,237,1.249,238,1.316,239,1.185,240,1.462,241,1.543,282,3.535,305,3.02,398,4.209,430,2.825,437,5.54,469,4.209,554,3.504,638,3.667,639,4.209,640,5.531,641,4.209,642,4.209,643,5.531,644,5.531,645,5.531,646,3.817]],["title/classes/Car.html",[43,0.231,213,1.004]],["body/classes/Car.html",[2,0.232,3,0.232,4,0.174,6,0.262,13,1.095,16,0.021,18,0.39,30,0.719,42,0.232,43,0.369,48,3.399,53,0.85,66,0.016,67,0.016,70,0.358,71,2.395,75,0.819,81,1.257,86,2.264,91,3.353,213,2.018,431,2.33,555,3.9,647,3.946,648,4.961,649,2.466,650,4.961,651,4.431,652,6.994,653,5.323,654,4.611,655,3.672,656,4.611,657,5.692,658,5.692,659,4.611,660,3.001,661,4.611,662,3.165,663,4.611,664,3.946,665,3.946]],["title/components/CarRegistrationComponent.html",[97,0.281,212,1.004]],["body/components/CarRegistrationComponent.html",[2,0.117,3,0.117,4,0.087,6,0.132,7,0.758,9,0.642,10,1.763,11,1.714,12,1.626,13,1.067,15,0.8,16,0.021,17,0.797,18,0.359,19,0.606,20,1.753,26,1.221,27,1.005,28,2.481,30,0.657,32,0.349,33,0.641,39,0.834,42,0.117,43,0.147,44,0.988,46,1.041,52,1.04,53,0.849,54,1.52,55,0.89,56,0.938,66,0.01,67,0.01,70,0.277,74,1.52,75,0.505,81,1.005,86,1.811,91,1.713,97,0.498,98,0.641,99,0.834,100,0.834,101,0.834,103,1.428,108,1.412,109,0.791,110,2.142,111,2.022,113,1.157,115,1.157,125,1.586,128,1.04,129,0.8,132,1.713,133,1.713,134,1.713,135,1.436,136,1.713,141,1.714,149,1.967,150,4.257,161,0.75,162,0.791,163,1.339,165,1.359,169,0.931,172,0.8,174,1.265,197,2.263,200,0.75,201,1.097,202,1.041,203,1.765,204,0.834,205,1.271,206,0.834,207,0.834,208,0.675,209,0.834,210,0.641,211,0.834,212,1.356,213,2.062,214,0.834,215,0.641,216,0.834,217,0.641,218,0.834,219,0.641,220,0.834,221,0.675,222,0.834,223,0.641,224,0.834,225,0.641,226,0.834,227,0.675,228,0.834,229,0.675,230,0.834,231,0.641,232,0.834,233,0.641,234,0.834,235,0.641,236,0.834,237,0.675,238,0.712,239,0.641,240,0.791,241,0.834,256,3.861,290,1.951,312,1.612,384,4.65,423,1.412,454,1.658,471,3.382,504,1.436,505,1.825,547,2.095,555,3.281,564,1.983,586,1.045,619,1.599,623,1.599,634,1.983,649,0.986,650,4.195,651,3.544,653,3.73,657,3.058,666,5.767,667,1.983,668,2.719,669,3.055,670,3.573,671,3.573,672,4.901,673,4.901,674,4.901,675,4.901,676,4.901,677,4.901,678,4.901,679,3.573,680,4.901,681,4.901,682,4.901,683,3.573,684,3.105,685,3.573,686,2.317,687,3.573,688,3.573,689,2.317,690,3.058,691,2.719,692,2.317,693,3.573,694,4.901,695,2.317,696,2.317,697,3.058,698,2.466,699,2.127,700,2.317,701,3.058,702,3.573,703,2.317,704,2.317,705,2.095,706,2.317,707,3.573,708,3.573,709,3.058,710,2.317,711,2.317,712,3.573,713,3.573,714,2.317,715,2.317,716,1.045,717,1.763,718,0.931,719,4.901,720,4.36,721,2.317,722,3.573,723,3.058,724,3.573,725,2.317,726,2.317,727,2.317,728,2.317,729,2.466,730,2.317,731,2.317,732,2.317,733,3.573,734,4.36,735,2.317,736,2.317,737,1.599,738,2.317,739,1.265,740,2.317,741,3.573,742,2.317,743,3.573,744,2.317,745,2.317,746,3.573,747,2.317,748,2.317,749,2.317,750,2.317,751,2.317,752,2.317,753,2.719,754,2.095,755,3.573,756,3.573,757,3.573,758,3.573]],["title/interfaces/ContactInfo.html",[242,0.77,759,2.128]],["body/interfaces/ContactInfo.html",[2,0.37,3,0.253,4,0.189,6,0.286,16,0.021,18,0.418,42,0.253,52,1.297,53,0.623,66,0.017,67,0.017,70,0.39,75,0.864,81,1.283,86,2.133,91,3.425,157,1.543,242,1.297,251,4.652,655,3.873,684,3.873,759,3.585,760,3.824,761,3.824,762,3.184,763,3.588,764,6.113,765,6.113,766,3.122,767,6.113,768,6.113,769,5.232]],["title/interceptors/ErrorInterceptor.html",[267,2.299,770,2.504]],["body/interceptors/ErrorInterceptor.html",[2,0.189,3,0.189,4,0.142,6,0.214,7,1.077,9,0.676,12,2.141,13,0.812,15,1.137,16,0.021,17,0.764,18,0.289,19,0.861,26,1.265,27,1.105,29,2.755,30,0.839,31,1.077,32,0.566,33,1.041,34,3.221,36,2.864,37,1.922,42,0.189,43,0.239,44,1.041,45,2.055,46,1.097,52,1.077,54,2.998,63,3.221,66,0.014,67,0.014,70,0.446,97,0.394,103,1.48,126,3.103,128,1.077,129,1.137,160,2.055,171,2.384,172,1.378,243,3.504,246,4.131,249,4.131,250,4.168,264,1.922,267,3.216,268,2.864,300,4.373,305,2.772,326,3.56,368,4.681,370,2.207,423,1.218,454,1.931,460,4.245,493,3.504,508,2.864,583,2.291,762,3.216,770,2.597,771,3.763,772,5.077,773,5.265,774,4.918,775,2.864,776,3.763,777,5.077,778,5.265,779,5.077,780,3.221,781,5.265,782,3.897,783,3.763,784,3.504,785,4.345,786,4.345,787,5.077,788,4.345,789,3.221,790,4.345,791,5.077,792,3.763,793,3.763,794,3.763,795,3.763,796,3.763,797,5.745,798,3.763,799,3.763,800,3.763,801,3.763,802,3.763,803,3.763,804,3.763,805,3.763,806,3.221,807,3.221,808,3.763,809,3.763,810,3.763,811,3.763]],["title/components/FavoritesComponent.html",[97,0.281,215,1.004]],["body/components/FavoritesComponent.html",[2,0.184,3,0.184,4,0.137,6,0.208,7,1.055,9,0.893,12,1.952,13,0.904,15,0.817,16,0.021,17,0.914,18,0.208,19,0.619,26,1.513,27,0.656,30,0.701,32,0.549,33,1.009,42,0.184,43,0.232,44,1.375,46,1.449,52,1.055,53,0.617,56,1.305,66,0.014,67,0.014,70,0.386,75,0.703,97,0.537,98,1.009,99,1.314,100,1.314,101,1.314,103,1.77,108,1.831,109,1.246,110,2.267,111,2.145,113,1.61,115,1.61,125,1.966,126,3.082,128,1.289,129,1.114,130,3.15,131,2.384,132,2.384,133,2.384,134,2.384,135,2.442,136,2.384,141,1.181,161,2.242,162,1.246,163,1.121,171,2.312,172,1.114,174,1.993,200,1.181,201,1.527,202,1.449,203,2.187,204,1.314,205,1.064,206,1.314,207,1.314,208,1.064,209,1.314,210,1.009,211,1.314,212,1.009,213,1.009,214,1.314,215,1.68,216,1.314,217,1.009,218,1.314,219,1.009,220,1.314,221,1.064,222,1.314,223,1.009,224,1.314,225,1.009,226,1.314,227,1.064,228,1.314,229,1.064,230,1.314,231,1.009,232,1.314,233,1.009,234,1.314,235,1.009,236,1.314,237,1.064,238,1.121,239,1.009,240,1.246,241,1.314,265,1.791,281,3.317,435,4.192,463,3.15,464,2.384,699,1.388,718,1.467,775,2.777,812,3.124,813,4.972,814,2.54,815,4.972,816,4.714,817,2.916,818,4.972,819,4.972,820,4.972,821,4.256,822,3.649,823,2.916,824,4.714,825,4.972,826,4.972,827,2.54,828,3.124]],["title/classes/Filter.html",[43,0.231,829,2.128]],["body/classes/Filter.html",[2,0.253,3,0.253,4,0.189,6,0.286,13,1.053,16,0.02,18,0.375,28,3.128,42,0.253,43,0.389,52,1.067,53,0.85,66,0.017,67,0.018,70,0.39,72,3.824,75,0.864,128,1.067,129,1.126,135,2.457,138,3.122,155,3.338,156,2.601,165,1.911,265,1.81,766,3.122,829,4.31,830,4.301,831,6.854,832,6.854,833,6.854,834,5.025,835,5.025,836,4.219,837,3.122,838,5.025,839,3.585]],["title/injectables/GeocodeService.html",[31,0.77,840,2.761]],["body/injectables/GeocodeService.html",[2,0.184,3,0.184,4,0.138,6,0.208,7,1.29,9,1.017,13,0.971,15,1.115,16,0.021,17,0.749,18,0.322,19,0.844,27,1.206,29,3.359,30,0.617,31,1.201,32,0.55,37,1.866,40,2.143,41,1.752,42,0.184,43,0.232,49,4.194,52,1.45,55,1.514,66,0.017,67,0.014,70,0.439,75,0.704,76,3.082,81,1.017,128,1.29,129,1.361,139,3.237,149,1.649,163,1.529,172,1.115,253,3.847,264,2.542,265,1.792,269,2.919,431,2.747,454,2.495,482,3.104,504,2.001,561,2.522,583,2.246,586,1.649,737,2.522,807,3.128,840,3.787,841,3.128,842,4.977,843,6.832,844,7.174,845,4.977,846,4.977,847,4.977,848,3.654,849,6.077,850,4.977,851,4.977,852,6.077,853,3.654,854,3.787,855,3.787,856,5.66,857,6.077,858,4.26,859,3.654,860,4.977,861,4.977,862,4.977,863,4.977,864,4.977,865,4.977,866,4.977,867,4.977,868,3.654,869,4.977,870,3.654,871,3.128,872,3.654]],["title/components/HowToComponent.html",[97,0.281,217,1.004]],["body/components/HowToComponent.html",[2,0.282,3,0.087,4,0.065,9,0.31,16,0.019,17,0.889,18,0.308,19,0.834,30,0.214,32,0.26,42,0.087,43,0.11,44,0.782,50,1.019,52,0.881,53,0.748,54,1.767,55,1.034,56,0.742,57,3.082,58,2.152,66,0.008,67,0.015,70,0.134,76,2.813,83,3.178,86,1.344,89,2.152,92,3.657,97,0.355,98,0.478,99,0.622,100,0.622,101,0.622,103,0.824,108,1.163,109,0.59,110,2.038,111,1.919,112,3.116,113,0.916,115,0.916,125,0.559,128,0.6,138,2.512,139,2.813,144,2.435,149,2.604,154,1.019,155,2.959,156,2.093,160,2.267,161,2.131,165,1.871,190,2.63,194,1.792,196,2.421,197,1.792,198,2.865,200,0.559,201,0.869,202,0.824,203,1.495,204,0.622,205,0.503,206,0.622,207,0.622,208,0.503,209,0.622,210,0.478,211,0.622,212,0.478,213,1.698,214,0.622,215,0.478,216,0.622,217,1.148,218,0.622,219,0.478,220,0.622,221,0.503,222,0.622,223,0.478,224,0.622,225,0.478,226,0.622,227,0.503,228,0.622,229,0.503,230,0.622,231,0.478,232,0.622,233,0.478,234,0.622,235,0.478,236,0.622,237,0.503,238,2.022,239,0.478,240,0.59,241,0.622,251,3.159,252,1.952,256,3.983,284,3.178,290,2.686,302,2.421,312,1.276,326,2.512,350,1.192,418,2.421,421,2.152,430,3.333,431,2.425,435,2.865,454,2.558,477,3.433,482,1.445,486,3.827,487,3.159,491,1.792,493,1.952,554,3.822,555,2.435,562,1.952,572,3.743,575,2.865,583,1.276,584,3.116,585,1.792,641,3.159,642,3.159,646,1.952,649,2.895,651,2.63,653,3.159,658,4.21,705,3.827,717,4.745,753,3.159,754,1.659,763,2.768,766,0.882,782,3.95,784,1.952,814,2.948,821,5.164,823,3.178,837,2.512,839,1.659,873,1.478,874,1.478,875,2.421,876,3.159,877,2.828,878,2.828,879,2.828,880,5.434,881,3.553,882,2.421,883,4.21,884,4.151,885,5.164,886,2.828,887,4.151,888,6.726,889,2.828,890,2.421,891,3.395,892,4.151,893,2.828,894,2.828,895,4.745,896,6.726,897,4.94,898,4.918,899,3.116,900,2.828,901,2.828,902,4.151,903,2.828,904,4.151,905,4.94,906,4.745,907,2.828,908,5.419,909,2.828,910,2.421,911,2.421,912,2.421,913,2.828,914,2.828,915,1.792,916,2.421,917,5.164,918,2.828,919,3.553,920,4.151,921,4.918,922,2.828,923,2.828,924,2.828,925,2.828,926,2.828,927,2.828,928,2.828,929,4.151,930,2.828,931,2.828,932,2.828,933,4.151,934,1.545,935,2.152,936,4.151,937,2.828,938,3.159,939,1.792,940,2.828,941,2.828,942,2.421,943,4.21,944,1.727,945,4.151,946,4.918,947,2.828,948,2.152,949,1.727,950,2.828,951,2.828,952,4.151,953,2.828,954,4.151,955,1.952,956,2.828,957,1.727,958,4.918,959,2.828,960,2.152,961,2.828,962,2.828,963,2.828,964,2.828,965,2.828,966,4.151,967,4.918,968,4.151,969,2.828,970,3.553,971,2.828,972,2.152,973,3.74,974,2.828,975,4.151,976,2.63,977,2.828,978,2.828,979,2.828,980,1.952,981,2.828,982,4.151,983,2.828,984,2.828,985,2.828,986,1.478,987,2.828,988,2.152,989,2.828,990,1.952,991,2.828,992,2.828,993,2.828,994,2.828,995,1.727,996,1.727,997,2.828,998,1.727,999,1.727,1000,1.727]],["title/interceptors/JwtInterceptor.html",[321,2.504,770,2.504]],["body/interceptors/JwtInterceptor.html",[2,0.215,3,0.215,4,0.161,6,0.243,7,1.171,9,0.766,13,0.882,15,1.235,16,0.021,17,0.83,18,0.314,19,0.935,27,0.991,29,2.93,30,0.801,31,1.171,32,0.642,37,2.179,42,0.215,43,0.271,44,1.18,45,2.329,50,1.986,52,1.171,66,0.015,67,0.015,70,0.474,103,1.607,128,1.171,129,1.235,131,3.286,172,1.369,197,3.494,249,4.02,250,4.279,254,4.721,321,3.806,368,5.092,370,2.501,423,1.381,465,3.961,552,4.419,586,1.925,697,4.721,754,3.234,762,3.494,770,4.218,773,4.721,774,5.232,780,3.651,781,5.727,782,4.094,788,4.721,789,3.651,790,4.721,1001,4.265,1002,3.806,1003,4.265,1004,4.265,1005,4.265,1006,5.515,1007,5.515,1008,4.721,1009,4.265,1010,4.265,1011,4.265,1012,4.265,1013,4.265,1014,4.265,1015,4.265]],["title/components/LandingComponent.html",[97,0.281,219,1.004]],["body/components/LandingComponent.html",[2,0.146,3,0.146,4,0.109,6,0.165,7,0.899,9,0.761,11,1.889,12,0.892,13,0.974,15,0.651,16,0.021,17,0.826,18,0.284,19,0.493,20,2.207,27,0.897,28,2.126,30,0.723,32,0.437,33,0.804,39,1.046,42,0.146,43,0.185,44,1.171,46,1.234,53,0.848,54,1.802,55,1.054,56,1.111,57,2.162,58,3.222,66,0.012,67,0.015,70,0.328,75,0.598,97,0.525,98,0.804,99,1.046,100,1.046,101,1.046,103,1.234,108,1.617,109,0.992,110,2.21,111,2.118,113,1.371,115,1.371,125,1.777,129,1.229,130,2.682,141,1.617,143,2.922,145,2.922,146,2.682,154,1.525,157,1.3,161,0.94,169,1.168,172,0.948,177,1.702,191,3.222,192,2.483,193,3.624,200,0.94,201,1.3,202,1.234,203,1.977,204,1.046,205,0.847,206,1.046,207,1.046,208,0.847,209,1.046,210,0.804,211,1.046,212,0.804,213,0.804,214,1.046,215,0.804,216,1.046,217,0.804,218,1.046,219,1.518,220,1.046,221,0.847,222,1.046,223,0.804,224,1.046,225,0.804,226,1.046,227,0.847,228,1.046,229,0.847,230,1.046,231,0.804,232,1.046,233,0.804,234,1.046,235,0.804,236,1.046,237,0.847,238,0.892,239,0.804,240,0.992,241,1.046,265,1.525,282,2.997,288,3.779,290,2.312,291,4.635,306,2.211,422,4.635,428,3.788,430,2.162,454,1.61,463,2.682,464,2.03,465,2.312,469,3.222,472,3.572,491,3.477,505,2.803,585,2.682,641,4.177,649,2.911,668,3.222,698,2.922,699,1.105,701,3.624,716,1.311,718,1.168,782,2.682,823,2.483,837,3.111,880,3.222,899,2.682,917,3.624,919,3.624,935,3.222,938,4.177,939,3.477,960,3.222,973,3.788,1016,2.487,1017,4.234,1018,4.234,1019,4.234,1020,4.234,1021,4.234,1022,2.631,1023,5.488,1024,4.698,1025,2.905,1026,4.234,1027,2.905,1028,2.905,1029,2.905,1030,2.905,1031,4.234,1032,4.234,1033,2.905,1034,1.484,1035,2.487,1036,2.487,1037,2.905,1038,4.698,1039,4.234,1040,3.519,1041,4.234,1042,2.905,1043,4.234,1044,4.234,1045,4.698,1046,3.624,1047,4.234,1048,4.234,1049,3.624,1050,4.234,1051,4.234,1052,2.905,1053,4.234,1054,5.488,1055,4.234,1056,4.234,1057,2.905,1058,2.905]],["title/components/LikesComponent.html",[97,0.281,221,1.058]],["body/components/LikesComponent.html",[2,0.255,3,0.15,4,0.112,6,0.17,7,0.917,9,0.776,11,1.8,12,1.812,13,0.889,15,0.669,16,0.021,17,0.836,18,0.289,19,0.506,20,2.235,26,1.264,27,0.536,30,0.786,32,0.449,33,0.826,39,1.555,42,0.15,43,0.19,44,1.195,46,1.479,50,2.002,52,1.18,53,0.844,56,1.134,66,0.012,67,0.015,70,0.335,75,0.61,97,0.538,98,0.826,99,1.075,100,1.075,101,1.075,103,1.259,108,1.642,109,1.019,110,2.217,111,2.096,113,1.398,115,1.398,125,1.8,128,0.917,129,0.967,132,2.07,133,2.07,134,2.07,135,1.736,136,2.07,141,0.967,146,2.736,154,1.555,157,1.707,161,0.967,162,1.019,163,0.917,165,1.642,169,1.2,172,1.136,174,1.63,177,2.472,200,0.967,201,1.326,202,1.259,203,2.002,204,1.075,205,0.87,206,1.075,207,1.075,208,0.87,209,1.075,210,0.826,211,1.075,212,0.826,213,1.701,214,1.075,215,0.826,216,1.075,217,0.826,218,1.075,219,0.826,220,1.075,221,1.62,222,1.075,223,0.826,224,1.075,225,0.826,226,1.075,227,0.87,228,1.075,229,0.87,230,1.075,231,0.826,232,1.075,233,0.826,234,1.075,235,0.826,236,1.075,237,0.87,238,0.917,239,0.826,240,1.019,241,1.075,260,2.665,323,2.366,364,1.63,423,0.967,449,2.272,586,1.949,649,2.616,660,1.949,699,2.114,716,1.347,718,1.2,729,2.98,763,2.591,766,2.206,814,3.316,816,2.98,824,2.98,827,1.525,955,2.98,1022,2.665,1034,1.525,1040,2.358,1059,2.556,1060,4.318,1061,4.318,1062,4.758,1063,3.26,1064,4.318,1065,3.287,1066,2.986,1067,2.533,1068,3.287,1069,2.986,1070,3.737,1071,3.287,1072,2.556,1073,1.63,1074,1.63,1075,2.533,1076,2.272,1077,2.533,1078,2.272,1079,2.556,1080,2.975,1081,2.061,1082,2.061,1083,3.287,1084,2.986,1085,2.986,1086,2.986,1087,2.986,1088,3.287,1089,2.986,1090,2.986,1091,2.986,1092,2.986,1093,2.986,1094,2.272,1095,2.272,1096,2.272,1097,2.272,1098,2.272,1099,2.272,1100,2.272,1101,2.272,1102,2.272,1103,2.272,1104,1.751,1105,1.751,1106,2.272,1107,2.556,1108,4.318,1109,4.318,1110,2.98,1111,4.318,1112,4.318,1113,3.696,1114,3.696]],["title/components/LikesmatchwebComponent.html",[97,0.281,223,1.004]],["body/components/LikesmatchwebComponent.html",[2,0.252,3,0.122,4,0.091,6,0.138,7,0.783,9,0.663,11,1.747,12,1.657,13,0.946,15,1.003,16,0.021,17,0.856,18,0.307,19,0.759,20,2.014,23,1.159,26,1.248,27,0.804,29,1.159,30,0.734,32,0.364,33,0.669,39,1.329,42,0.186,43,0.154,44,1.021,46,1.305,50,1.805,52,1.145,53,0.866,55,0.919,56,0.969,66,0.01,67,0.014,70,0.286,75,0.522,81,0.663,97,0.516,98,0.669,99,0.871,100,0.871,101,0.871,103,1.076,108,1.449,109,0.825,110,2.156,111,2.035,113,1.195,115,1.195,125,1.622,128,1.063,129,0.827,132,1.769,133,1.769,134,1.769,135,1.484,136,1.769,138,1.885,141,1.449,146,2.338,154,1.329,157,1.657,161,0.782,162,0.825,163,0.742,165,1.703,169,0.972,172,1.003,174,1.32,177,2.453,200,0.782,201,1.133,202,1.076,203,1.805,204,0.871,205,0.704,206,0.871,207,0.871,208,0.704,209,0.871,210,0.669,211,0.871,212,0.669,213,0.669,214,0.871,215,0.669,216,0.871,217,0.669,218,0.871,219,0.669,220,0.871,221,0.704,222,0.871,223,1.386,224,0.871,225,0.669,226,0.871,227,0.704,228,0.871,229,0.704,230,0.871,231,0.669,232,0.871,233,0.669,234,0.871,235,0.669,236,0.871,237,0.704,238,0.742,239,0.669,240,0.825,241,0.871,242,0.513,253,1.417,260,2.402,293,3.578,305,1.32,323,2.296,364,1.32,378,2.015,423,0.782,434,3.11,489,1.839,494,1.839,504,1.484,505,1.235,586,1.665,639,1.839,649,2.518,651,1.531,660,2.435,662,1.32,699,1.906,716,1.091,718,0.972,729,1.668,759,2.625,763,2.559,766,1.885,814,3.194,817,2.164,824,2.547,899,1.531,915,2.338,934,3.232,955,2.547,1002,1.668,1022,2.587,1034,1.235,1040,2.015,1063,2.625,1065,2.809,1067,2.164,1068,2.809,1071,3.407,1073,1.32,1074,1.32,1075,2.164,1076,1.839,1077,2.164,1078,1.839,1080,2.625,1083,1.839,1088,1.839,1094,2.809,1095,1.839,1096,1.839,1097,1.839,1098,1.839,1099,1.839,1100,1.839,1101,1.839,1102,1.839,1103,1.839,1104,3.47,1105,1.417,1113,3.159,1114,3.159,1115,1.839,1116,3.159,1117,3.159,1118,3.159,1119,4.289,1120,3.159,1121,3.159,1122,1.839,1123,3.69,1124,2.547,1125,2.417,1126,2.547,1127,2.547,1128,3.174,1129,3.458,1130,2.164,1131,3.458,1132,2.547,1133,2.417,1134,2.547,1135,2.417,1136,2.417,1137,3.419,1138,2.338,1139,1.531,1140,1.417,1141,2.069,1142,2.069,1143,1.668,1144,2.547,1145,3.174,1146,1.668,1147,2.547,1148,2.547,1149,1.668,1150,1.668,1151,2.069,1152,2.069,1153,2.069,1154,2.069,1155,2.069,1156,1.839,1157,1.839,1158,2.069,1159,2.069,1160,2.069,1161,2.069,1162,1.417,1163,2.069,1164,2.069,1165,2.069,1166,2.069,1167,2.069,1168,1.839,1169,1.668,1170,2.069,1171,4.211,1172,4.289,1173,4.289,1174,4.289,1175,3.69,1176,3.159,1177,3.159,1178,2.809,1179,3.159,1180,3.69]],["title/interfaces/Location.html",[139,1.637,242,0.77]],["body/interfaces/Location.html",[2,0.269,3,0.269,4,0.201,6,0.304,16,0.02,18,0.361,42,0.269,66,0.017,67,0.017,70,0.415,71,1.927,75,0.897,86,2.346,139,3.303,163,2.15,242,1.347,269,3.137,854,5.326,855,5.326,1181,4.578,1182,5.349,1183,6.346,1184,6.346]],["title/components/LoginComponent.html",[97,0.281,225,1.004]],["body/components/LoginComponent.html",[2,0.159,3,0.159,4,0.119,6,0.18,7,0.955,9,0.808,11,1.023,12,1.852,13,1.002,15,1.173,16,0.021,17,0.859,18,0.325,19,0.536,26,1.421,27,0.808,30,0.748,31,0.955,32,0.476,33,0.874,39,1.139,42,0.159,43,0.201,44,1.579,46,1.311,53,0.886,54,2.667,55,1.121,56,1.181,66,0.012,67,0.012,70,0.349,75,0.636,81,1.126,97,0.468,98,0.874,99,1.139,100,1.139,101,1.139,108,1.696,109,1.079,110,2.232,111,2.111,113,1.456,115,1.456,125,1.847,126,2.974,128,0.955,129,1.278,131,2.736,141,1.456,154,1.62,156,1.915,161,1.023,162,1.536,169,1.271,171,2.003,172,1.008,198,3.105,200,1.023,201,1.382,202,1.311,203,2.055,204,1.139,205,0.921,206,1.139,207,1.139,208,0.921,209,1.139,210,0.874,211,1.139,212,0.874,213,0.874,214,1.139,215,0.874,216,1.139,217,0.874,218,1.139,219,0.874,220,1.139,221,0.921,222,1.139,223,0.874,224,1.139,225,1.579,226,1.139,227,0.921,228,1.139,229,0.921,230,1.139,231,0.874,232,1.139,233,0.874,234,1.139,235,0.874,236,1.139,237,0.921,238,0.971,239,0.874,240,1.079,241,1.139,246,2.638,248,3.851,252,3.939,256,3.939,265,2.257,282,2.457,284,3.676,312,2.03,428,3.939,430,3.55,463,2.85,486,2.638,547,2.638,571,3.851,584,2.85,699,1.202,705,2.638,716,1.426,718,1.271,737,3.105,775,2.406,823,2.638,876,3.424,891,3.105,895,3.424,934,2.457,972,3.424,988,3.424,1022,2.736,1038,4.885,1162,2.638,1185,2.706,1186,6.268,1187,4.499,1188,4.499,1189,4.499,1190,5.707,1191,5.707,1192,4.499,1193,4.499,1194,3.161,1195,4.499,1196,3.161,1197,4.499,1198,3.161,1199,3.161,1200,4.499,1201,2.003,1202,3.161,1203,3.161,1204,4.499]],["title/injectables/MapsControllerService.html",[31,0.77,322,2.299]],["body/injectables/MapsControllerService.html",[2,0.321,3,0.186,4,0.139,6,0.21,7,1.064,9,0.664,13,0.91,15,1.275,16,0.021,17,0.857,18,0.324,19,0.965,26,1.418,27,1.231,29,3.228,30,0.816,31,1.208,32,0.556,37,1.888,42,0.186,43,0.235,45,2.018,52,1.454,55,1.249,66,0.014,67,0.014,70,0.441,74,2.134,76,3.168,81,1.305,97,0.389,128,1.064,129,1.123,135,2.016,139,3.038,156,2.716,172,1.43,190,3.178,192,2.941,197,3.178,249,3.339,265,1.806,274,4.293,281,3.743,290,2.739,322,3.178,356,2.551,367,4.405,370,2.167,431,2.823,454,1.907,547,3.581,551,2.813,577,2.813,579,2.342,580,2.813,583,2.263,621,3.817,698,3.461,762,3.178,784,3.461,837,2.908,839,2.941,854,5.009,855,5.009,858,4.293,934,2.739,939,3.178,1205,5.226,1206,2.813,1207,5.015,1208,5.015,1209,3.696,1210,4.293,1211,5.015,1212,3.696,1213,5.015,1214,5.693,1215,3.461,1216,5.015,1217,3.163,1218,5.015,1219,5.015,1220,2.941,1221,2.551,1222,3.696,1223,3.163,1224,4.293]],["title/interfaces/Marker.html",[242,0.77,1215,2.504]],["body/interfaces/Marker.html",[2,0.232,3,0.232,4,0.173,6,0.262,16,0.021,18,0.398,19,1.237,28,2.915,42,0.232,53,0.824,55,1.442,66,0.016,67,0.016,70,0.357,71,2.467,75,0.818,76,3.155,81,1.318,86,2.051,104,4.956,139,3.155,242,1.229,269,3.395,431,2.547,477,2.916,504,1.851,563,4.406,585,2.916,662,3.162,723,5.689,897,4.956,1215,4.825,1225,3.94,1226,6.647,1227,6.647,1228,6.647,1229,5.79,1230,6.334,1231,5.79,1232,4.603,1233,4.603,1234,3.94]],["title/injectables/MatchingControllerService.html",[31,0.77,323,1.544]],["body/injectables/MatchingControllerService.html",[2,0.111,3,0.111,4,0.083,6,0.125,7,0.73,9,0.396,13,0.995,15,1.394,16,0.021,17,0.936,18,0.354,19,1.055,27,1.335,29,3.395,30,0.71,31,1.098,32,0.332,37,1.126,42,0.111,43,0.14,45,1.204,52,0.73,53,0.916,66,0.009,67,0.015,70,0.491,81,0.618,86,2.396,91,3.465,128,0.73,129,0.77,165,2.252,172,1.494,249,3.034,250,4.009,258,2.616,260,1.648,261,5.068,265,1.238,269,3.215,323,1.463,367,3.783,370,1.293,421,3.632,423,0.714,431,1.382,453,2.942,482,3.025,504,2.381,551,1.678,555,3.948,566,3.616,572,3.632,577,1.678,578,1.887,579,1.397,580,1.678,649,2.81,655,2.178,660,2.86,662,3.234,669,1.877,754,2.016,762,2.178,766,1.756,778,2.942,814,3.492,829,3.913,942,2.942,972,3.632,976,3.752,1040,3.819,1073,1.204,1206,1.678,1210,4.084,1217,1.887,1224,1.887,1235,5.425,1236,3.437,1237,3.437,1238,3.437,1239,3.437,1240,3.437,1241,3.437,1242,3.437,1243,3.437,1244,3.437,1245,2.204,1246,3.437,1247,6.732,1248,2.204,1249,3.437,1250,6.787,1251,4.772,1252,5.921,1253,3.437,1254,2.204,1255,3.437,1256,2.204,1257,4.772,1258,3.437,1259,3.437,1260,3.437,1261,2.204,1262,3.437,1263,3.437,1264,3.437,1265,4.225,1266,3.437,1267,3.437,1268,2.204,1269,3.437,1270,3.437,1271,3.437,1272,2.204,1273,3.437,1274,2.204,1275,3.437,1276,2.204,1277,1.678,1278,4.225,1279,2.204,1280,1.887,1281,2.204,1282,2.204,1283,2.204,1284,2.204,1285,3.437,1286,3.437,1287,3.437,1288,3.437,1289,2.204,1290,3.437]],["title/components/NavbarComponent.html",[97,0.281,229,1.058]],["body/components/NavbarComponent.html",[2,0.124,3,0.124,4,0.093,6,0.141,7,0.797,9,0.675,11,1.765,12,1.674,13,1.057,15,0.554,16,0.021,17,0.763,18,0.31,19,0.77,20,2.038,23,1.8,26,1.263,27,1.072,28,2.538,30,0.712,32,0.372,33,0.684,39,0.891,42,0.124,43,0.157,44,1.039,46,1.478,52,1.218,53,0.893,54,2.926,55,0.935,56,0.986,65,1.566,66,0.01,67,0.01,70,0.291,75,0.531,81,0.816,92,2.379,97,0.519,98,0.684,99,0.891,100,0.891,101,0.891,103,1.927,108,1.47,109,0.844,110,2.163,111,2.062,113,1.216,115,1.216,125,1.641,126,2.84,128,1.304,129,1.286,130,3.636,131,1.8,132,1.8,133,1.8,134,1.8,135,2.038,136,1.8,141,1.858,154,2.213,157,1.153,161,0.8,162,0.844,163,0.759,169,0.994,171,1.566,172,1.136,177,1.51,200,0.8,201,1.153,202,1.094,203,1.826,204,0.891,205,0.721,206,0.891,207,0.891,208,0.721,209,0.891,210,0.684,211,0.891,212,0.684,213,1.256,214,0.891,215,0.684,216,0.891,217,0.684,218,0.891,219,0.684,220,0.891,221,0.721,222,0.891,223,0.684,224,0.891,225,0.684,226,0.891,227,0.721,228,0.891,229,1.478,230,0.891,231,0.684,232,0.891,233,0.684,234,0.891,235,0.684,236,0.891,237,0.721,238,1.394,239,0.684,240,0.844,241,0.891,264,1.918,265,1.352,282,3.257,287,2.116,288,3.197,294,2.858,300,2.858,306,1.882,326,3.139,419,3.214,428,1.706,430,1.918,431,1.51,435,2.591,438,4.884,446,4.339,454,1.428,464,2.43,472,3.878,505,2.589,522,2.858,542,1.882,548,3.886,584,2.379,585,2.379,636,2.116,684,2.379,699,0.94,716,1.116,717,2.858,718,0.994,823,2.202,827,1.263,883,4.339,973,2.591,980,2.591,1022,2.43,1024,4.339,1034,1.263,1035,2.116,1036,2.116,1074,1.35,1110,4.241,1201,1.566,1291,2.116,1292,3.755,1293,3.755,1294,3.755,1295,6.418,1296,5.07,1297,5.07,1298,3.755,1299,3.755,1300,2.472,1301,5.07,1302,3.755,1303,3.755,1304,3.755,1305,2.472,1306,2.472,1307,3.755,1308,3.755,1309,3.755,1310,3.214,1311,3.755,1312,2.472,1313,2.472,1314,2.472,1315,3.755,1316,2.472,1317,2.472,1318,2.472,1319,2.858,1320,3.755,1321,3.755,1322,3.755,1323,2.472,1324,2.472,1325,2.472,1326,2.472,1327,2.472,1328,2.472,1329,2.472,1330,2.472,1331,5.964,1332,2.472,1333,2.472,1334,3.755]],["title/interfaces/Office.html",[144,2.128,242,0.77]],["body/interfaces/Office.html",[2,0.259,3,0.259,4,0.194,6,0.293,16,0.021,17,1.081,18,0.379,42,0.259,53,0.639,66,0.017,67,0.017,70,0.399,71,1.855,75,0.877,76,3.118,81,1.291,86,2.155,91,3.444,139,2.799,144,4.327,157,1.582,242,1.317,655,3.931,1335,4.408,1336,6.204,1337,6.204,1338,6.204]],["title/directives/PlacesAutocompleteDirective.html",[56,0.952,239,1.004]],["body/directives/PlacesAutocompleteDirective.html",[2,0.201,3,0.201,4,0.15,6,0.227,7,1.121,9,0.717,13,1.007,15,0.894,16,0.021,17,0.6,18,0.337,19,0.677,27,0.949,30,0.734,31,1.121,32,0.6,42,0.201,43,0.254,44,1.46,45,2.179,46,1.835,52,1.121,53,0.655,56,1.553,66,0.014,67,0.014,70,0.409,72,4.018,75,0.746,108,1.916,109,1.362,110,1.622,125,2.039,128,1.337,129,1.411,141,1.292,149,2.382,172,1.325,177,2.123,201,1.622,202,2.075,239,1.46,240,1.802,264,2.697,299,4.503,312,2.382,356,2.754,372,4.985,398,4.792,423,1.709,431,2.123,505,2.697,646,2.754,669,2.883,754,3.096,885,5.39,1130,3.096,1339,5.606,1340,3.415,1341,6.297,1342,5.917,1343,3.99,1344,5.606,1345,7.052,1346,5.28,1347,6.73,1348,5.917,1349,5.28,1350,6.297,1351,3.99,1352,5.28,1353,4.519,1354,5.917,1355,3.99,1356,5.28,1357,3.415,1358,3.99,1359,3.99,1360,3.99,1361,3.99,1362,3.99,1363,3.99,1364,3.99,1365,3.99,1366,3.99]],["title/interfaces/Register.html",[242,0.77,705,2.128]],["body/interfaces/Register.html",[2,0.307,3,0.252,4,0.189,6,0.285,16,0.02,17,0.918,18,0.374,42,0.252,53,0.911,55,1.247,66,0.017,67,0.017,70,0.388,71,1.804,74,2.131,75,0.862,81,1.32,97,0.388,103,1.778,107,5.221,149,3.26,150,4.642,242,1.295,284,4.186,290,2.735,465,3.898,486,2.937,504,2.013,575,4.21,705,3.577,891,4.725,1367,4.286,1368,6.1,1369,6.1]],["title/components/RideswipeComponent.html",[97,0.281,231,1.004]],["body/components/RideswipeComponent.html",[2,0.188,3,0.188,4,0.14,6,0.212,7,1.071,9,0.907,12,2.073,13,0.914,15,0.835,16,0.021,17,0.922,18,0.212,19,0.632,26,1.425,27,0.67,30,0.626,32,0.561,33,1.031,42,0.188,43,0.237,44,1.396,46,1.087,53,0.626,56,1.325,66,0.014,67,0.017,70,0.391,75,0.713,97,0.55,98,1.031,99,1.343,100,1.343,101,1.343,103,1.471,108,1.851,109,1.273,110,2.272,111,2.15,113,1.634,115,1.634,125,1.984,128,1.301,129,1.13,132,2.419,133,2.419,134,2.419,135,2.029,136,2.419,141,1.207,157,1.55,161,2.185,162,1.952,163,1.145,172,0.835,194,3.197,200,1.207,201,1.55,202,1.471,203,2.207,204,1.343,205,1.087,206,1.343,207,1.343,208,1.087,209,1.343,210,1.031,211,1.343,212,1.031,213,1.031,214,1.343,215,1.031,216,1.343,217,1.031,218,1.343,219,1.031,220,1.343,221,1.087,222,1.343,223,1.031,224,1.343,225,1.031,226,1.343,227,1.087,228,1.343,229,1.087,230,1.343,231,1.695,232,1.343,233,1.031,234,1.343,235,1.031,236,1.343,237,1.087,238,1.145,239,1.031,240,1.273,241,1.343,281,3.354,433,4.319,449,2.838,464,3.164,669,2.756,699,1.418,718,1.499,816,4.935,817,3.87,827,2.577,828,3.192,876,3.84,948,3.84,1201,2.363,1370,3.192,1371,4.319,1372,5.046,1373,5.046,1374,5.046,1375,5.046,1376,3.729,1377,5.046]],["title/interfaces/RouteInfo.html",[242,0.77,1221,2.504]],["body/interfaces/RouteInfo.html",[2,0.265,3,0.265,4,0.199,6,0.3,16,0.02,18,0.358,26,1.773,42,0.265,66,0.017,67,0.017,70,0.409,75,0.889,86,2.338,89,4.788,242,1.335,265,1.899,454,2.005,482,2.693,761,4.012,839,4.236,1220,3.69,1221,4.342,1378,4.512,1379,5.271,1380,6.965,1381,6.965,1382,6.291]],["title/classes/SwipecardModel.html",[43,0.231,1070,2.299]],["body/classes/SwipecardModel.html",[2,0.262,3,0.262,4,0.196,6,0.296,13,0.997,16,0.021,18,0.296,30,0.644,42,0.262,43,0.397,53,0.929,66,0.017,67,0.017,70,0.403,71,2.246,75,0.882,162,1.774,163,1.596,165,2.372,201,1.916,482,3.186,504,2.508,664,4.447,827,3.186,1070,3.952,1106,5.479,1383,4.447,1384,6.932,1385,5.196,1386,5.196]],["title/injectables/TokenStorage.html",[31,0.77,552,2.299]],["body/injectables/TokenStorage.html",[2,0.229,3,0.229,4,0.171,6,0.259,7,1.404,9,0.817,13,0.918,15,1.018,16,0.021,17,0.684,18,0.259,19,0.771,27,1.189,30,0.564,31,1.337,32,0.684,40,2.666,41,2.179,42,0.229,43,0.289,50,2.268,55,1.569,66,0.016,67,0.016,70,0.445,81,1.271,131,3.464,141,1.472,143,3.964,154,2.383,160,3.137,172,1.018,265,2.383,281,4.087,305,3.137,423,1.472,465,4.053,472,4.15,473,3.137,477,4.192,552,3.639,646,3.137,1387,3.459,1388,6.616,1389,5.744,1390,4.546,1391,5.744,1392,4.546,1393,3.459,1394,3.891,1395,4.546,1396,4.546]],["title/injectables/UploadService.html",[31,0.77,1397,2.761]],["body/injectables/UploadService.html",[2,0.18,3,0.18,4,0.274,6,0.204,7,1.042,9,1.006,13,1.009,15,0.802,16,0.021,17,0.907,18,0.279,19,0.607,27,1.239,30,0.609,31,1.34,32,0.539,40,2.101,41,2.686,42,0.18,43,0.228,48,3.988,49,3.388,52,1.443,55,1.624,65,2.269,66,0.013,67,0.013,70,0.381,74,2.089,75,0.694,81,1.006,86,1.16,92,2.269,97,0.381,103,1.044,128,1.042,129,1.1,130,3.11,143,3.388,149,1.616,157,1.508,162,1.223,163,1.1,172,1.1,177,1.974,246,2.101,305,2.681,312,2.215,423,1.813,504,1.974,505,1.83,523,4.795,561,2.472,583,2.215,648,4.202,662,3.291,737,2.472,739,1.956,769,4.202,827,1.83,1156,2.726,1157,3.736,1168,2.726,1280,3.066,1319,3.736,1397,3.736,1398,3.066,1399,6.979,1400,5.158,1401,4.909,1402,7.295,1403,6.898,1404,6.026,1405,4.909,1406,6.521,1407,6.026,1408,4.909,1409,4.909,1410,3.582,1411,4.909,1412,3.582,1413,5.601,1414,3.582,1415,3.066,1416,3.582,1417,3.582,1418,3.582,1419,3.582,1420,3.582,1421,3.582,1422,3.582,1423,3.582,1424,3.582,1425,3.582,1426,3.582,1427,3.582,1428,3.582,1429,3.582,1430,3.582,1431,3.582,1432,3.582,1433,3.582,1434,4.909,1435,6.026,1436,3.582,1437,3.582,1438,3.582,1439,3.582]],["title/interfaces/User.html",[53,0.45,242,0.77]],["body/interfaces/User.html",[2,0.167,3,0.167,4,0.125,6,0.189,16,0.021,17,0.878,18,0.409,19,0.791,30,0.762,42,0.167,48,3.736,50,1.679,53,0.892,66,0.013,67,0.013,70,0.258,71,1.679,74,1.984,75,0.659,76,2.874,81,1.335,83,2.734,86,2.062,91,3.054,117,4.995,138,2.381,144,3.837,154,1.679,155,3.187,156,2.483,157,1.432,165,1.773,177,1.874,213,1.877,238,1.792,242,0.989,258,3.547,273,3.99,284,3.422,291,3.547,292,3.99,293,2.734,422,3.547,431,1.874,454,1.773,464,2.235,472,2.734,486,2.734,547,2.734,562,4.028,655,2.953,660,3.102,665,2.845,698,3.217,759,3.604,763,2.75,766,3.707,836,3.217,837,2.381,882,3.99,890,3.99,891,4.028,980,3.217,1110,4.745,1178,4.441,1220,2.734,1223,2.845,1440,2.845,1441,6.371,1442,5.836,1443,5.836,1444,5.836,1445,5.836,1446,6.371,1447,4.661,1448,4.661,1449,4.661,1450,4.661,1451,4.661,1452,4.661,1453,4.661,1454,4.661,1455,4.661,1456,4.661,1457,3.324,1458,2.845,1459,3.324]],["title/interfaces/UserCard.html",[242,0.77,434,1.739]],["body/interfaces/UserCard.html",[2,0.26,3,0.155,4,0.116,6,0.175,9,0.554,11,1.673,12,1.587,13,0.493,16,0.021,18,0.294,20,1.777,23,1.479,26,1.101,29,1.479,30,0.794,32,0.464,33,0.853,39,1.592,42,0.223,43,0.196,44,0.853,46,1.506,50,1.592,52,1.097,53,0.895,55,1.287,66,0.012,67,0.014,70,0.239,75,0.625,81,1.117,97,0.482,103,0.899,108,1.431,110,0.947,111,0.899,113,0.998,115,0.998,125,0.998,128,0.938,129,0.691,132,1.479,133,1.479,134,1.479,135,1.24,136,1.479,146,1.954,154,1.111,157,1.733,165,1.681,169,1.24,172,1.157,174,1.684,177,2.574,223,0.853,242,0.938,253,2.592,260,2.119,293,3.841,305,1.684,323,2.199,364,1.684,378,2.414,423,0.998,434,2.98,489,2.347,494,2.347,504,1.777,505,1.575,586,1.994,639,2.347,649,2.542,651,1.954,660,2.695,662,1.684,699,1.681,716,1.391,718,1.24,729,2.128,759,3.03,763,2.258,766,1.575,814,3.051,817,1.809,824,2.128,899,2.801,915,3.785,934,3.496,955,2.128,1002,2.128,1022,2.119,1034,1.575,1040,1.684,1063,2.592,1065,2.347,1067,1.809,1068,2.347,1071,3.932,1073,1.684,1074,1.684,1075,2.592,1076,2.347,1077,2.592,1078,2.347,1080,3.03,1083,2.347,1088,2.347,1094,3.364,1095,2.347,1096,2.347,1097,2.347,1098,2.347,1099,2.347,1100,2.347,1101,2.347,1102,2.347,1103,2.347,1104,3.03,1105,1.809,1115,2.347,1116,2.64,1117,2.64,1118,2.64,1119,2.64,1124,2.128,1126,2.128,1127,2.128,1128,2.801,1129,3.051,1130,1.809,1131,4.29,1132,2.128,1134,2.128,1137,3.785,1138,2.801,1139,1.954,1140,1.809,1141,3.783,1142,3.783,1143,2.128,1144,3.051,1145,3.575,1146,2.128,1147,3.051,1148,3.051,1149,2.128,1150,2.128,1151,2.64,1152,2.64,1153,2.64,1154,2.64,1155,2.64,1156,2.347,1157,2.347,1158,2.64,1159,2.64,1160,2.64,1161,2.64,1162,1.809,1163,2.64,1164,2.64,1165,2.64,1166,2.64,1167,2.64,1168,2.347,1169,2.128,1170,2.64,1171,4.52]],["title/interfaces/UserCard-1.html",[242,0.643,434,1.452,739,1.654]],["body/interfaces/UserCard-1.html",[2,0.134,3,0.134,4,0.1,6,0.226,9,0.478,11,1.535,12,1.218,16,0.021,18,0.27,20,1.594,23,1.274,26,0.662,28,2.018,30,0.779,31,0.564,32,0.4,33,0.735,39,1.428,42,0.134,43,0.169,44,0.735,46,1.382,50,0.957,52,1.007,53,0.915,57,2.025,66,0.011,67,0.017,70,0.206,71,1.894,74,1.131,75,0.561,81,1.06,83,1.559,86,1.702,97,0.408,103,0.775,108,1.284,110,0.816,111,0.775,113,0.86,115,0.86,125,0.86,128,1.116,129,0.888,138,1.358,154,1.708,155,1.451,156,1.131,157,0.816,160,2.59,161,1.535,165,1.011,169,1.069,172,1.321,177,2.261,192,2.325,194,2.512,201,1.218,202,0.775,235,0.735,238,1.218,242,0.842,253,2.325,260,1.901,293,3.765,323,2.018,364,1.451,378,2.165,420,3.017,423,1.535,434,3.078,460,1.834,464,2.274,471,1.834,482,2.025,583,1.789,586,2.14,619,3.629,623,3.629,649,1.131,660,2.372,669,1.451,691,3.017,699,2.139,716,1.199,718,1.069,739,2.59,814,1.358,817,1.559,829,3.298,836,1.834,837,1.358,839,1.559,906,2.023,915,3.737,934,3.337,939,1.684,976,3.005,990,1.834,1022,1.274,1034,1.358,1063,2.325,1067,1.559,1073,1.451,1074,1.451,1075,2.325,1077,2.781,1080,2.781,1081,2.736,1082,2.736,1104,3.765,1105,1.559,1124,1.834,1126,1.834,1127,1.834,1128,2.512,1129,2.736,1130,1.559,1131,4.218,1132,1.834,1134,1.834,1137,3.563,1138,2.512,1139,1.684,1140,1.559,1143,1.834,1144,2.736,1145,3.331,1146,1.834,1147,2.736,1148,2.736,1149,1.834,1150,1.834,1162,2.781,1169,3.273,1171,4.335,1201,1.684,1220,1.559,1277,2.023,1460,2.023,1461,3.017,1462,2.275,1463,2.275,1464,2.275,1465,2.023,1466,2.275,1467,2.275,1468,2.275,1469,2.023,1470,2.275,1471,2.023,1472,2.023,1473,3.394,1474,2.023,1475,4.059,1476,2.275,1477,2.275,1478,4.489,1479,2.275,1480,2.275,1481,2.023,1482,2.275,1483,4.5,1484,3.017,1485,5.049,1486,2.023,1487,3.017,1488,2.023,1489,2.275,1490,2.275,1491,2.275,1492,3.017,1493,4.059]],["title/components/UsercardComponent.html",[97,0.281,233,1.004]],["body/components/UsercardComponent.html",[2,0.247,3,0.099,4,0.148,6,0.223,7,0.668,9,0.565,11,1.586,12,1.505,13,1.052,15,0.879,16,0.021,17,0.857,18,0.356,19,0.666,20,1.802,23,1.882,26,1.117,27,0.88,28,1.671,30,0.706,31,0.668,32,0.296,33,0.545,39,1.133,42,0.099,43,0.125,44,0.87,46,1.144,50,1.133,52,0.951,53,0.861,56,0.826,66,0.009,67,0.016,70,0.244,71,1.615,74,1.338,75,0.445,76,1.419,81,0.938,83,1.155,86,1.018,97,0.477,98,0.545,99,0.709,100,0.709,101,0.709,103,1.307,108,1.271,109,0.672,110,2.087,111,1.967,113,1.018,115,1.018,125,1.451,128,1.04,129,1.004,132,1.508,133,1.508,134,1.508,135,1.264,136,1.508,138,2.29,139,1.419,141,1.586,145,2.71,154,2.114,155,1.718,156,1.338,157,0.966,160,2.448,161,1.775,162,1.871,163,1.684,165,1.705,169,0.792,172,1.004,174,1.076,177,2.1,200,0.638,201,0.966,202,1.598,203,1.615,204,0.709,205,0.574,206,0.709,207,0.709,208,0.574,209,0.709,210,0.545,211,0.709,212,0.545,213,1.086,214,0.709,215,0.545,216,0.709,217,0.545,218,0.709,219,0.545,220,0.709,221,0.574,222,0.709,223,0.545,224,0.709,225,0.545,226,0.709,227,0.574,228,0.709,229,0.574,230,0.709,231,0.545,232,0.709,233,1.24,234,0.709,235,0.545,236,0.709,237,0.574,238,0.605,239,0.545,240,0.672,241,0.709,260,1.508,323,2.085,364,1.076,378,3.206,423,0.638,434,1.508,487,2.988,491,1.993,504,1.264,562,2.171,583,2.023,586,1.419,660,1.419,669,1.718,699,2.232,716,0.889,718,0.792,739,2.448,763,1.607,782,1.248,816,2.171,823,1.845,827,1.006,916,1.686,935,1.499,938,2.394,948,2.394,990,4.496,1022,2.149,1034,1.006,1040,1.718,1062,4.471,1063,2.303,1067,1.845,1070,3.607,1072,1.686,1073,1.076,1074,1.076,1075,1.845,1077,2.303,1079,1.686,1080,2.303,1081,1.359,1082,1.359,1104,2.629,1105,1.155,1106,1.499,1107,1.686,1122,1.499,1137,3.309,1138,1.993,1139,2.488,1140,1.155,1145,3.104,1234,2.692,1344,4.692,1353,2.692,1400,2.692,1458,2.692,1461,2.394,1465,2.394,1469,2.394,1471,1.499,1472,1.499,1474,1.499,1484,1.499,1486,1.499,1487,1.499,1488,1.499,1494,1.686,1495,3.145,1496,3.145,1497,4.483,1498,4.483,1499,4.483,1500,4.483,1501,4.483,1502,4.483,1503,4.483,1504,4.483,1505,3.145,1506,3.926,1507,3.145,1508,3.145,1509,1.97,1510,4.9,1511,1.97,1512,3.145,1513,1.97,1514,5.482,1515,3.926,1516,1.97,1517,1.97,1518,3.926,1519,4.483,1520,1.97,1521,3.837,1522,4.483,1523,1.97,1524,1.97,1525,1.97,1526,1.97,1527,5.482,1528,3.145,1529,5.482,1530,3.145,1531,1.97,1532,3.145,1533,3.145,1534,3.926,1535,4.483,1536,3.145,1537,1.97,1538,3.145,1539,1.97,1540,3.926,1541,1.97,1542,3.145,1543,1.97,1544,1.97,1545,1.97,1546,1.97,1547,1.97,1548,1.97,1549,1.97,1550,1.97,1551,3.145,1552,1.97,1553,1.97,1554,1.97,1555,3.145,1556,1.97,1557,1.97,1558,1.686,1559,1.97,1560,1.97,1561,1.97,1562,1.97,1563,1.97,1564,1.97,1565,1.97,1566,1.97,1567,1.97,1568,3.145,1569,1.97,1570,1.97,1571,1.97,1572,1.97,1573,1.97,1574,3.145,1575,5.223,1576,3.145,1577,1.97,1578,4.483,1579,1.97,1580,1.97,1581,1.97,1582,1.97,1583,4.483,1584,4.483,1585,3.145,1586,3.145,1587,3.145,1588,3.145,1589,3.837,1590,3.837,1591,3.145,1592,3.145,1593,1.97,1594,3.145,1595,1.97]],["title/components/UsermatchwebComponent.html",[97,0.281,235,1.004]],["body/components/UsermatchwebComponent.html",[2,0.101,3,0.101,4,0.076,6,0.226,7,0.678,9,0.574,11,1.601,12,1.392,13,0.988,15,1.015,16,0.021,17,0.831,18,0.336,19,0.769,20,1.822,23,0.963,26,0.99,27,0.889,28,2.514,30,0.711,31,0.678,32,0.302,33,0.555,39,1.15,42,0.101,43,0.128,44,0.883,46,1.159,50,1.15,52,1.05,53,0.907,56,0.838,57,1.026,66,0.009,67,0.018,70,0.384,71,1.15,74,1.359,75,0.451,81,0.574,83,1.177,86,1.856,97,0.458,98,0.555,99,0.723,100,0.723,101,0.723,103,0.931,108,1.287,109,0.685,110,2.094,111,1.974,113,1.034,115,1.034,125,1.467,128,1.172,129,1.015,138,2.691,141,1.601,154,1.782,155,2.475,156,1.929,157,0.981,160,2.172,161,1.788,162,0.685,163,0.617,165,1.215,169,0.807,172,1.18,177,1.989,192,1.873,194,1.272,200,0.65,201,1.221,202,1.159,203,1.632,204,0.723,205,0.585,206,0.723,207,0.723,208,0.585,209,0.723,210,0.555,211,0.723,212,0.555,213,0.555,214,0.723,215,0.555,216,0.723,217,0.555,218,0.723,219,0.555,220,0.723,221,0.585,222,0.723,223,0.555,224,0.723,225,0.555,226,0.723,227,0.585,228,0.723,229,0.585,230,0.723,231,0.555,232,0.723,233,0.555,234,0.723,235,1.254,236,0.723,237,0.585,238,0.981,239,0.555,240,0.685,241,0.723,242,0.426,253,1.177,260,1.531,293,3.464,294,1.528,323,2.105,364,1.096,378,1.744,420,1.528,423,1.287,434,3.101,460,2.204,464,2.525,471,1.386,482,1.026,583,2.045,586,1.794,619,3.128,623,3.128,649,0.854,660,1.794,669,1.744,691,3.449,699,1.881,716,0.906,718,0.807,739,2.172,753,2.43,814,1.026,817,1.873,829,3.688,836,3.128,837,2.315,839,2.658,880,1.528,906,3.449,915,2.519,934,3.017,939,2.023,976,2.519,990,1.386,1002,1.386,1022,2.173,1034,1.026,1063,2.332,1067,1.873,1073,1.096,1074,1.096,1075,1.873,1077,2.332,1080,2.332,1081,2.204,1082,2.204,1104,3.837,1105,1.177,1120,2.734,1121,2.734,1122,1.528,1124,2.204,1126,2.204,1127,2.204,1128,2.871,1129,3.128,1130,1.873,1131,3.414,1132,2.204,1134,2.204,1137,3.134,1138,2.023,1139,1.272,1140,1.177,1143,1.386,1144,2.204,1145,2.871,1146,1.386,1147,2.204,1148,2.204,1149,1.386,1150,1.386,1162,2.332,1169,2.744,1171,3.957,1172,3.879,1173,3.879,1174,2.734,1176,3.879,1177,2.734,1178,2.43,1179,2.734,1201,1.272,1220,2.901,1277,1.528,1460,1.528,1461,1.528,1462,2.734,1463,2.734,1464,2.734,1465,1.528,1466,3.879,1467,3.879,1468,3.879,1469,2.43,1470,1.719,1471,1.528,1472,1.528,1473,2.734,1474,1.528,1475,3.404,1476,2.734,1477,2.734,1478,4.363,1479,2.734,1480,2.734,1481,1.528,1482,1.719,1483,3.879,1484,2.43,1485,4.509,1486,1.528,1487,2.43,1488,1.528,1489,1.719,1490,1.719,1491,1.719,1492,2.43,1493,3.404,1589,2.734,1590,2.734,1596,3.976,1597,3.194,1598,2.008,1599,2.008,1600,2.008,1601,2.008,1602,2.008,1603,2.008,1604,2.008,1605,2.008,1606,2.008,1607,2.008]],["title/coverage.html",[1608,4.239]],["body/coverage.html",[4,0.139,11,1.192,16,0.021,18,0.209,31,1.453,43,0.405,53,0.457,56,0.967,66,0.014,67,0.014,68,2.802,69,3.151,97,0.568,98,1.018,102,3.151,126,1.661,139,1.661,144,2.159,149,1.661,205,1.073,208,1.073,210,1.018,212,1.018,213,1.018,215,1.018,217,1.018,219,1.018,221,1.073,223,1.018,225,1.018,227,1.073,229,1.073,231,1.018,233,1.018,235,1.018,237,1.073,239,1.018,242,1.489,243,2.541,244,2.802,245,2.802,276,3.151,288,2.159,322,2.333,323,1.567,350,2.541,372,2.802,384,2.541,387,2.802,401,2.802,402,3.151,434,2.398,440,3.151,546,3.151,552,2.333,554,2.333,563,2.802,579,3.169,624,3.151,638,3.151,647,3.151,666,3.151,667,3.151,699,1.4,705,2.159,709,3.151,759,2.159,760,2.802,761,3.807,812,3.151,829,2.159,830,3.151,840,2.802,841,3.151,873,3.151,874,3.151,1016,3.151,1059,3.151,1070,2.333,1115,3.807,1128,2.333,1181,3.151,1185,3.151,1205,3.151,1206,4.324,1215,2.541,1221,2.541,1225,3.151,1235,3.151,1291,3.151,1335,3.151,1339,3.151,1340,3.151,1367,3.151,1370,3.151,1378,3.151,1383,3.151,1387,3.807,1393,2.802,1397,2.802,1398,3.151,1440,3.151,1460,3.807,1494,3.151,1608,3.151,1609,3.682,1610,3.682,1611,7.578,1612,6.726,1613,6.726,1614,3.682,1615,5.002,1616,3.682,1617,5.002,1618,3.682,1619,6.938,1620,6.096,1621,3.682,1622,3.682,1623,3.682,1624,5.002,1625,3.682,1626,3.682,1627,3.682,1628,3.682,1629,3.682,1630,3.682,1631,5.002,1632,6.096,1633,3.682,1634,3.682,1635,3.682,1636,3.682,1637,3.682,1638,4.851,1639,3.151,1640,3.151,1641,4.282,1642,3.151,1643,3.682]],["title/dependencies.html",[312,1.969,1644,3.029]],["body/dependencies.html",[16,0.021,32,0.767,33,1.41,37,3.149,66,0.017,67,0.017,282,2.783,312,2.299,314,3.878,332,5.276,333,4.254,339,4.362,342,3.878,343,4.362,356,3.517,377,4.362,378,2.783,379,4.362,414,4.362,514,4.362,1140,2.988,1357,4.362,1415,4.362,1645,5.096,1646,5.096,1647,7.366,1648,5.096,1649,6.164,1650,5.096,1651,5.096,1652,5.096,1653,5.096,1654,5.096,1655,5.096,1656,5.096,1657,5.096,1658,5.096,1659,5.096,1660,5.096,1661,5.096,1662,5.096,1663,5.096,1664,5.096,1665,5.096,1666,5.096,1667,5.096,1668,5.096,1669,5.096,1670,5.096]],["title/miscellaneous/enumerations.html",[1671,1.777,1672,3.735]],["body/miscellaneous/enumerations.html",[2,0.25,6,0.207,16,0.021,18,0.321,23,2.909,27,0.654,53,0.616,66,0.014,67,0.014,71,2.035,74,1.549,91,1.745,112,3.145,157,1.118,163,2.354,244,2.77,245,3.778,246,2.135,264,1.859,268,3.778,269,2.135,271,3.116,272,3.116,275,4.249,454,1.384,575,3.426,649,2.112,684,2.306,760,2.77,763,1.859,881,3.116,910,4.249,911,4.249,912,4.249,970,4.249,976,3.145,1040,2.711,1049,3.116,1110,3.426,1478,4.299,1481,2.77,1671,2.135,1672,3.116,1673,3.64,1674,4.964,1675,3.64,1676,4.964,1677,3.64,1678,3.64,1679,3.64,1680,3.64,1681,3.64,1682,3.64,1683,3.64,1684,3.64,1685,3.116,1686,3.64,1687,3.64,1688,3.64,1689,3.64,1690,3.64,1691,3.64,1692,3.64,1693,3.64,1694,3.64,1695,3.64,1696,3.64,1697,3.64,1698,3.64,1699,3.64,1700,3.64,1701,3.64,1702,3.64,1703,3.64,1704,3.64,1705,3.64,1706,3.64,1707,3.64,1708,3.64,1709,3.64,1710,3.64,1711,3.64,1712,3.64,1713,3.64,1714,3.64,1715,3.64,1716,3.64,1717,3.64,1718,3.64,1719,3.64,1720,3.64,1721,3.64,1722,3.64,1723,3.64,1724,3.64,1725,3.64,1726,3.64,1727,3.64,1728,3.64,1729,3.64,1730,3.64,1731,3.64,1732,3.64,1733,3.64,1734,3.64,1735,3.64,1736,3.64,1737,3.64,1738,3.64,1739,3.64,1740,3.64,1741,3.64,1742,3.64,1743,3.64,1744,3.64,1745,3.64,1746,3.64,1747,3.64,1748,3.64,1749,3.64,1750,3.64,1751,3.64,1752,3.64,1753,3.64,1754,3.64,1755,3.64,1756,3.64,1757,3.64,1758,3.64,1759,3.64,1760,3.64,1761,3.116,1762,3.64,1763,3.64,1764,3.64,1765,3.64,1766,3.64,1767,3.64,1768,3.64,1769,3.64,1770,3.64,1771,3.64,1772,3.64,1773,3.64,1774,3.64,1775,3.64,1776,3.64,1777,3.64,1778,3.64,1779,3.64,1780,3.64,1781,3.64,1782,3.64,1783,3.64,1784,3.64,1785,3.64]],["title/index.html",[6,0.172,837,1.547,1162,1.777]],["body/index.html",[3,0.204,4,0.153,16,0.02,17,0.61,41,1.945,55,1.579,56,1.065,66,0.015,67,0.015,70,0.414,96,3.472,97,0.463,111,1.182,149,2.86,156,2.697,190,4.016,250,3.13,252,3.684,277,3.087,298,3.472,326,2.072,329,5.106,330,4.569,342,5.245,407,3.472,454,1.543,459,5.245,463,2.57,491,2.57,493,2.8,547,3.13,555,4.042,561,2.8,565,5.012,567,3.472,584,2.57,642,3.087,690,3.472,754,3.13,784,2.8,785,4.569,786,5.787,806,3.472,871,3.472,875,3.472,895,3.087,899,3.382,905,3.472,943,3.472,960,3.087,986,3.472,988,4.062,1008,3.472,1046,5.106,1130,4.042,1220,2.379,1310,3.472,1319,3.087,1371,3.472,1492,3.087,1685,4.569,1761,3.472,1786,4.057,1787,5.966,1788,4.057,1789,5.338,1790,4.057,1791,4.057,1792,4.057,1793,6.585,1794,4.057,1795,4.057,1796,5.338,1797,4.057,1798,4.057,1799,3.472,1800,7.244,1801,3.087,1802,4.057,1803,4.057,1804,5.966,1805,5.338,1806,7.142,1807,4.057,1808,4.057,1809,6.585,1810,5.338,1811,5.966,1812,5.966,1813,4.057,1814,5.966,1815,4.057,1816,6.585,1817,4.057,1818,4.057,1819,4.057,1820,4.057,1821,4.057,1822,5.338,1823,4.057,1824,4.057,1825,4.057,1826,4.057,1827,4.057,1828,5.338,1829,5.338,1830,3.472,1831,4.057,1832,4.057,1833,4.057]],["title/modules.html",[310,2.705]],["body/modules.html",[16,0.018,66,0.018,67,0.018,310,3.172,311,4.009,320,3.68,333,4.009,668,4.421,684,3.68,973,4.596,1834,5.809,1835,5.809]],["title/overview.html",[1801,3.769]],["body/overview.html",[0,3.246,11,1.979,16,0.021,26,1.062,31,0.905,42,0.215,43,0.271,56,1.12,66,0.015,67,0.015,97,0.331,98,1.691,126,2.758,192,2.501,200,1.381,205,1.781,208,2.033,210,1.691,212,1.691,215,1.691,217,1.691,219,1.691,221,1.781,223,1.691,225,1.691,227,1.781,229,1.781,231,1.691,233,1.691,235,1.691,237,1.781,239,1.691,242,0.905,265,1.536,267,3.872,310,3.012,311,5.301,312,1.925,313,2.944,314,3.246,315,3.651,316,3.651,317,3.651,318,3.651,319,3.651,320,3.872,321,4.218,322,3.872,323,2.601,324,4.721,325,3.651,326,2.179,739,3.012,1558,3.651,1801,3.246,1836,4.265,1837,4.265,1838,4.265,1839,4.265]],["title/routes.html",[26,1.234]],["body/routes.html",[16,0.018,26,1.473,66,0.018,67,0.018]],["title/miscellaneous/typealiases.html",[1671,1.777,1840,4.364]],["body/miscellaneous/typealiases.html",[6,0.317,16,0.018,18,0.37,48,3.269,55,1.389,66,0.018,67,0.018,75,0.788,81,1.168,431,2.241,583,2.515,621,4.243,660,3.106,662,3.044,1045,4.772,1521,4.772,1671,3.269,1841,5.575,1842,5.575,1843,7.093,1844,5.575,1845,5.575,1846,5.575,1847,5.575,1848,5.575,1849,5.575,1850,5.575]],["title/miscellaneous/variables.html",[1638,3.321,1671,1.777]],["body/miscellaneous/variables.html",[4,0.219,6,0.263,16,0.021,18,0.379,48,3.406,50,1.666,52,1.233,55,1.658,65,4.022,66,0.016,67,0.016,71,1.666,81,1.043,131,2.217,157,1.421,162,2.273,163,2.045,299,3.52,459,3.52,465,2.526,472,2.712,473,3.192,504,2.677,554,4.022,565,4.42,579,4.501,600,4.971,827,2.363,980,3.192,1387,3.52,1393,4.831,1394,3.959,1638,4.42,1639,3.959,1640,3.959,1641,3.959,1642,5.699,1671,2.712,1799,5.871,1830,3.959,1851,5.807,1852,4.625,1853,4.625,1854,4.625,1855,4.625,1856,4.625,1857,5.807,1858,4.625,1859,4.625,1860,4.625,1861,5.807,1862,6.859,1863,5.807,1864,5.807,1865,5.807,1866,5.807,1867,5.807,1868,5.807,1869,4.625,1870,4.625,1871,4.625,1872,4.625,1873,4.625,1874,4.625,1875,4.625]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/CallbackComponent.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":699,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{}}}],["0.8.19",{"_index":1670,"title":{},"body":{"dependencies.html":{}}}],["0/3",{"_index":1610,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":739,"title":{"interfaces/UserCard-1.html":{}},"body":{"components/CarRegistrationComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"overview.html":{}}}],["1\">car",{"_index":1112,"title":{},"body":{"components/LikesComponent.html":{}}}],["1.0.0",{"_index":1645,"title":{},"body":{"dependencies.html":{}}}],["1.0.11",{"_index":1664,"title":{},"body":{"dependencies.html":{}}}],["1.12.0",{"_index":1661,"title":{},"body":{"dependencies.html":{}}}],["1.7.0",{"_index":1788,"title":{},"body":{"index.html":{}}}],["1.amazonaws.com",{"_index":1436,"title":{},"body":{"injectables/UploadService.html":{}}}],["1.amazonaws.com/rydeforce/rydeforc",{"_index":1158,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["1.amazonaws.com:2222",{"_index":1868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1/1",{"_index":1613,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1838,"title":{},"body":{"overview.html":{}}}],["100",{"_index":1611,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":528,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["100000000000",{"_index":1424,"title":{},"body":{"injectables/UploadService.html":{}}}],["11.10.0",{"_index":1656,"title":{},"body":{"dependencies.html":{}}}],["11/11",{"_index":1617,"title":{},"body":{"coverage.html":{}}}],["11/12",{"_index":1626,"title":{},"body":{"coverage.html":{}}}],["11/13",{"_index":1637,"title":{},"body":{"coverage.html":{}}}],["11crandall.auth0.com",{"_index":492,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["13",{"_index":1839,"title":{},"body":{"overview.html":{}}}],["13/13",{"_index":1623,"title":{},"body":{"coverage.html":{}}}],["14/15",{"_index":1618,"title":{},"body":{"coverage.html":{}}}],["153",{"_index":1866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17",{"_index":1836,"title":{},"body":{"overview.html":{}}}],["17/17",{"_index":1624,"title":{},"body":{"coverage.html":{}}}],["174",{"_index":1865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":192,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"overview.html":{}}}],["2.0.8",{"_index":1663,"title":{},"body":{"dependencies.html":{}}}],["2.321.0",{"_index":1658,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":1660,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":1548,"title":{},"body":{"components/UsercardComponent.html":{}}}],["23/29",{"_index":1630,"title":{},"body":{"coverage.html":{}}}],["234.comput",{"_index":1867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["255",{"_index":1453,"title":{},"body":{"interfaces/User.html":{}}}],["28",{"_index":184,"title":{},"body":{"components/AdminComponent.html":{}}}],["3",{"_index":1482,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["3.2.2",{"_index":1654,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":1632,"title":{},"body":{"coverage.html":{}}}],["30/31",{"_index":1635,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":1864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["390",{"_index":1333,"title":{},"body":{"components/NavbarComponent.html":{}}}],["4/4",{"_index":1619,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":1837,"title":{},"body":{"overview.html":{}}}],["5/5",{"_index":1620,"title":{},"body":{"coverage.html":{}}}],["55/61",{"_index":1622,"title":{},"body":{"coverage.html":{}}}],["57/61",{"_index":1616,"title":{},"body":{"coverage.html":{}}}],["6.0.0",{"_index":1667,"title":{},"body":{"dependencies.html":{}}}],["6.1.8",{"_index":1647,"title":{},"body":{"dependencies.html":{}}}],["6.3.2",{"_index":1665,"title":{},"body":{"dependencies.html":{}}}],["6.4.7",{"_index":1649,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1631,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":1612,"title":{},"body":{"coverage.html":{}}}],["79",{"_index":1629,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1558,"title":{},"body":{"components/UsercardComponent.html":{},"overview.html":{}}}],["84",{"_index":1636,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1128,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{}}}],["91",{"_index":1625,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":1615,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":1634,"title":{},"body":{"coverage.html":{}}}],["9olhtihljsgjmz8a4yiekpwfj0foejbt",{"_index":506,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["abil",{"_index":1186,"title":{},"body":{"components/LoginComponent.html":{}}}],["abov",{"_index":945,"title":{},"body":{"components/HowToComponent.html":{}}}],["access",{"_index":50,"title":{},"body":{"guards/AccessGuard.html":{},"interfaces/ApiError.html":{},"injectables/Auth0Service.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/TokenStorage.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/variables.html":{}}}],["access_token",{"_index":455,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["accessguard",{"_index":1,"title":{"guards/AccessGuard.html":{}},"body":{"guards/AccessGuard.html":{}}}],["accesskeyid",{"_index":1417,"title":{},"body":{"injectables/UploadService.html":{}}}],["accompani",{"_index":247,"title":{},"body":{"interfaces/ApiError.html":{}}}],["accordingli",{"_index":826,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["account",{"_index":486,"title":{},"body":{"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"interfaces/Register.html":{},"interfaces/User.html":{}}}],["account'",{"_index":949,"title":{},"body":{"components/HowToComponent.html":{}}}],["account\\'",{"_index":996,"title":{},"body":{"components/HowToComponent.html":{}}}],["accountinfo",{"_index":432,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["accountinfo'},{'nam",{"_index":206,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["accountinfocompon",{"_index":205,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["action",{"_index":1514,"title":{},"body":{"components/UsercardComponent.html":{}}}],["activ",{"_index":1441,"title":{},"body":{"interfaces/User.html":{}}}],["activatedroutesnapshot",{"_index":22,"title":{},"body":{"guards/AccessGuard.html":{}}}],["actual",{"_index":662,"title":{},"body":{"classes/Car.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"miscellaneous/typealiases.html":{}}}],["actual_compon",{"_index":241,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["add",{"_index":754,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MatchingControllerService.html":{},"directives/PlacesAutocompleteDirective.html":{},"index.html":{}}}],["addcartous",{"_index":679,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["addcartouser(intest",{"_index":685,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["addit",{"_index":254,"title":{},"body":{"interfaces/ApiError.html":{},"interceptors/JwtInterceptor.html":{}}}],["address",{"_index":76,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{}}}],["address2",{"_index":77,"title":{},"body":{"classes/AddressModel.html":{}}}],["addressid",{"_index":78,"title":{},"body":{"classes/AddressModel.html":{}}}],["addressmodel",{"_index":68,"title":{"classes/AddressModel.html":{}},"body":{"classes/AddressModel.html":{},"coverage.html":{}}}],["addressselect",{"_index":1342,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["admin",{"_index":112,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/HowToComponent.html":{},"miscellaneous/enumerations.html":{}}}],["admin'},{'nam",{"_index":207,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["admin.component.css",{"_index":114,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.html",{"_index":116,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin/train",{"_index":987,"title":{},"body":{"components/HowToComponent.html":{}}}],["admincompon",{"_index":98,"title":{"components/AdminComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["administr",{"_index":107,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/Register.html":{}}}],["adress",{"_index":73,"title":{},"body":{"classes/AddressModel.html":{}}}],["affect",{"_index":1251,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["again",{"_index":982,"title":{},"body":{"components/HowToComponent.html":{}}}],["agm/cor",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"injectables/MapsControllerService.html":{},"directives/PlacesAutocompleteDirective.html":{},"dependencies.html":{}}}],["agmcoremodul",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["agmcoremodule.forroot",{"_index":394,"title":{},"body":{"modules/AppModule.html":{}}}],["aizasydxgfzzcvmm1pxv8c0kvg6eg6tt3s_hexw",{"_index":396,"title":{},"body":{"modules/AppModule.html":{}}}],["ak",{"_index":1692,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["akiairzg4tk6eblzv7ga",{"_index":1418,"title":{},"body":{"injectables/UploadService.html":{}}}],["al",{"_index":1690,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["alabama",{"_index":1689,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["alaska",{"_index":1691,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["alias",{"_index":1841,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":103,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["alow",{"_index":148,"title":{},"body":{"components/AdminComponent.html":{}}}],["alreadi",{"_index":988,"title":{},"body":{"components/HowToComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["amazon",{"_index":1404,"title":{},"body":{"injectables/UploadService.html":{}}}],["amobil",{"_index":825,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["amount",{"_index":1820,"title":{},"body":{"index.html":{}}}],["angular",{"_index":329,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["angular/anim",{"_index":1140,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":1648,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":414,"title":{},"body":{"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":370,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["angular/compil",{"_index":1650,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":32,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1651,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":1652,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":33,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"dependencies.html":{}}}],["anim",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"dependencies.html":{}}}],["animate(100",{"_index":1551,"title":{},"body":{"components/UsercardComponent.html":{}}}],["animate(200",{"_index":1560,"title":{},"body":{"components/UsercardComponent.html":{}}}],["animate(400",{"_index":1150,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["animateonscrollmodul",{"_index":376,"title":{},"body":{"modules/AppModule.html":{}}}],["animateonscrollmodule.forroot",{"_index":393,"title":{},"body":{"modules/AppModule.html":{}}}],["animst",{"_index":1497,"title":{},"body":{"components/UsercardComponent.html":{}}}],["animthumbst",{"_index":1498,"title":{},"body":{"components/UsercardComponent.html":{}}}],["anth",{"_index":1266,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["anyth",{"_index":1252,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["apart",{"_index":893,"title":{},"body":{"components/HowToComponent.html":{}}}],["api",{"_index":264,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"miscellaneous/enumerations.html":{}}}],["api/us",{"_index":581,"title":{},"body":{"injectables/AuthService.html":{}}}],["apierror",{"_index":243,"title":{"interfaces/ApiError.html":{}},"body":{"interfaces/ApiError.html":{},"interceptors/ErrorInterceptor.html":{},"coverage.html":{}}}],["apierror.statu",{"_index":804,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["apierror.typ",{"_index":808,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["apierrortyp",{"_index":268,"title":{},"body":{"interfaces/ApiError.html":{},"interceptors/ErrorInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["apierrortype.notloggedin",{"_index":809,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["apikey",{"_index":395,"title":{},"body":{"modules/AppModule.html":{}}}],["apiurl",{"_index":1862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":111,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"index.html":{}}}],["app.compon",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"injectables/Auth0Service.html":{}}}],["app.component.css",{"_index":279,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":280,"title":{},"body":{"components/AppComponent.html":{}}}],["app/models/user.model",{"_index":578,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MatchingControllerService.html":{}}}],["app/services/api/us",{"_index":38,"title":{},"body":{"guards/AccessGuard.html":{}}}],["app/services/auth.servic",{"_index":365,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":208,"title":{"components/AppComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":585,"title":{},"body":{"injectables/AuthService.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"interfaces/Marker.html":{},"components/NavbarComponent.html":{}}}],["appmodul",{"_index":311,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppag",{"_index":401,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["appplacesautocomplet",{"_index":240,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["appropri",{"_index":687,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["approutingmodul",{"_index":320,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["approv",{"_index":1056,"title":{},"body":{"components/LandingComponent.html":{}}}],["ar",{"_index":1694,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["arizona",{"_index":1695,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["arkansa",{"_index":1693,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["around",{"_index":1229,"title":{},"body":{"interfaces/Marker.html":{}}}],["array",{"_index":260,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/Auth0Service.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["artifact",{"_index":1794,"title":{},"body":{"index.html":{}}}],["assets/icons/thumbsdown.png",{"_index":1540,"title":{},"body":{"components/UsercardComponent.html":{}}}],["assets/icons/thumbsup.png",{"_index":1577,"title":{},"body":{"components/UsercardComponent.html":{}}}],["assign",{"_index":1426,"title":{},"body":{"injectables/UploadService.html":{}}}],["associ",{"_index":198,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{}}}],["assum",{"_index":1808,"title":{},"body":{"index.html":{}}}],["async",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["attempt",{"_index":49,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"injectables/UploadService.html":{}}}],["attribut",{"_index":417,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth",{"_index":51,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/Auth0Service.html":{}}}],["auth0",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"injectables/Auth0Service.html":{},"components/CallbackComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"dependencies.html":{}}}],["auth0.handleauthent",{"_index":308,"title":{},"body":{"components/AppComponent.html":{}}}],["auth0.webauth",{"_index":484,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["auth0servic",{"_index":288,"title":{"injectables/Auth0Service.html":{}},"body":{"components/AppComponent.html":{},"injectables/Auth0Service.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{}}}],["authent",{"_index":131,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/FavoritesComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/TokenStorage.html":{},"miscellaneous/variables.html":{}}}],["authenticate(email",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{}}}],["authenticator(email",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{}}}],["author",{"_index":1013,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["authresult",{"_index":479,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["authresult.accesstoken",{"_index":517,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["authresult.idtoken",{"_index":518,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["authresult.scop",{"_index":530,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["authservic",{"_index":126,"title":{"injectables/AuthService.html":{}},"body":{"components/AdminComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authtoken",{"_index":1394,"title":{},"body":{"injectables/TokenStorage.html":{},"miscellaneous/variables.html":{}}}],["auto",{"_index":1352,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplet",{"_index":1363,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.addlistener('place_chang",{"_index":1365,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.direct",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["autocomplete.directive.t",{"_index":1340,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{},"coverage.html":{}}}],["autocomplete.directive.ts:12",{"_index":1355,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:16",{"_index":1346,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:39",{"_index":1351,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["autocomplete/plac",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"directives/PlacesAutocompleteDirective.html":{},"coverage.html":{}}}],["automat",{"_index":806,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"index.html":{}}}],["avail",{"_index":684,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"components/NavbarComponent.html":{},"miscellaneous/enumerations.html":{},"modules.html":{}}}],["avatar",{"_index":1574,"title":{},"body":{"components/UsercardComponent.html":{}}}],["avoid",{"_index":1308,"title":{},"body":{"components/NavbarComponent.html":{}}}],["aw",{"_index":1415,"title":{},"body":{"injectables/UploadService.html":{},"dependencies.html":{}}}],["await",{"_index":1330,"title":{},"body":{"components/NavbarComponent.html":{}}}],["await/async",{"_index":1307,"title":{},"body":{"components/NavbarComponent.html":{}}}],["az",{"_index":1696,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["b",{"_index":1805,"title":{},"body":{"index.html":{}}}],["back",{"_index":934,"title":{},"body":{"components/HowToComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["backend",{"_index":621,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"miscellaneous/typealiases.html":{}}}],["bad",{"_index":1161,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["bar",{"_index":946,"title":{},"body":{"components/HowToComponent.html":{}}}],["barebon",{"_index":1379,"title":{},"body":{"interfaces/RouteInfo.html":{}}}],["base",{"_index":1371,"title":{},"body":{"components/RideswipeComponent.html":{},"index.html":{}}}],["basic",{"_index":305,"title":{},"body":{"components/AppComponent.html":{},"components/CallbackComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/LikesmatchwebComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{}}}],["batch",{"_index":155,"title":{},"body":{"components/AdminComponent.html":{},"classes/Filter.html":{},"components/HowToComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["batchend",{"_index":117,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/User.html":{}}}],["batchendchang",{"_index":831,"title":{},"body":{"classes/Filter.html":{}}}],["be",{"_index":160,"title":{},"body":{"components/AdminComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{},"injectables/TokenStorage.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["bearer",{"_index":1014,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["begin",{"_index":1427,"title":{},"body":{"injectables/UploadService.html":{}}}],["best",{"_index":1821,"title":{},"body":{"index.html":{}}}],["beta.4",{"_index":1646,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":135,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MapsControllerService.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"components/UsercardComponent.html":{}}}],["big",{"_index":950,"title":{},"body":{"components/HowToComponent.html":{}}}],["bio",{"_index":1178,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/User.html":{},"components/UsermatchwebComponent.html":{}}}],["biographi",{"_index":898,"title":{},"body":{"components/HowToComponent.html":{}}}],["block",{"_index":628,"title":{},"body":{"injectables/AuthService.html":{}}}],["blue",{"_index":951,"title":{},"body":{"components/HowToComponent.html":{}}}],["bodi",{"_index":1280,"title":{},"body":{"injectables/MatchingControllerService.html":{},"injectables/UploadService.html":{}}}],["body).topromis",{"_index":1283,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["boolean",{"_index":28,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"classes/Filter.html":{},"components/LandingComponent.html":{},"interfaces/Marker.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["boolean=fals",{"_index":1324,"title":{},"body":{"components/NavbarComponent.html":{}}}],["bootstrap",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/ng",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["both",{"_index":919,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{}}}],["box",{"_index":967,"title":{},"body":{"components/HowToComponent.html":{}}}],["branch",{"_index":1806,"title":{},"body":{"index.html":{}}}],["brand",{"_index":922,"title":{},"body":{"components/HowToComponent.html":{}}}],["bring",{"_index":974,"title":{},"body":{"components/HowToComponent.html":{}}}],["brows",{"_index":973,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"modules.html":{}}}],["browser",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":408,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/anim",{"_index":335,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":334,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":331,"title":{},"body":{"modules/AppModule.html":{}}}],["btncarinfo",{"_index":672,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["btoa(this.officeobject",{"_index":181,"title":{},"body":{"components/AdminComponent.html":{}}}],["bucket",{"_index":1403,"title":{},"body":{"injectables/UploadService.html":{}}}],["build",{"_index":1793,"title":{},"body":{"index.html":{}}}],["burden",{"_index":1048,"title":{},"body":{"components/LandingComponent.html":{}}}],["button",{"_index":717,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/NavbarComponent.html":{}}}],["c.foreach(el",{"_index":726,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["c.id",{"_index":755,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["c.make",{"_index":756,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["c.model",{"_index":757,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["c.year",{"_index":758,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["ca",{"_index":1698,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cach",{"_index":47,"title":{},"body":{"guards/AccessGuard.html":{}}}],["calcul",{"_index":1218,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["california",{"_index":1697,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["call",{"_index":145,"title":{},"body":{"components/AdminComponent.html":{},"injectables/Auth0Service.html":{},"components/LandingComponent.html":{},"components/UsercardComponent.html":{}}}],["callback",{"_index":437,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CallbackComponent.html":{}}}],["callback'},{'nam",{"_index":211,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["callback.component.css",{"_index":644,"title":{},"body":{"components/CallbackComponent.html":{}}}],["callback.component.html",{"_index":645,"title":{},"body":{"components/CallbackComponent.html":{}}}],["callback/callback/callback.compon",{"_index":389,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["callbackcompon",{"_index":210,"title":{"components/CallbackComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["canactiv",{"_index":8,"title":{},"body":{"guards/AccessGuard.html":{}}}],["canactivate(rout",{"_index":21,"title":{},"body":{"guards/AccessGuard.html":{}}}],["car",{"_index":213,"title":{"classes/Car.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CallbackComponent.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{}}}],["car.mak",{"_index":1591,"title":{},"body":{"components/UsercardComponent.html":{}}}],["car.model",{"_index":1458,"title":{},"body":{"interfaces/User.html":{},"components/UsercardComponent.html":{}}}],["car.year",{"_index":1592,"title":{},"body":{"components/UsercardComponent.html":{}}}],["card",{"_index":1104,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["card.fac",{"_index":1171,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["card.user.address",{"_index":1109,"title":{},"body":{"components/LikesComponent.html":{}}}],["card.user.firstnam",{"_index":1108,"title":{},"body":{"components/LikesComponent.html":{}}}],["card.user.rol",{"_index":1111,"title":{},"body":{"components/LikesComponent.html":{}}}],["carmak",{"_index":673,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["carmodel",{"_index":674,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["carobject",{"_index":675,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["carousel",{"_index":1017,"title":{},"body":{"components/LandingComponent.html":{}}}],["carpool",{"_index":1043,"title":{},"body":{"components/LandingComponent.html":{}}}],["carregistrationcompon",{"_index":212,"title":{"components/CarRegistrationComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["caryear",{"_index":676,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["case",{"_index":1857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catch",{"_index":773,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["catcherror",{"_index":34,"title":{},"body":{"guards/AccessGuard.html":{},"interceptors/ErrorInterceptor.html":{}}}],["catcherror((err",{"_index":796,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["catcherror(_",{"_index":62,"title":{},"body":{"guards/AccessGuard.html":{}}}],["cb",{"_index":457,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["cb(err",{"_index":537,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["center",{"_index":1519,"title":{},"body":{"components/UsercardComponent.html":{}}}],["certain",{"_index":1848,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["chang",{"_index":1130,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"index.html":{}}}],["charact",{"_index":1451,"title":{},"body":{"interfaces/User.html":{}}}],["check",{"_index":463,"title":{},"body":{"injectables/Auth0Service.html":{},"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["checkbox",{"_index":1603,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["checkout",{"_index":1804,"title":{},"body":{"index.html":{}}}],["cheifli",{"_index":648,"title":{},"body":{"classes/Car.html":{},"injectables/UploadService.html":{}}}],["choos",{"_index":915,"title":{},"body":{"components/HowToComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["chose",{"_index":927,"title":{},"body":{"components/HowToComponent.html":{}}}],["circl",{"_index":1053,"title":{},"body":{"components/LandingComponent.html":{}}}],["circlemanag",{"_index":355,"title":{},"body":{"modules/AppModule.html":{}}}],["citi",{"_index":79,"title":{},"body":{"classes/AddressModel.html":{}}}],["class",{"_index":43,"title":{"classes/AddressModel.html":{},"classes/AppPage.html":{},"classes/Car.html":{},"classes/Filter.html":{},"classes/SwipecardModel.html":{}},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/CallbackComponent.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["class=\"card",{"_index":1113,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{}}}],["clear",{"_index":471,"title":{},"body":{"injectables/Auth0Service.html":{},"components/CarRegistrationComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["cli",{"_index":1787,"title":{},"body":{"index.html":{}}}],["click",{"_index":880,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["client",{"_index":508,"title":{},"body":{"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["client_id",{"_index":441,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["clientid",{"_index":495,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["close",{"_index":1304,"title":{},"body":{"components/NavbarComponent.html":{}}}],["closer",{"_index":981,"title":{},"body":{"components/HowToComponent.html":{}}}],["cluster_appmodul",{"_index":315,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":319,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["co",{"_index":1700,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["code",{"_index":96,"title":{},"body":{"classes/AddressModel.html":{},"index.html":{}}}],["collection/bas",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["colorado",{"_index":1699,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["come",{"_index":620,"title":{},"body":{"injectables/AuthService.html":{}}}],["comment",{"_index":1234,"title":{},"body":{"interfaces/Marker.html":{},"components/UsercardComponent.html":{}}}],["commit",{"_index":1809,"title":{},"body":{"index.html":{}}}],["common",{"_index":1336,"title":{},"body":{"interfaces/Office.html":{}}}],["commonmodul",{"_index":413,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["commun",{"_index":858,"title":{},"body":{"injectables/GeocodeService.html":{},"injectables/MapsControllerService.html":{}}}],["compani",{"_index":701,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{}}}],["compat",{"_index":1666,"title":{},"body":{"dependencies.html":{}}}],["complet",{"_index":1353,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{},"components/UsercardComponent.html":{}}}],["complex",{"_index":1141,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["compnent",{"_index":133,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"components/UsercardComponent.html":{}}}],["compoennt",{"_index":1193,"title":{},"body":{"components/LoginComponent.html":{}}}],["compon",{"_index":97,"title":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":204,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["components/accountinfo/accountinfo.compon",{"_index":375,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/admin/admin.compon",{"_index":382,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/car",{"_index":383,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/favorites/favorites.compon",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/how",{"_index":349,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/landing/landing.compon",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/likes/likes.compon",{"_index":360,"title":{},"body":{"modules/AppModule.html":{}}}],["components/likesmatchweb/likesmatchweb.compon",{"_index":362,"title":{},"body":{"modules/AppModule.html":{}}}],["components/login/login.compon",{"_index":347,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/map/map.compon",{"_index":352,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/navbar/navbar.compon",{"_index":357,"title":{},"body":{"modules/AppModule.html":{}}}],["components/rideswipe/rideswipe.compon",{"_index":345,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/usercard/usercard.compon",{"_index":348,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/usermatchweb/usermatchweb.compon",{"_index":361,"title":{},"body":{"modules/AppModule.html":{}}}],["components/view",{"_index":386,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["confirm",{"_index":302,"title":{},"body":{"components/AppComponent.html":{},"components/HowToComponent.html":{}}}],["confirmpassword",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["conflict",{"_index":1822,"title":{},"body":{"index.html":{}}}],["congratul",{"_index":940,"title":{},"body":{"components/HowToComponent.html":{}}}],["connecticut",{"_index":1701,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["console.error('network",{"_index":802,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["console.log",{"_index":870,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["console.log(",{"_index":623,"title":{},"body":{"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["console.log(\"ad",{"_index":1100,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log(\"data2",{"_index":1471,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["console.log(\"data3.cars[\"+car",{"_index":1090,"title":{},"body":{"components/LikesComponent.html":{}}}],["console.log('befor",{"_index":1439,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log('car",{"_index":733,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["console.log('data",{"_index":1564,"title":{},"body":{"components/UsercardComponent.html":{}}}],["console.log('error",{"_index":1475,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["console.log('geocod",{"_index":868,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["console.log('got",{"_index":599,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('gotten",{"_index":602,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('her",{"_index":1153,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log('in",{"_index":588,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('loggeddata2",{"_index":1154,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log('own",{"_index":748,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["console.log('print",{"_index":622,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('sav",{"_index":593,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log('successfulli",{"_index":1431,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log('ther",{"_index":1430,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log('thi",{"_index":1151,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log('upload",{"_index":1434,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log(data",{"_index":1152,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log(data2",{"_index":1078,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log(data3",{"_index":1079,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["console.log(data3.cars[car].substring(6",{"_index":1086,"title":{},"body":{"components/LikesComponent.html":{}}}],["console.log(data3.contactinfo[0",{"_index":1155,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["console.log(data3.photourl",{"_index":1567,"title":{},"body":{"components/UsercardComponent.html":{}}}],["console.log(e.messag",{"_index":629,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(environment.apiurl",{"_index":1284,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["console.log(err",{"_index":524,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["console.log(ev",{"_index":309,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(param",{"_index":1432,"title":{},"body":{"injectables/UploadService.html":{}}}],["console.log(sessionstorag",{"_index":1326,"title":{},"body":{"components/NavbarComponent.html":{}}}],["console.log(this.carobject.own",{"_index":750,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["console.log(this.currentus",{"_index":1565,"title":{},"body":{"components/UsercardComponent.html":{}}}],["console.log(this.currentuser.id",{"_index":1580,"title":{},"body":{"components/UsercardComponent.html":{}}}],["console.log(this.swipecards[this.currentindex].user.id",{"_index":1581,"title":{},"body":{"components/UsercardComponent.html":{}}}],["console.log(userlink",{"_index":1472,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["const",{"_index":423,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["constant",{"_index":1532,"title":{},"body":{"components/UsercardComponent.html":{}}}],["constantli",{"_index":961,"title":{},"body":{"components/HowToComponent.html":{}}}],["constructor",{"_index":9,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["constructor(auth0",{"_index":287,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["constructor(auth0servic",{"_index":1025,"title":{},"body":{"components/LandingComponent.html":{}}}],["constructor(authservic",{"_index":775,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"components/LoginComponent.html":{}}}],["constructor(elref",{"_index":1343,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["constructor(http",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["constructor(matchservic",{"_index":1122,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["constructor(priv",{"_index":45,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/Auth0Service.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"directives/PlacesAutocompleteDirective.html":{}}}],["constructor(publ",{"_index":307,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(rout",{"_index":449,"title":{},"body":{"injectables/Auth0Service.html":{},"components/LikesComponent.html":{},"components/RideswipeComponent.html":{}}}],["constructor(tokenstorag",{"_index":1003,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["constructor(userservic",{"_index":10,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{}}}],["contact",{"_index":763,"title":{},"body":{"interfaces/ContactInfo.html":{},"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"components/UsercardComponent.html":{},"miscellaneous/enumerations.html":{}}}],["contact.info",{"_index":1590,"title":{},"body":{"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["contact.typ",{"_index":1589,"title":{},"body":{"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["contactinfo",{"_index":759,"title":{"interfaces/ContactInfo.html":{}},"body":{"interfaces/ContactInfo.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"coverage.html":{}}}],["contactinfotyp",{"_index":1674,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["contain",{"_index":947,"title":{},"body":{"components/HowToComponent.html":{}}}],["context",{"_index":1642,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["control",{"_index":503,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["controller.servic",{"_index":39,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["controller.service.t",{"_index":1206,"title":{},"body":{"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"coverage.html":{}}}],["controller.service.ts:108",{"_index":1248,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:119",{"_index":1274,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:12",{"_index":1209,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["controller.service.ts:13",{"_index":1245,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:25",{"_index":1212,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["controller.service.ts:27",{"_index":1261,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:37",{"_index":1217,"title":{},"body":{"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:48",{"_index":1256,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:63",{"_index":1268,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:75",{"_index":1272,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:88",{"_index":1276,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["controller.service.ts:97",{"_index":1254,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["conveni",{"_index":266,"title":{},"body":{"interfaces/ApiError.html":{}}}],["cooki",{"_index":474,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["core",{"_index":1659,"title":{},"body":{"dependencies.html":{}}}],["correspond",{"_index":263,"title":{},"body":{"interfaces/ApiError.html":{}}}],["coverag",{"_index":1608,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":290,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Register.html":{}}}],["credenti",{"_index":587,"title":{},"body":{"injectables/AuthService.html":{}}}],["ct",{"_index":1702,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["current",{"_index":154,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/TokenStorage.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["currentindex",{"_index":1499,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentswipecard",{"_index":1500,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentswipecard.user.address",{"_index":1585,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentswipecard.user.batchend",{"_index":1587,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentswipecard.user.email",{"_index":1586,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentswipecard.user.firstnam",{"_index":1584,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentswipecard.user.lastnam",{"_index":1588,"title":{},"body":{"components/UsercardComponent.html":{}}}],["currentus",{"_index":1022,"title":{},"body":{"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["daili",{"_index":1455,"title":{},"body":{"interfaces/User.html":{}}}],["data",{"_index":177,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["data2",{"_index":1077,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["data3",{"_index":1105,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["data3.car",{"_index":1084,"title":{},"body":{"components/LikesComponent.html":{}}}],["data3.cars[car].substring(6",{"_index":1085,"title":{},"body":{"components/LikesComponent.html":{}}}],["data3.cars[car]=`${data4.year",{"_index":1091,"title":{},"body":{"components/LikesComponent.html":{}}}],["data3.contactinfo",{"_index":1094,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["data3.contactinfo!=undefin",{"_index":1099,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["data3.contactinfo[\"+contact",{"_index":1101,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["data3.contactinfo[contact].substring(14",{"_index":1095,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["data3.contactinfo[contact]=`${data4.typ",{"_index":1102,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["data3.photourl",{"_index":1080,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["data4",{"_index":1088,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["data4.info",{"_index":1103,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["data4.mak",{"_index":1092,"title":{},"body":{"components/LikesComponent.html":{}}}],["data4.model",{"_index":1093,"title":{},"body":{"components/LikesComponent.html":{}}}],["databas",{"_index":655,"title":{},"body":{"classes/Car.html":{},"interfaces/ContactInfo.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Office.html":{},"interfaces/User.html":{}}}],["date",{"_index":138,"title":{},"body":{"components/AdminComponent.html":{},"classes/Filter.html":{},"components/HowToComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["date().getfullyear",{"_index":752,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["date().gettim",{"_index":529,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["dateformatpip",{"_index":390,"title":{},"body":{"modules/AppModule.html":{}}}],["datelocationencrypt",{"_index":122,"title":{},"body":{"components/AdminComponent.html":{}}}],["day",{"_index":836,"title":{},"body":{"classes/Filter.html":{},"interfaces/User.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["daystart",{"_index":1442,"title":{},"body":{"interfaces/User.html":{}}}],["daystartchang",{"_index":832,"title":{},"body":{"classes/Filter.html":{}}}],["dc",{"_index":970,"title":{},"body":{"components/HowToComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dd't'hh:mm:ss.sss'z",{"_index":1450,"title":{},"body":{"interfaces/User.html":{}}}],["de",{"_index":1704,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["decent",{"_index":1819,"title":{},"body":{"index.html":{}}}],["decid",{"_index":1377,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["declar",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/Auth0Service.html":{},"overview.html":{}}}],["decompil",{"_index":456,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["decor",{"_index":1533,"title":{},"body":{"components/UsercardComponent.html":{}}}],["dedic",{"_index":1401,"title":{},"body":{"injectables/UploadService.html":{}}}],["default",{"_index":162,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/Auth0Service.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":13,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["degre",{"_index":1129,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["delawar",{"_index":1703,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["demonstr",{"_index":1065,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["depend",{"_index":312,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/UploadService.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":70,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CallbackComponent.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"index.html":{}}}],["deseri",{"_index":1262,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["desktop",{"_index":817,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["detail",{"_index":251,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/ContactInfo.html":{},"components/HowToComponent.html":{}}}],["detect",{"_index":298,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["determin",{"_index":980,"title":{},"body":{"components/HowToComponent.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["dev",{"_index":786,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"index.html":{}}}],["develop",{"_index":1789,"title":{},"body":{"index.html":{}}}],["devic",{"_index":824,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["devif",{"_index":1824,"title":{},"body":{"index.html":{}}}],["direct",{"_index":56,"title":{"directives/PlacesAutocompleteDirective.html":{}},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["directives/plac",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":1792,"title":{},"body":{"index.html":{}}}],["directori",{"_index":1796,"title":{},"body":{"index.html":{}}}],["disabl",{"_index":991,"title":{},"body":{"components/HowToComponent.html":{}}}],["discord",{"_index":913,"title":{},"body":{"components/HowToComponent.html":{}}}],["dislik",{"_index":976,"title":{},"body":{"components/HowToComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dislikedriv",{"_index":1236,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["dislikedriver(riderid",{"_index":1246,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["display",{"_index":876,"title":{},"body":{"components/HowToComponent.html":{},"components/LoginComponent.html":{},"components/RideswipeComponent.html":{}}}],["dist",{"_index":1795,"title":{},"body":{"index.html":{}}}],["distanc",{"_index":839,"title":{},"body":{"classes/Filter.html":{},"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/RouteInfo.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["distancechang",{"_index":833,"title":{},"body":{"classes/Filter.html":{}}}],["distinguish",{"_index":815,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["districtofcolumbia",{"_index":1705,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["div",{"_index":1535,"title":{},"body":{"components/UsercardComponent.html":{}}}],["document",{"_index":624,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["document.getelementbyid('errormessagelogin",{"_index":626,"title":{},"body":{"injectables/AuthService.html":{}}}],["dom",{"_index":100,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["domain",{"_index":490,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["done",{"_index":916,"title":{},"body":{"components/HowToComponent.html":{},"components/UsercardComponent.html":{}}}],["down",{"_index":1302,"title":{},"body":{"components/NavbarComponent.html":{}}}],["draggabl",{"_index":1226,"title":{},"body":{"interfaces/Marker.html":{}}}],["driver",{"_index":649,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{}}}],["driver'",{"_index":956,"title":{},"body":{"components/HowToComponent.html":{}}}],["driver/passeng",{"_index":959,"title":{},"body":{"components/HowToComponent.html":{}}}],["driver\\'",{"_index":997,"title":{},"body":{"components/HowToComponent.html":{}}}],["driverid",{"_index":1247,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["drop",{"_index":1295,"title":{},"body":{"components/NavbarComponent.html":{}}}],["dropdown",{"_index":419,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavbarComponent.html":{}}}],["due",{"_index":807,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{}}}],["dummi",{"_index":1465,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["durat",{"_index":1380,"title":{},"body":{"interfaces/RouteInfo.html":{}}}],["dynam",{"_index":1653,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":619,"title":{},"body":{"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["e.g",{"_index":1337,"title":{},"body":{"interfaces/Office.html":{}}}],["e.messag",{"_index":630,"title":{},"body":{"injectables/AuthService.html":{}}}],["e2",{"_index":1831,"title":{},"body":{"index.html":{}}}],["e2e/app.po.t",{"_index":402,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/app.po.ts:4",{"_index":406,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/app.po.ts:8",{"_index":405,"title":{},"body":{"classes/AppPage.html":{}}}],["each",{"_index":1002,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"components/UsermatchwebComponent.html":{}}}],["earli",{"_index":1823,"title":{},"body":{"index.html":{}}}],["earth",{"_index":1182,"title":{},"body":{"interfaces/Location.html":{}}}],["east",{"_index":1157,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{}}}],["east/west",{"_index":1184,"title":{},"body":{"interfaces/Location.html":{}}}],["edit",{"_index":925,"title":{},"body":{"components/HowToComponent.html":{}}}],["effort",{"_index":901,"title":{},"body":{"components/HowToComponent.html":{}}}],["element",{"_index":202,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["element(by.css('app",{"_index":409,"title":{},"body":{"classes/AppPage.html":{}}}],["element.owner.substring(7",{"_index":728,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["elementref",{"_index":1344,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{},"components/UsercardComponent.html":{}}}],["elref",{"_index":1348,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["email",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{},"components/HowToComponent.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{}}}],["employe",{"_index":904,"title":{},"body":{"components/HowToComponent.html":{}}}],["employer'",{"_index":1052,"title":{},"body":{"components/LandingComponent.html":{}}}],["employer\\'",{"_index":1058,"title":{},"body":{"components/LandingComponent.html":{}}}],["empti",{"_index":259,"title":{},"body":{"interfaces/ApiError.html":{}}}],["enabl",{"_index":583,"title":{},"body":{"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/UploadService.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/typealiases.html":{}}}],["encrypt",{"_index":140,"title":{},"body":{"components/AdminComponent.html":{}}}],["encryptedlocationd",{"_index":118,"title":{},"body":{"components/AdminComponent.html":{}}}],["encryptedlocationdate}}{{registrationkey",{"_index":199,"title":{},"body":{"components/AdminComponent.html":{}}}],["end",{"_index":156,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"classes/Filter.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/User.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"index.html":{}}}],["endflipcard",{"_index":1120,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["endflipcard(card",{"_index":1124,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["endpoint",{"_index":274,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/MapsControllerService.html":{}}}],["enjoy",{"_index":1044,"title":{},"body":{"components/LandingComponent.html":{}}}],["enough",{"_index":1259,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["ensur",{"_index":697,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interceptors/JwtInterceptor.html":{}}}],["enter",{"_index":896,"title":{},"body":{"components/HowToComponent.html":{}}}],["entir",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["entri",{"_index":764,"title":{},"body":{"interfaces/ContactInfo.html":{}}}],["enum",{"_index":270,"title":{},"body":{"interfaces/ApiError.html":{}}}],["enumer",{"_index":1672,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":579,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environemnt",{"_index":1870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environments/environ",{"_index":580,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["err",{"_index":523,"title":{},"body":{"injectables/Auth0Service.html":{},"injectables/UploadService.html":{}}}],["err.error",{"_index":797,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["err.statu",{"_index":805,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error",{"_index":246,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/LoginComponent.html":{},"injectables/UploadService.html":{},"miscellaneous/enumerations.html":{}}}],["error.model",{"_index":794,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["error.model.t",{"_index":245,"title":{},"body":{"interfaces/ApiError.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["errorev",{"_index":799,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["errorinterceptor",{"_index":267,"title":{"interceptors/ErrorInterceptor.html":{}},"body":{"interfaces/ApiError.html":{},"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"overview.html":{}}}],["especi",{"_index":1817,"title":{},"body":{"index.html":{}}}],["evalu",{"_index":1477,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["event",{"_index":299,"title":{},"body":{"components/AppComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"miscellaneous/variables.html":{}}}],["eventemitt",{"_index":1350,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["examin",{"_index":787,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["exampl",{"_index":418,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HowToComponent.html":{}}}],["execut",{"_index":1828,"title":{},"body":{"index.html":{}}}],["exist",{"_index":875,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["expir",{"_index":191,"title":{},"body":{"components/AdminComponent.html":{},"injectables/Auth0Service.html":{},"components/LandingComponent.html":{}}}],["expiresat",{"_index":526,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["export",{"_index":42,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/CallbackComponent.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"overview.html":{}}}],["extern",{"_index":1349,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["extra",{"_index":104,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/Marker.html":{}}}],["face",{"_index":1131,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["fact",{"_index":1032,"title":{},"body":{"components/LandingComponent.html":{}}}],["fail",{"_index":737,"title":{},"body":{"components/CarRegistrationComponent.html":{},"injectables/GeocodeService.html":{},"components/LoginComponent.html":{},"injectables/UploadService.html":{}}}],["fals",{"_index":827,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"miscellaneous/variables.html":{}}}],["far",{"_index":932,"title":{},"body":{"components/HowToComponent.html":{}}}],["favorit",{"_index":435,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/NavbarComponent.html":{}}}],["favorites'},{'nam",{"_index":216,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["favorites.component.css",{"_index":818,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favorites.component.html",{"_index":819,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["favoritescompon",{"_index":215,"title":{"components/FavoritesComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["featur",{"_index":105,"title":{},"body":{"components/AdminComponent.html":{}}}],["fellow",{"_index":903,"title":{},"body":{"components/HowToComponent.html":{}}}],["fetch",{"_index":453,"title":{},"body":{"injectables/Auth0Service.html":{},"injectables/MatchingControllerService.html":{}}}],["field",{"_index":256,"title":{},"body":{"interfaces/ApiError.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{}}}],["file",{"_index":4,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/CallbackComponent.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["file.nam",{"_index":1425,"title":{},"body":{"injectables/UploadService.html":{}}}],["fill",{"_index":921,"title":{},"body":{"components/HowToComponent.html":{}}}],["filter",{"_index":829,"title":{"classes/Filter.html":{}},"body":{"classes/Filter.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{}}}],["filterbatchend",{"_index":1466,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["filterdist",{"_index":1468,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["filterstarttim",{"_index":1467,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["final",{"_index":928,"title":{},"body":{"components/HowToComponent.html":{}}}],["find",{"_index":422,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LandingComponent.html":{},"interfaces/User.html":{}}}],["finish",{"_index":930,"title":{},"body":{"components/HowToComponent.html":{}}}],["first",{"_index":83,"title":{},"body":{"classes/AddressModel.html":{},"components/HowToComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["firstnam",{"_index":1443,"title":{},"body":{"interfaces/User.html":{}}}],["fit",{"_index":907,"title":{},"body":{"components/HowToComponent.html":{}}}],["fl",{"_index":1707,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["flag",{"_index":1798,"title":{},"body":{"index.html":{}}}],["flipcard",{"_index":1121,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["flipcard(card",{"_index":1132,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["florida",{"_index":1706,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["focu",{"_index":1356,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["focus",{"_index":953,"title":{},"body":{"components/HowToComponent.html":{}}}],["folder",{"_index":1406,"title":{},"body":{"injectables/UploadService.html":{}}}],["follow",{"_index":871,"title":{},"body":{"injectables/GeocodeService.html":{},"index.html":{}}}],["for(let",{"_index":1083,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["for(var",{"_index":1490,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["forc",{"_index":1309,"title":{},"body":{"components/NavbarComponent.html":{}}}],["forgot",{"_index":1204,"title":{},"body":{"components/LoginComponent.html":{}}}],["form",{"_index":694,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["format",{"_index":258,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/MatchingControllerService.html":{},"interfaces/User.html":{}}}],["format.pip",{"_index":392,"title":{},"body":{"modules/AppModule.html":{}}}],["formsmodul",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["frequent",{"_index":963,"title":{},"body":{"components/HowToComponent.html":{}}}],["front",{"_index":293,"title":{},"body":{"components/AppComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["full",{"_index":426,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["fulli",{"_index":1187,"title":{},"body":{"components/LoginComponent.html":{}}}],["function",{"_index":505,"title":{},"body":{"injectables/Auth0Service.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{}}}],["further",{"_index":1832,"title":{},"body":{"index.html":{}}}],["ga",{"_index":1049,"title":{},"body":{"components/LandingComponent.html":{},"miscellaneous/enumerations.html":{}}}],["gateway",{"_index":635,"title":{},"body":{"injectables/AuthService.html":{}}}],["gener",{"_index":190,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{},"index.html":{}}}],["geocod",{"_index":844,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocode(address",{"_index":847,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocodeservic",{"_index":840,"title":{"injectables/GeocodeService.html":{}},"body":{"injectables/GeocodeService.html":{},"coverage.html":{}}}],["geograph",{"_index":1213,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["geoloc",{"_index":842,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["georgia",{"_index":1708,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["get",{"_index":1162,"title":{"index.html":{}},"body":{"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["getcontactinfobyid",{"_index":1163,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["getcurrentus",{"_index":1296,"title":{},"body":{"components/NavbarComponent.html":{}}}],["getdislikeddriv",{"_index":1237,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getdislikeddrivers(riderid",{"_index":1253,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getdist",{"_index":1207,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["getdistance(address",{"_index":1211,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["getfiltereddriv",{"_index":1238,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getfiltereddrivers(riderid",{"_index":1255,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getformattedaddress(plac",{"_index":1360,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["getfromlink",{"_index":1239,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getfromlink(uri",{"_index":1260,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getlikeddriv",{"_index":1240,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getlikeddrivers(riderid",{"_index":1267,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getmatchingdriv",{"_index":1241,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getmatchingdrivers(riderid",{"_index":1269,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["getoffic",{"_index":123,"title":{},"body":{"components/AdminComponent.html":{}}}],["getparagraphtext",{"_index":403,"title":{},"body":{"classes/AppPage.html":{}}}],["getprofil",{"_index":443,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["getprofile(cb",{"_index":451,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["getregistrationkey",{"_index":124,"title":{},"body":{"components/AdminComponent.html":{}}}],["getrout",{"_index":1208,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["getroute(start",{"_index":1216,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["gets3bucket",{"_index":1407,"title":{},"body":{"injectables/UploadService.html":{}}}],["gettoken",{"_index":1388,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["git",{"_index":1800,"title":{},"body":{"index.html":{}}}],["github",{"_index":1826,"title":{},"body":{"index.html":{}}}],["give",{"_index":939,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["given",{"_index":482,"title":{},"body":{"injectables/Auth0Service.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["go",{"_index":642,"title":{},"body":{"components/CallbackComponent.html":{},"components/HowToComponent.html":{},"index.html":{}}}],["goe",{"_index":1126,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["good",{"_index":905,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["googl",{"_index":843,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.geocod",{"_index":857,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.geocoderresult",{"_index":863,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.geocoderstatu",{"_index":864,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.geocoderstatus.ok",{"_index":865,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.latlng",{"_index":852,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.latlngliter",{"_index":1230,"title":{},"body":{"interfaces/Marker.html":{}}}],["google.maps.places.autocomplete(this.el",{"_index":1364,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["googlemap",{"_index":1357,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{},"dependencies.html":{}}}],["googlemapsapiwrapp",{"_index":354,"title":{},"body":{"modules/AppModule.html":{}}}],["gotten",{"_index":735,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["grab",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{}}}],["grant",{"_index":1369,"title":{},"body":{"interfaces/Register.html":{}}}],["grantedscop",{"_index":538,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["grantedscopes.includes(scop",{"_index":541,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["graph",{"_index":1835,"title":{},"body":{"modules.html":{}}}],["group",{"_index":1054,"title":{},"body":{"components/LandingComponent.html":{}}}],["groupm",{"_index":914,"title":{},"body":{"components/HowToComponent.html":{}}}],["guard",{"_index":0,"title":{"guards/AccessGuard.html":{}},"body":{"guards/AccessGuard.html":{},"overview.html":{}}}],["h1')).gettext",{"_index":410,"title":{},"body":{"classes/AppPage.html":{}}}],["hammerj",{"_index":1662,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":460,"title":{},"body":{"injectables/Auth0Service.html":{},"interceptors/ErrorInterceptor.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["handleauthent",{"_index":444,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["have",{"_index":1264,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["haven't",{"_index":944,"title":{},"body":{"components/HowToComponent.html":{}}}],["haven\\'t",{"_index":995,"title":{},"body":{"components/HowToComponent.html":{}}}],["hawaii",{"_index":1709,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["header",{"_index":1006,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["help",{"_index":1046,"title":{},"body":{"components/LandingComponent.html":{},"index.html":{}}}],["here",{"_index":491,"title":{},"body":{"injectables/Auth0Service.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/UsercardComponent.html":{},"index.html":{}}}],["hi",{"_index":1710,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hidden",{"_index":1384,"title":{},"body":{"classes/SwipecardModel.html":{}}}],["hide",{"_index":1510,"title":{},"body":{"components/UsercardComponent.html":{}}}],["hideimag",{"_index":1505,"title":{},"body":{"components/UsercardComponent.html":{}}}],["hideimage(hid",{"_index":1508,"title":{},"body":{"components/UsercardComponent.html":{}}}],["hold",{"_index":157,"title":{},"body":{"components/AdminComponent.html":{},"injectables/Auth0Service.html":{},"interfaces/ContactInfo.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"components/RideswipeComponent.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["home",{"_index":882,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/User.html":{}}}],["home(curr",{"_index":1334,"title":{},"body":{"components/NavbarComponent.html":{}}}],["hopefulli",{"_index":985,"title":{},"body":{"components/HowToComponent.html":{}}}],["host",{"_index":1292,"title":{},"body":{"components/NavbarComponent.html":{}}}],["hour",{"_index":193,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{}}}],["hous",{"_index":85,"title":{},"body":{"classes/AddressModel.html":{}}}],["howto",{"_index":429,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["howtocompon",{"_index":217,"title":{"components/HowToComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":201,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["htmlinputel",{"_index":1354,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["http",{"_index":249,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["http://192.168.60.54:2222",{"_index":1872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://e5a3040f.ngrok.io",{"_index":1873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://ec2",{"_index":1863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:2222",{"_index":1871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":1790,"title":{},"body":{"index.html":{}}}],["http://localhost:4200/callback",{"_index":500,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["http://localhost:4200/land",{"_index":545,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["http://semant",{"_index":1081,"title":{},"body":{"components/LikesComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["http_interceptor",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":367,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["httpclientmodul",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["httperrorrespons",{"_index":791,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["httpevent",{"_index":789,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httphandler",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httpheader",{"_index":577,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["httpinterceptor",{"_index":790,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["httprequest",{"_index":781,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["https://auth0.com/signup",{"_index":488,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["https://s3.u",{"_index":1156,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{}}}],["https://stackoverflow.com/a/46941824",{"_index":1850,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["i'm",{"_index":1164,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["ia",{"_index":1716,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["icon",{"_index":1232,"title":{},"body":{"interfaces/Marker.html":{}}}],["id",{"_index":91,"title":{},"body":{"classes/AddressModel.html":{},"injectables/Auth0Service.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Office.html":{},"interfaces/User.html":{},"miscellaneous/enumerations.html":{}}}],["id_token",{"_index":498,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["idaho",{"_index":1711,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["idea",{"_index":1815,"title":{},"body":{"index.html":{}}}],["identif",{"_index":1231,"title":{},"body":{"interfaces/Marker.html":{}}}],["identifi",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Marker.html":{},"coverage.html":{}}}],["if(data3.contactinfo!=nul",{"_index":1098,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["if(data4.info!=nul",{"_index":1097,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["if(data4.year!=nul",{"_index":1089,"title":{},"body":{"components/LikesComponent.html":{}}}],["if(e.messag",{"_index":633,"title":{},"body":{"injectables/AuthService.html":{}}}],["ignor",{"_index":646,"title":{},"body":{"components/CallbackComponent.html":{},"components/HowToComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/TokenStorage.html":{}}}],["il",{"_index":1713,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["illinoi",{"_index":1712,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imag",{"_index":1400,"title":{},"body":{"injectables/UploadService.html":{},"components/UsercardComponent.html":{}}}],["immedi",{"_index":977,"title":{},"body":{"components/HowToComponent.html":{}}}],["implement",{"_index":44,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/CallbackComponent.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["inact",{"_index":924,"title":{},"body":{"components/HowToComponent.html":{}}}],["includ",{"_index":989,"title":{},"body":{"components/HowToComponent.html":{}}}],["incorrect",{"_index":933,"title":{},"body":{"components/HowToComponent.html":{}}}],["indend",{"_index":1200,"title":{},"body":{"components/LoginComponent.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indiana",{"_index":1714,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["indic",{"_index":261,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/MatchingControllerService.html":{}}}],["info",{"_index":2,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/CallbackComponent.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{}}}],["info.model",{"_index":1223,"title":{},"body":{"injectables/MapsControllerService.html":{},"interfaces/User.html":{}}}],["info.model.t",{"_index":761,"title":{},"body":{"interfaces/ContactInfo.html":{},"interfaces/RouteInfo.html":{},"coverage.html":{}}}],["inform",{"_index":454,"title":{},"body":{"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/RouteInfo.html":{},"interfaces/User.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["infowindow",{"_index":1233,"title":{},"body":{"interfaces/Marker.html":{}}}],["initi",{"_index":146,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["initila",{"_index":152,"title":{},"body":{"components/AdminComponent.html":{}}}],["inject",{"_index":31,"title":{"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{}},"body":{"guards/AccessGuard.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":885,"title":{},"body":{"components/HowToComponent.html":{},"directives/PlacesAutocompleteDirective.html":{}}}],["instanc",{"_index":1860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instance'",{"_index":1869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instanceof",{"_index":798,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["instead",{"_index":1168,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{}}}],["instructor",{"_index":892,"title":{},"body":{"components/HowToComponent.html":{}}}],["interact",{"_index":1210,"title":{},"body":{"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["intercept",{"_index":774,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["intercept(request",{"_index":780,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["interceptor",{"_index":770,"title":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["interest",{"_index":1478,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{}}}],["interfac",{"_index":242,"title":{"interfaces/ApiError.html":{},"interfaces/ContactInfo.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"interfaces/RouteInfo.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{}},"body":{"interfaces/ApiError.html":{},"interfaces/ContactInfo.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"interfaces/RouteInfo.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["intest",{"_index":688,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["intro",{"_index":1019,"title":{},"body":{"components/LandingComponent.html":{}}}],["invok",{"_index":861,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["iowa",{"_index":1715,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["isadmin",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{}}}],["isauthent",{"_index":445,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["istrain",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{}}}],["it'",{"_index":986,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["it\\'",{"_index":999,"title":{},"body":{"components/HowToComponent.html":{}}}],["item",{"_index":420,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["js",{"_index":514,"title":{},"body":{"injectables/Auth0Service.html":{},"dependencies.html":{}}}],["json.parse(sessionstorage.getitem('expires_at",{"_index":535,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["json.parse(sessionstorage.getitem('scopes')).split",{"_index":539,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["json.stringify((authresult.expiresin",{"_index":527,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["judgment",{"_index":1479,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["jwtinterceptor",{"_index":321,"title":{"interceptors/JwtInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/JwtInterceptor.html":{},"overview.html":{}}}],["kansa",{"_index":1717,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["karma",{"_index":1830,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["keep",{"_index":1521,"title":{},"body":{"components/UsercardComponent.html":{},"miscellaneous/typealiases.html":{}}}],["kentucki",{"_index":1719,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["key",{"_index":92,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"components/HowToComponent.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{}}}],["ks",{"_index":1718,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ky",{"_index":1720,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["la",{"_index":1722,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["label",{"_index":1227,"title":{},"body":{"interfaces/Marker.html":{}}}],["land",{"_index":428,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["landing'},{'nam",{"_index":220,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["landing.component.css",{"_index":1020,"title":{},"body":{"components/LandingComponent.html":{}}}],["landing.component.html",{"_index":1021,"title":{},"body":{"components/LandingComponent.html":{}}}],["landingcompon",{"_index":219,"title":{"components/LandingComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["last",{"_index":890,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/User.html":{}}}],["lastnam",{"_index":1444,"title":{},"body":{"interfaces/User.html":{}}}],["later",{"_index":923,"title":{},"body":{"components/HowToComponent.html":{}}}],["latitud",{"_index":854,"title":{},"body":{"injectables/GeocodeService.html":{},"interfaces/Location.html":{},"injectables/MapsControllerService.html":{}}}],["latlng",{"_index":856,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["latlngliter",{"_index":1214,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["launch",{"_index":468,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["launchauth0",{"_index":1023,"title":{},"body":{"components/LandingComponent.html":{}}}],["left",{"_index":1527,"title":{},"body":{"components/UsercardComponent.html":{}}}],["legend",{"_index":200,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"overview.html":{}}}],["lessen",{"_index":1047,"title":{},"body":{"components/LandingComponent.html":{}}}],["librari",{"_index":397,"title":{},"body":{"modules/AppModule.html":{}}}],["like",{"_index":814,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["like(index",{"_index":1480,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["likecard",{"_index":1119,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["likedriv",{"_index":1242,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["likedriver(riderid",{"_index":1271,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["likes'},{'nam",{"_index":222,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["likes.component.css",{"_index":1060,"title":{},"body":{"components/LikesComponent.html":{}}}],["likes.component.html",{"_index":1061,"title":{},"body":{"components/LikesComponent.html":{}}}],["likescompon",{"_index":221,"title":{"components/LikesComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["likesmatchweb",{"_index":1116,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["likesmatchweb'},{'nam",{"_index":224,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["likesmatchweb.component.css",{"_index":1117,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["likesmatchweb.component.html",{"_index":1118,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["likesmatchwebcompon",{"_index":223,"title":{"components/LikesmatchwebComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["limit",{"_index":1452,"title":{},"body":{"interfaces/User.html":{}}}],["line",{"_index":84,"title":{},"body":{"classes/AddressModel.html":{}}}],["link",{"_index":660,"title":{},"body":{"classes/Car.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/typealiases.html":{}}}],["link.model",{"_index":665,"title":{},"body":{"classes/Car.html":{},"interfaces/User.html":{}}}],["lip",{"_index":1175,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["list",{"_index":165,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"classes/Filter.html":{},"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"classes/SwipecardModel.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["listen",{"_index":1347,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["littl",{"_index":900,"title":{},"body":{"components/HowToComponent.html":{}}}],["live",{"_index":1447,"title":{},"body":{"interfaces/User.html":{}}}],["local",{"_index":557,"title":{},"body":{"injectables/AuthService.html":{}}}],["locat",{"_index":139,"title":{"interfaces/Location.html":{}},"body":{"components/AdminComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interfaces/Location.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"components/UsercardComponent.html":{},"coverage.html":{}}}],["location.reload(tru",{"_index":522,"title":{},"body":{"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["location_obj",{"_index":1361,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["lock",{"_index":1655,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":54,"title":{},"body":{"guards/AccessGuard.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["login",{"_index":430,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/CallbackComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["login'},{'nam",{"_index":226,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["login.component.css",{"_index":1188,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":1189,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincompon",{"_index":225,"title":{"components/LoginComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":438,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["logout0",{"_index":446,"title":{},"body":{"injectables/Auth0Service.html":{},"components/NavbarComponent.html":{}}}],["long",{"_index":1368,"title":{},"body":{"interfaces/Register.html":{}}}],["longitud",{"_index":855,"title":{},"body":{"injectables/GeocodeService.html":{},"interfaces/Location.html":{},"injectables/MapsControllerService.html":{}}}],["look",{"_index":938,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/UsercardComponent.html":{}}}],["louisiana",{"_index":1721,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["m",{"_index":1810,"title":{},"body":{"index.html":{}}}],["ma",{"_index":1726,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["main",{"_index":881,"title":{},"body":{"components/HowToComponent.html":{},"miscellaneous/enumerations.html":{}}}],["make",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"injectables/MatchingControllerService.html":{},"index.html":{}}}],["manag",{"_index":669,"title":{},"body":{"components/CarRegistrationComponent.html":{},"injectables/MatchingControllerService.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["manual",{"_index":1311,"title":{},"body":{"components/NavbarComponent.html":{}}}],["manufactur",{"_index":702,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["map",{"_index":431,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{}}}],["map'},{'nam",{"_index":228,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["map(token",{"_index":592,"title":{},"body":{"injectables/AuthService.html":{}}}],["mapcompon",{"_index":227,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mapsapiload",{"_index":1345,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["mapscontrollerservic",{"_index":322,"title":{"injectables/MapsControllerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/MapsControllerService.html":{},"coverage.html":{},"overview.html":{}}}],["mapto",{"_index":35,"title":{},"body":{"guards/AccessGuard.html":{}}}],["mapto(tru",{"_index":61,"title":{},"body":{"guards/AccessGuard.html":{}}}],["mark",{"_index":849,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["marker",{"_index":1215,"title":{"interfaces/Marker.html":{}},"body":{"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"coverage.html":{}}}],["maryland",{"_index":1723,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["massachusett",{"_index":1725,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["master",{"_index":1827,"title":{},"body":{"index.html":{}}}],["match",{"_index":67,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/CallbackComponent.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matches/${riderid",{"_index":1279,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/dislikes/${riderid",{"_index":1289,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/dislikes/${riderid}/${driverid",{"_index":1290,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/filt",{"_index":1282,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/likes/${riderid",{"_index":1285,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matches/likes/${riderid}/${driverid",{"_index":1287,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["matchingcontrollerservic",{"_index":323,"title":{"injectables/MatchingControllerService.html":{}},"body":{"modules/AppModule.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["matchservic",{"_index":1063,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["math.floor(math.random",{"_index":1423,"title":{},"body":{"injectables/UploadService.html":{}}}],["md",{"_index":1724,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mean",{"_index":762,"title":{},"body":{"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["meant",{"_index":772,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["member",{"_index":1055,"title":{},"body":{"components/LandingComponent.html":{}}}],["menu",{"_index":1303,"title":{},"body":{"components/NavbarComponent.html":{}}}],["merg",{"_index":1816,"title":{},"body":{"index.html":{}}}],["messag",{"_index":252,"title":{},"body":{"interfaces/ApiError.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["messagelogin",{"_index":625,"title":{},"body":{"injectables/AuthService.html":{}}}],["messagelogin.innerhtml",{"_index":631,"title":{},"body":{"injectables/AuthService.html":{}}}],["messagelogin.style.display",{"_index":627,"title":{},"body":{"injectables/AuthService.html":{}}}],["metadata",{"_index":109,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["meter",{"_index":1382,"title":{},"body":{"interfaces/RouteInfo.html":{}}}],["method",{"_index":7,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["mi",{"_index":1728,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["michigan",{"_index":1727,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["middleencrypt",{"_index":180,"title":{},"body":{"components/AdminComponent.html":{}}}],["middleencryption.length",{"_index":183,"title":{},"body":{"components/AdminComponent.html":{}}}],["minnesota",{"_index":1729,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["miscellan",{"_index":1671,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing/incorrect",{"_index":257,"title":{},"body":{"interfaces/ApiError.html":{}}}],["mississippi",{"_index":1731,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["missouri",{"_index":1733,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mm",{"_index":1449,"title":{},"body":{"interfaces/User.html":{}}}],["mn",{"_index":1730,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mo",{"_index":1734,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mobil",{"_index":816,"title":{},"body":{"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{}}}],["mode",{"_index":600,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":651,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["models/api",{"_index":793,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["models/car.model",{"_index":715,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["models/filt",{"_index":1277,"title":{},"body":{"injectables/MatchingControllerService.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["models/link.model",{"_index":1073,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["models/office.model",{"_index":170,"title":{},"body":{"components/AdminComponent.html":{}}}],["models/rout",{"_index":1222,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["models/swipecard.model",{"_index":1072,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["models/user.model",{"_index":716,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["modifi",{"_index":1007,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["modul",{"_index":310,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["montana",{"_index":1735,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["more",{"_index":899,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"index.html":{}}}],["move",{"_index":897,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/Marker.html":{}}}],["ms",{"_index":1732,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mt",{"_index":1736,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["multi",{"_index":400,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":17,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"index.html":{}}}],["nav",{"_index":132,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"components/UsercardComponent.html":{}}}],["navbar",{"_index":883,"title":{},"body":{"components/HowToComponent.html":{},"components/NavbarComponent.html":{}}}],["navbar'},{'nam",{"_index":230,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["navbar.component.css",{"_index":1293,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":1294,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcompon",{"_index":229,"title":{"components/NavbarComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navig",{"_index":584,"title":{},"body":{"injectables/AuthService.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"index.html":{}}}],["navigateto",{"_index":404,"title":{},"body":{"classes/AppPage.html":{}}}],["nc",{"_index":1750,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nd",{"_index":1752,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ne",{"_index":1738,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nearbi",{"_index":952,"title":{},"body":{"components/HowToComponent.html":{}}}],["nebraska",{"_index":1737,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["need",{"_index":493,"title":{},"body":{"injectables/Auth0Service.html":{},"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{},"index.html":{}}}],["network",{"_index":801,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["nevada",{"_index":1739,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["new",{"_index":149,"title":{},"body":{"components/AdminComponent.html":{},"injectables/Auth0Service.html":{},"components/CarRegistrationComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"injectables/UploadService.html":{},"coverage.html":{},"index.html":{}}}],["newhampshir",{"_index":1741,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newjersey",{"_index":1743,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newmexico",{"_index":1745,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["newyork",{"_index":1747,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["next",{"_index":782,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/UsercardComponent.html":{}}}],["next.handle(request",{"_index":1015,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["next.handle(request).pip",{"_index":795,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["ng",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["ng2",{"_index":377,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["ngbactivemod",{"_index":341,"title":{},"body":{"modules/AppModule.html":{}}}],["ngbmodul",{"_index":340,"title":{},"body":{"modules/AppModule.html":{}}}],["ngif",{"_index":1321,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ngmodul",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":125,"title":{},"body":{"components/AdminComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["nh",{"_index":1742,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nj",{"_index":1744,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nm",{"_index":1746,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nobodi",{"_index":1594,"title":{},"body":{"components/UsercardComponent.html":{}}}],["none",{"_index":1169,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["north/west",{"_index":1183,"title":{},"body":{"interfaces/Location.html":{}}}],["northcarolina",{"_index":1749,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["northdakota",{"_index":1751,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["not_logged_in",{"_index":272,"title":{},"body":{"interfaces/ApiError.html":{},"miscellaneous/enumerations.html":{}}}],["notifi",{"_index":894,"title":{},"body":{"components/HowToComponent.html":{}}}],["notloggedin",{"_index":271,"title":{},"body":{"interfaces/ApiError.html":{},"miscellaneous/enumerations.html":{}}}],["now",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{},"components/HowToComponent.html":{},"injectables/MatchingControllerService.html":{}}}],["null",{"_index":586,"title":{},"body":{"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["num",{"_index":729,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["number",{"_index":86,"title":{},"body":{"classes/AddressModel.html":{},"interfaces/ApiError.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"components/HowToComponent.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Office.html":{},"interfaces/RouteInfo.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["number.parseint(strnum",{"_index":730,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["number/etc",{"_index":768,"title":{},"body":{"interfaces/ContactInfo.html":{}}}],["nv",{"_index":1740,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ny",{"_index":1748,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["object",{"_index":504,"title":{},"body":{"injectables/Auth0Service.html":{},"components/CarRegistrationComponent.html":{},"injectables/GeocodeService.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"interfaces/Register.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"components/UsercardComponent.html":{},"miscellaneous/variables.html":{}}}],["observ",{"_index":29,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{}}}],["observable.create((observ",{"_index":860,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.complet",{"_index":867,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.error(statu",{"_index":869,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.next(result",{"_index":866,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["obtain",{"_index":850,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["occur",{"_index":300,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/NavbarComponent.html":{}}}],["of(fals",{"_index":64,"title":{},"body":{"guards/AccessGuard.html":{}}}],["offic",{"_index":144,"title":{"interfaces/Office.html":{}},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"interfaces/Office.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["office.model",{"_index":1457,"title":{},"body":{"interfaces/User.html":{}}}],["office.nam",{"_index":195,"title":{},"body":{"components/AdminComponent.html":{}}}],["officeobject",{"_index":119,"title":{},"body":{"components/AdminComponent.html":{}}}],["officeobjectarray",{"_index":120,"title":{},"body":{"components/AdminComponent.html":{}}}],["oh",{"_index":1754,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ohio",{"_index":1753,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ok",{"_index":1756,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["oklahoma",{"_index":1755,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["omit",{"_index":1807,"title":{},"body":{"index.html":{}}}],["on",{"_index":487,"title":{},"body":{"injectables/Auth0Service.html":{},"components/HowToComponent.html":{},"components/UsercardComponent.html":{}}}],["onc",{"_index":895,"title":{},"body":{"components/HowToComponent.html":{},"components/LoginComponent.html":{},"index.html":{}}}],["oninit",{"_index":108,"title":{},"body":{"components/AdminComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["ontap",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["ontap(ev",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["opac",{"_index":1555,"title":{},"body":{"components/UsercardComponent.html":{}}}],["openid",{"_index":509,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["oper",{"_index":691,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["optintodr",{"_index":677,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["option",{"_index":19,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["order",{"_index":943,"title":{},"body":{"components/HowToComponent.html":{},"index.html":{}}}],["oregon",{"_index":1757,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["origin",{"_index":1008,"title":{},"body":{"interceptors/JwtInterceptor.html":{},"index.html":{}}}],["other",{"_index":1045,"title":{},"body":{"components/LandingComponent.html":{},"miscellaneous/typealiases.html":{}}}],["out",{"_index":326,"title":{},"body":{"modules/AppModule.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{},"components/NavbarComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":1341,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["over",{"_index":813,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["overview",{"_index":1801,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["overwrit",{"_index":1843,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["own",{"_index":650,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{}}}],["owner",{"_index":652,"title":{},"body":{"classes/Car.html":{}}}],["ownwer",{"_index":707,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["pa",{"_index":1759,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["packag",{"_index":1644,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":57,"title":{},"body":{"guards/AccessGuard.html":{},"components/AppComponent.html":{},"injectables/Auth0Service.html":{},"components/CallbackComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["param",{"_index":172,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["paramet",{"_index":15,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["params.bucket",{"_index":1437,"title":{},"body":{"injectables/UploadService.html":{}}}],["params.key",{"_index":1438,"title":{},"body":{"injectables/UploadService.html":{}}}],["part",{"_index":886,"title":{},"body":{"components/HowToComponent.html":{}}}],["particular",{"_index":993,"title":{},"body":{"components/HowToComponent.html":{}}}],["pass",{"_index":1257,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["passeng",{"_index":908,"title":{},"body":{"components/HowToComponent.html":{}}}],["passenger'",{"_index":957,"title":{},"body":{"components/HowToComponent.html":{}}}],["passenger\\'",{"_index":998,"title":{},"body":{"components/HowToComponent.html":{}}}],["password",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"interfaces/Register.html":{},"interfaces/User.html":{}}}],["password).then",{"_index":597,"title":{},"body":{"injectables/AuthService.html":{}}}],["past",{"_index":1127,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["path",{"_index":424,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":425,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pennsylvania",{"_index":1758,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["perfect",{"_index":1041,"title":{},"body":{"components/LandingComponent.html":{}}}],["permiss",{"_index":273,"title":{},"body":{"interfaces/ApiError.html":{},"interfaces/User.html":{}}}],["person",{"_index":485,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["phone",{"_index":910,"title":{},"body":{"components/HowToComponent.html":{},"miscellaneous/enumerations.html":{}}}],["photo",{"_index":1456,"title":{},"body":{"interfaces/User.html":{}}}],["photourl",{"_index":1445,"title":{},"body":{"interfaces/User.html":{}}}],["pictur",{"_index":1461,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["pin",{"_index":954,"title":{},"body":{"components/HowToComponent.html":{}}}],["pipe",{"_index":591,"title":{},"body":{"injectables/AuthService.html":{}}}],["pipes/d",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["place",{"_index":398,"title":{},"body":{"modules/AppModule.html":{},"components/CallbackComponent.html":{},"directives/PlacesAutocompleteDirective.html":{}}}],["placeid",{"_index":1228,"title":{},"body":{"interfaces/Marker.html":{}}}],["placesautocompletedirect",{"_index":239,"title":{"directives/PlacesAutocompleteDirective.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["plan",{"_index":920,"title":{},"body":{"components/HowToComponent.html":{}}}],["pleas",{"_index":196,"title":{},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{}}}],["plu",{"_index":1686,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["popul",{"_index":1067,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["possibel",{"_index":1469,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["possibl",{"_index":72,"title":{},"body":{"classes/AddressModel.html":{},"classes/Filter.html":{},"directives/PlacesAutocompleteDirective.html":{}}}],["post(environment.apiurl",{"_index":590,"title":{},"body":{"injectables/AuthService.html":{}}}],["potenti",{"_index":906,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["pr",{"_index":1761,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["present",{"_index":708,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["prevent",{"_index":992,"title":{},"body":{"components/HowToComponent.html":{}}}],["previou",{"_index":935,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/UsercardComponent.html":{}}}],["previous",{"_index":713,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["price",{"_index":1050,"title":{},"body":{"components/LandingComponent.html":{}}}],["primari",{"_index":262,"title":{},"body":{"interfaces/ApiError.html":{}}}],["privat",{"_index":46,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["probabl",{"_index":1166,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["problem",{"_index":1803,"title":{},"body":{"index.html":{}}}],["proceed",{"_index":788,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{}}}],["process",{"_index":887,"title":{},"body":{"components/HowToComponent.html":{}}}],["prod",{"_index":1797,"title":{},"body":{"index.html":{}}}],["produc",{"_index":657,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{}}}],["product",{"_index":1799,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profil",{"_index":238,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/Auth0Service.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["profile.compon",{"_index":388,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profile.component.t",{"_index":1628,"title":{},"body":{"coverage.html":{}}}],["profile/view",{"_index":387,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["program",{"_index":1031,"title":{},"body":{"components/LandingComponent.html":{}}}],["project",{"_index":330,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["promis",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MatchingControllerService.html":{}}}],["prop",{"_index":749,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["properli",{"_index":777,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["properti",{"_index":75,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"injectables/Auth0Service.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"interfaces/Marker.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/typealiases.html":{}}}],["protractor",{"_index":407,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provid",{"_index":265,"title":{},"body":{"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/RouteInfo.html":{},"injectables/TokenStorage.html":{},"overview.html":{}}}],["providedin",{"_index":40,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{}}}],["public",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"injectables/Auth0Service.html":{},"components/FavoritesComponent.html":{},"injectables/MapsControllerService.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{}}}],["puerto",{"_index":1687,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["puertorico",{"_index":1760,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pull",{"_index":1814,"title":{},"body":{"index.html":{}}}],["purpos",{"_index":1320,"title":{},"body":{"components/NavbarComponent.html":{}}}],["push",{"_index":1811,"title":{},"body":{"index.html":{}}}],["pushed.befor",{"_index":1813,"title":{},"body":{"index.html":{}}}],["put",{"_index":489,"title":{},"body":{"injectables/Auth0Service.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["qil",{"_index":1180,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["question",{"_index":965,"title":{},"body":{"components/HowToComponent.html":{}}}],["rc.0",{"_index":1668,"title":{},"body":{"dependencies.html":{}}}],["re",{"_index":937,"title":{},"body":{"components/HowToComponent.html":{}}}],["reach",{"_index":983,"title":{},"body":{"components/HowToComponent.html":{}}}],["reactiveformsmodul",{"_index":338,"title":{},"body":{"modules/AppModule.html":{}}}],["read:messag",{"_index":510,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["readm",{"_index":1833,"title":{},"body":{"index.html":{}}}],["reason",{"_index":872,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["redirect",{"_index":1197,"title":{},"body":{"components/LoginComponent.html":{}}}],["redirectto",{"_index":427,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirecturi",{"_index":499,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["refactor",{"_index":1167,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["refer",{"_index":421,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HowToComponent.html":{},"injectables/MatchingControllerService.html":{}}}],["refresh",{"_index":693,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["refreshfield",{"_index":680,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["reg",{"_index":734,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["region",{"_index":1421,"title":{},"body":{"injectables/UploadService.html":{}}}],["regis",{"_index":167,"title":{},"body":{"components/AdminComponent.html":{}}}],["regist",{"_index":705,"title":{"interfaces/Register.html":{}},"body":{"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/LoginComponent.html":{},"interfaces/Register.html":{},"coverage.html":{}}}],["registr",{"_index":150,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"interfaces/Register.html":{}}}],["registration'},{'nam",{"_index":214,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["registration.compon",{"_index":385,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["registration.component.css",{"_index":670,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.html",{"_index":671,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.t",{"_index":667,"title":{},"body":{"components/CarRegistrationComponent.html":{},"coverage.html":{}}}],["registration.component.ts:103",{"_index":696,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:118",{"_index":686,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:148",{"_index":692,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:20",{"_index":714,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:26",{"_index":704,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:30",{"_index":700,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:35",{"_index":703,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:40",{"_index":710,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:45",{"_index":711,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:50",{"_index":706,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:53",{"_index":683,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:70",{"_index":689,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration.component.ts:79",{"_index":695,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["registration/car",{"_index":384,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CarRegistrationComponent.html":{},"coverage.html":{}}}],["registrationkey",{"_index":121,"title":{},"body":{"components/AdminComponent.html":{}}}],["relev",{"_index":1299,"title":{},"body":{"components/NavbarComponent.html":{}}}],["reli",{"_index":1861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["relic",{"_index":712,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["reload",{"_index":1310,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["remot",{"_index":469,"title":{},"body":{"injectables/Auth0Service.html":{},"components/CallbackComponent.html":{},"components/LandingComponent.html":{}}}],["remov",{"_index":972,"title":{},"body":{"components/HowToComponent.html":{},"components/LoginComponent.html":{},"injectables/MatchingControllerService.html":{}}}],["render",{"_index":1322,"title":{},"body":{"components/NavbarComponent.html":{}}}],["repeat",{"_index":979,"title":{},"body":{"components/HowToComponent.html":{}}}],["replac",{"_index":494,"title":{},"body":{"injectables/Auth0Service.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["repo",{"_index":1802,"title":{},"body":{"index.html":{}}}],["repres",{"_index":71,"title":{},"body":{"classes/AddressModel.html":{},"interfaces/ApiError.html":{},"classes/Car.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"classes/SwipecardModel.html":{},"interfaces/User.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["represent",{"_index":769,"title":{},"body":{"interfaces/ContactInfo.html":{},"injectables/UploadService.html":{}}}],["request",{"_index":250,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MatchingControllerService.html":{},"index.html":{}}}],["request.clon",{"_index":1011,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["requestedscop",{"_index":442,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["requir",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{},"components/CallbackComponent.html":{},"components/HowToComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resembl",{"_index":1258,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["reserv",{"_index":106,"title":{},"body":{"components/AdminComponent.html":{}}}],["reset",{"_index":325,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resetcar",{"_index":681,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["resetus",{"_index":682,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["resolv",{"_index":1825,"title":{},"body":{"index.html":{}}}],["resourc",{"_index":1846,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["respect",{"_index":936,"title":{},"body":{"components/HowToComponent.html":{}}}],["respons",{"_index":248,"title":{},"body":{"interfaces/ApiError.html":{},"components/LoginComponent.html":{}}}],["responsetyp",{"_index":497,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["reston",{"_index":1338,"title":{},"body":{"interfaces/Office.html":{}}}],["result",{"_index":66,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/CallbackComponent.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retriev",{"_index":143,"title":{},"body":{"components/AdminComponent.html":{},"components/LandingComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{}}}],["return",{"_index":27,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{}}}],["returnto",{"_index":544,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["revatur",{"_index":879,"title":{},"body":{"components/HowToComponent.html":{}}}],["reversegeocod",{"_index":845,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["reversegeocode(latlng",{"_index":851,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["review",{"_index":929,"title":{},"body":{"components/HowToComponent.html":{}}}],["rhodeisland",{"_index":1762,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ri",{"_index":1763,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rico",{"_index":1688,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ride",{"_index":291,"title":{},"body":{"components/AppComponent.html":{},"components/LandingComponent.html":{},"interfaces/User.html":{}}}],["rideforc",{"_index":641,"title":{},"body":{"components/CallbackComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{}}}],["rider",{"_index":1040,"title":{},"body":{"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/UserCard.html":{},"components/UsercardComponent.html":{},"miscellaneous/enumerations.html":{}}}],["riderid",{"_index":1250,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["rideshar",{"_index":942,"title":{},"body":{"components/HowToComponent.html":{},"injectables/MatchingControllerService.html":{}}}],["ridesharecli",{"_index":1786,"title":{},"body":{"index.html":{}}}],["rideswip",{"_index":433,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/RideswipeComponent.html":{}}}],["rideswipe'},{'nam",{"_index":232,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["rideswipe.component.css",{"_index":1372,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["rideswipe.component.html",{"_index":1373,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["rideswipecompon",{"_index":231,"title":{"components/RideswipeComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["right",{"_index":1529,"title":{},"body":{"components/UsercardComponent.html":{}}}],["role",{"_index":1110,"title":{},"body":{"components/LikesComponent.html":{},"components/NavbarComponent.html":{},"interfaces/User.html":{},"miscellaneous/enumerations.html":{}}}],["role.model",{"_index":1459,"title":{},"body":{"interfaces/User.html":{}}}],["root",{"_index":41,"title":{},"body":{"guards/AccessGuard.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"index.html":{}}}],["root'},{'nam",{"_index":209,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["rotat",{"_index":1134,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["rotatey(0deg",{"_index":1146,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["rotatey(180deg",{"_index":1149,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["rotatey(90deg",{"_index":1147,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["rout",{"_index":26,"title":{"routes.html":{}},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"overview.html":{},"routes.html":{}}}],["route.data.requireslogin",{"_index":59,"title":{},"body":{"guards/AccessGuard.html":{}}}],["routeinfo",{"_index":1221,"title":{"interfaces/RouteInfo.html":{}},"body":{"injectables/MapsControllerService.html":{},"interfaces/RouteInfo.html":{},"coverage.html":{}}}],["router",{"_index":12,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["routerlink",{"_index":416,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodul",{"_index":415,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(rout",{"_index":439,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":24,"title":{},"body":{"guards/AccessGuard.html":{}}}],["routing.modul",{"_index":359,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":412,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing/app",{"_index":358,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["run",{"_index":459,"title":{},"body":{"injectables/Auth0Service.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["rxj",{"_index":37,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":36,"title":{},"body":{"guards/AccessGuard.html":{},"injectables/AuthService.html":{},"interceptors/ErrorInterceptor.html":{}}}],["rydeforc",{"_index":1413,"title":{},"body":{"injectables/UploadService.html":{}}}],["s3",{"_index":1402,"title":{},"body":{"injectables/UploadService.html":{}}}],["s3/65600312303b.png",{"_index":1159,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["safe",{"_index":1051,"title":{},"body":{"components/LandingComponent.html":{}}}],["same",{"_index":962,"title":{},"body":{"components/HowToComponent.html":{}}}],["save",{"_index":477,"title":{},"body":{"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/HowToComponent.html":{},"interfaces/Marker.html":{},"injectables/TokenStorage.html":{}}}],["savetoken",{"_index":1389,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["savetoken(token",{"_index":1391,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["sc",{"_index":1765,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["scaffold",{"_index":1791,"title":{},"body":{"index.html":{}}}],["scale(1",{"_index":1554,"title":{},"body":{"components/UsercardComponent.html":{}}}],["scale(1.2",{"_index":1557,"title":{},"body":{"components/UsercardComponent.html":{}}}],["scope",{"_index":483,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["scopes.every(scop",{"_index":540,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["scroll",{"_index":379,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["sd",{"_index":1767,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sdk",{"_index":1657,"title":{},"body":{"dependencies.html":{}}}],["sdk/clients/s3",{"_index":1416,"title":{},"body":{"injectables/UploadService.html":{}}}],["second",{"_index":89,"title":{},"body":{"classes/AddressModel.html":{},"components/HowToComponent.html":{},"interfaces/RouteInfo.html":{}}}],["secretaccesskey",{"_index":1419,"title":{},"body":{"injectables/UploadService.html":{}}}],["section",{"_index":888,"title":{},"body":{"components/HowToComponent.html":{}}}],["see",{"_index":823,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UsercardComponent.html":{}}}],["select",{"_index":194,"title":{},"body":{"components/AdminComponent.html":{},"components/HowToComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["selector",{"_index":110,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["self.userprofil",{"_index":536,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["send",{"_index":197,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"injectables/MapsControllerService.html":{}}}],["sent",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["serv",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"index.html":{}}}],["server",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/User.html":{},"index.html":{}}}],["servic",{"_index":52,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/variables.html":{}}}],["services/api/map",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["services/api/match",{"_index":364,"title":{},"body":{"modules/AppModule.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["services/api/us",{"_index":169,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppModule.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["services/auth.servic",{"_index":171,"title":{},"body":{"components/AdminComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["services/auth0.servic",{"_index":306,"title":{},"body":{"components/AppComponent.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["servier",{"_index":778,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"injectables/MatchingControllerService.html":{}}}],["session",{"_index":472,"title":{},"body":{"injectables/Auth0Service.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"injectables/TokenStorage.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["sessioncheck",{"_index":1024,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["sessionstorag",{"_index":478,"title":{},"body":{"injectables/Auth0Service.html":{},"injectables/AuthService.html":{}}}],["sessionstorage.clear",{"_index":542,"title":{},"body":{"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["sessionstorage.getitem('rol",{"_index":636,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["sessionstorage.getitem(token_key",{"_index":1396,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["sessionstorage.length",{"_index":718,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["sessionstorage.setitem('access_token",{"_index":531,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["sessionstorage.setitem('act",{"_index":617,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('address",{"_index":611,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('api_token",{"_index":532,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["sessionstorage.setitem('batchend",{"_index":613,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('expires_at',expiresat",{"_index":533,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["sessionstorage.setitem('firstnam",{"_index":605,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('id",{"_index":603,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('lastnam",{"_index":607,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('rol",{"_index":609,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('scopes',json.stringify(scop",{"_index":534,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["sessionstorage.setitem('useremail",{"_index":615,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('userpassword",{"_index":616,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem(token_key",{"_index":1395,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["set",{"_index":128,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["setcurrentrol",{"_index":1297,"title":{},"body":{"components/NavbarComponent.html":{}}}],["sethead",{"_index":1012,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["setsess",{"_index":447,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["setsession(authresult",{"_index":475,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["setsession(authresult):void",{"_index":525,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["settimeout",{"_index":1332,"title":{},"body":{"components/NavbarComponent.html":{}}}],["seven",{"_index":909,"title":{},"body":{"components/HowToComponent.html":{}}}],["share",{"_index":292,"title":{},"body":{"components/AppComponent.html":{},"interfaces/User.html":{}}}],["show",{"_index":955,"title":{},"body":{"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["shown",{"_index":978,"title":{},"body":{"components/HowToComponent.html":{}}}],["side",{"_index":800,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["sign",{"_index":1038,"title":{},"body":{"components/LandingComponent.html":{},"components/LoginComponent.html":{}}}],["signal",{"_index":1874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simpli",{"_index":821,"title":{},"body":{"components/FavoritesComponent.html":{},"components/HowToComponent.html":{}}}],["sit",{"_index":640,"title":{},"body":{"components/CallbackComponent.html":{}}}],["site",{"_index":1018,"title":{},"body":{"components/LandingComponent.html":{}}}],["skype",{"_index":912,"title":{},"body":{"components/HowToComponent.html":{},"miscellaneous/enumerations.html":{}}}],["slack",{"_index":911,"title":{},"body":{"components/HowToComponent.html":{},"miscellaneous/enumerations.html":{}}}],["someth",{"_index":1474,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["sorri",{"_index":1165,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/CallbackComponent.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"index.html":{}}}],["southcarolina",{"_index":1764,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["southdakota",{"_index":1766,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["spec.t",{"_index":1858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spec\\.t",{"_index":1856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specif",{"_index":269,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/GeocodeService.html":{},"interfaces/Location.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"miscellaneous/enumerations.html":{}}}],["specifi",{"_index":765,"title":{},"body":{"interfaces/ContactInfo.html":{}}}],["spent",{"_index":1818,"title":{},"body":{"index.html":{}}}],["src/.../api",{"_index":1673,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../contact",{"_index":1675,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.t",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":1853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../interest.model.t",{"_index":1677,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../link.model.t",{"_index":1842,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../role.model.t",{"_index":1678,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../state.model.t",{"_index":1679,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.t",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../token.storage.t",{"_index":1854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types.t",{"_index":1844,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/app",{"_index":411,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":276,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":304,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":303,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/callback/callback/callback.component.t",{"_index":638,"title":{},"body":{"components/CallbackComponent.html":{},"coverage.html":{}}}],["src/app/components/accountinfo/accountinfo.component.t",{"_index":1614,"title":{},"body":{"coverage.html":{}}}],["src/app/components/admin/admin.component.t",{"_index":102,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/components/admin/admin.component.ts:18",{"_index":166,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:20",{"_index":164,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:22",{"_index":153,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:24",{"_index":158,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:27",{"_index":127,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:42",{"_index":151,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:49",{"_index":147,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:59",{"_index":137,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/admin/admin.component.ts:70",{"_index":142,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/components/car",{"_index":666,"title":{},"body":{"components/CarRegistrationComponent.html":{},"coverage.html":{}}}],["src/app/components/favorites/favorites.component.t",{"_index":812,"title":{},"body":{"components/FavoritesComponent.html":{},"coverage.html":{}}}],["src/app/components/favorites/favorites.component.ts:14",{"_index":820,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/components/favorites/favorites.component.ts:27",{"_index":822,"title":{},"body":{"components/FavoritesComponent.html":{}}}],["src/app/components/how",{"_index":873,"title":{},"body":{"components/HowToComponent.html":{},"coverage.html":{}}}],["src/app/components/landing/landing.component.t",{"_index":1016,"title":{},"body":{"components/LandingComponent.html":{},"coverage.html":{}}}],["src/app/components/landing/landing.component.ts:17",{"_index":1030,"title":{},"body":{"components/LandingComponent.html":{}}}],["src/app/components/landing/landing.component.ts:19",{"_index":1026,"title":{},"body":{"components/LandingComponent.html":{}}}],["src/app/components/landing/landing.component.ts:34",{"_index":1028,"title":{},"body":{"components/LandingComponent.html":{}}}],["src/app/components/landing/landing.component.ts:46",{"_index":1029,"title":{},"body":{"components/LandingComponent.html":{}}}],["src/app/components/landing/landing.component.ts:53",{"_index":1027,"title":{},"body":{"components/LandingComponent.html":{}}}],["src/app/components/likes/likes.component.t",{"_index":1059,"title":{},"body":{"components/LikesComponent.html":{},"coverage.html":{}}}],["src/app/components/likes/likes.component.ts:22",{"_index":1064,"title":{},"body":{"components/LikesComponent.html":{}}}],["src/app/components/likes/likes.component.ts:39",{"_index":1069,"title":{},"body":{"components/LikesComponent.html":{}}}],["src/app/components/likes/likes.component.ts:44",{"_index":1066,"title":{},"body":{"components/LikesComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.t",{"_index":1115,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"coverage.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:135",{"_index":1133,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:146",{"_index":1125,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:45",{"_index":1123,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:62",{"_index":1136,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/likesmatchweb/likesmatchweb.component.ts:67",{"_index":1135,"title":{},"body":{"components/LikesmatchwebComponent.html":{}}}],["src/app/components/login/login.component.t",{"_index":1185,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:21",{"_index":1198,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:26",{"_index":1199,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:31",{"_index":1192,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:46",{"_index":1196,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:56",{"_index":1194,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/map/map.component.t",{"_index":1621,"title":{},"body":{"coverage.html":{}}}],["src/app/components/navbar/navbar.component.t",{"_index":1291,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts:104",{"_index":1300,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:19",{"_index":1317,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:23",{"_index":1323,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:28",{"_index":1318,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:32",{"_index":1298,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:51",{"_index":1313,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:59",{"_index":1314,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:66",{"_index":1305,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:77",{"_index":1316,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:85",{"_index":1312,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:93",{"_index":1306,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/rideswipe/rideswipe.component.t",{"_index":1370,"title":{},"body":{"components/RideswipeComponent.html":{},"coverage.html":{}}}],["src/app/components/rideswipe/rideswipe.component.ts:13",{"_index":1374,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["src/app/components/rideswipe/rideswipe.component.ts:26",{"_index":1376,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["src/app/components/usercard/usercard.component.t",{"_index":1494,"title":{},"body":{"components/UsercardComponent.html":{},"coverage.html":{}}}],["src/app/components/usercard/usercard.component.ts:128",{"_index":1509,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:139",{"_index":1513,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:170",{"_index":1516,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:194",{"_index":1517,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:36",{"_index":1531,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:38",{"_index":1539,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:44",{"_index":1525,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:46",{"_index":1524,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:48",{"_index":1520,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:50",{"_index":1523,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:52",{"_index":1541,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:55",{"_index":1537,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:57",{"_index":1507,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:72",{"_index":1526,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usercard/usercard.component.ts:77",{"_index":1511,"title":{},"body":{"components/UsercardComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.t",{"_index":1460,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:119",{"_index":1600,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:158",{"_index":1599,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:170",{"_index":1598,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:187",{"_index":1602,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:40",{"_index":1597,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:54",{"_index":1604,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:57",{"_index":1605,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:59",{"_index":1607,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:61",{"_index":1606,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/usermatchweb/usermatchweb.component.ts:66",{"_index":1601,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["src/app/components/view",{"_index":1627,"title":{},"body":{"coverage.html":{}}}],["src/app/directives/plac",{"_index":1339,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{},"coverage.html":{}}}],["src/app/guards/access.guard.t",{"_index":5,"title":{},"body":{"guards/AccessGuard.html":{}}}],["src/app/guards/access.guard.ts:16",{"_index":14,"title":{},"body":{"guards/AccessGuard.html":{}}}],["src/app/guards/access.guard.ts:21",{"_index":25,"title":{},"body":{"guards/AccessGuard.html":{}}}],["src/app/models/address.model.t",{"_index":69,"title":{},"body":{"classes/AddressModel.html":{},"coverage.html":{}}}],["src/app/models/address.model.ts:10",{"_index":93,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:12",{"_index":94,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:14",{"_index":95,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:4",{"_index":90,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:6",{"_index":82,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/address.model.ts:8",{"_index":88,"title":{},"body":{"classes/AddressModel.html":{}}}],["src/app/models/api",{"_index":244,"title":{},"body":{"interfaces/ApiError.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/car.model.t",{"_index":647,"title":{},"body":{"classes/Car.html":{},"coverage.html":{}}}],["src/app/models/car.model.ts:13",{"_index":661,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/car.model.ts:15",{"_index":656,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/car.model.ts:17",{"_index":659,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/car.model.ts:19",{"_index":663,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/car.model.ts:9",{"_index":654,"title":{},"body":{"classes/Car.html":{}}}],["src/app/models/contact",{"_index":760,"title":{},"body":{"interfaces/ContactInfo.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/models/filter.t",{"_index":830,"title":{},"body":{"classes/Filter.html":{},"coverage.html":{}}}],["src/app/models/filter.ts:10",{"_index":838,"title":{},"body":{"classes/Filter.html":{}}}],["src/app/models/filter.ts:6",{"_index":834,"title":{},"body":{"classes/Filter.html":{}}}],["src/app/models/filter.ts:8",{"_index":835,"title":{},"body":{"classes/Filter.html":{}}}],["src/app/models/interest.model.t",{"_index":1681,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/link.model.t",{"_index":1845,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app/models/location.model.t",{"_index":1181,"title":{},"body":{"interfaces/Location.html":{},"coverage.html":{}}}],["src/app/models/marker.model.t",{"_index":1225,"title":{},"body":{"interfaces/Marker.html":{},"coverage.html":{}}}],["src/app/models/office.model.t",{"_index":1335,"title":{},"body":{"interfaces/Office.html":{},"coverage.html":{}}}],["src/app/models/register.model.t",{"_index":1367,"title":{},"body":{"interfaces/Register.html":{},"coverage.html":{}}}],["src/app/models/role.model.t",{"_index":1683,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/rout",{"_index":1378,"title":{},"body":{"interfaces/RouteInfo.html":{},"coverage.html":{}}}],["src/app/models/state.model.t",{"_index":1684,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/models/swipecard.model.t",{"_index":1383,"title":{},"body":{"classes/SwipecardModel.html":{},"coverage.html":{}}}],["src/app/models/swipecard.model.ts:6",{"_index":1385,"title":{},"body":{"classes/SwipecardModel.html":{}}}],["src/app/models/swipecard.model.ts:8",{"_index":1386,"title":{},"body":{"classes/SwipecardModel.html":{}}}],["src/app/models/user.model.t",{"_index":1440,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/services/api/map",{"_index":1205,"title":{},"body":{"injectables/MapsControllerService.html":{},"coverage.html":{}}}],["src/app/services/api/match",{"_index":1235,"title":{},"body":{"injectables/MatchingControllerService.html":{},"coverage.html":{}}}],["src/app/services/api/us",{"_index":1633,"title":{},"body":{"coverage.html":{}}}],["src/app/services/auth.service.t",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:105",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:113",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:121",{"_index":576,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:18",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:40",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:59",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth0.service.t",{"_index":440,"title":{},"body":{"injectables/Auth0Service.html":{},"coverage.html":{}}}],["src/app/services/auth0.service.ts:11",{"_index":512,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["src/app/services/auth0.service.ts:14",{"_index":507,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["src/app/services/auth0.service.ts:17",{"_index":513,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["src/app/services/auth0.service.ts:20",{"_index":502,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["src/app/services/auth0.service.ts:28",{"_index":450,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["src/app/services/auth0.service.ts:33",{"_index":467,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["src/app/services/auth0.service.ts:38",{"_index":458,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["src/app/services/auth0.service.ts:55",{"_index":476,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["src/app/services/auth0.service.ts:65",{"_index":462,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["src/app/services/auth0.service.ts:71",{"_index":452,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["src/app/services/auth0.service.ts:86",{"_index":481,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["src/app/services/auth0.service.ts:92",{"_index":470,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["src/app/services/geocode.service.t",{"_index":841,"title":{},"body":{"injectables/GeocodeService.html":{},"coverage.html":{}}}],["src/app/services/geocode.service.ts:15",{"_index":846,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["src/app/services/geocode.service.ts:29",{"_index":853,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["src/app/services/geocode.service.ts:51",{"_index":848,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["src/app/services/upload.service.t",{"_index":1398,"title":{},"body":{"injectables/UploadService.html":{},"coverage.html":{}}}],["src/app/services/upload.service.ts:13",{"_index":1414,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/services/upload.service.ts:15",{"_index":1409,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/services/upload.service.ts:26",{"_index":1410,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/services/upload.service.ts:42",{"_index":1412,"title":{},"body":{"injectables/UploadService.html":{}}}],["src/app/utils/error.interceptor.t",{"_index":771,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/utils/error.interceptor.ts:20",{"_index":776,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/utils/error.interceptor.ts:33",{"_index":783,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["src/app/utils/jwt.interceptor.t",{"_index":1001,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/utils/jwt.interceptor.ts:15",{"_index":1004,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/utils/jwt.interceptor.ts:28",{"_index":1005,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["src/app/utils/token.storage.t",{"_index":1387,"title":{},"body":{"injectables/TokenStorage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utils/token.storage.ts:20",{"_index":1392,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["src/app/utils/token.storage.ts:28",{"_index":1390,"title":{},"body":{"injectables/TokenStorage.html":{}}}],["src/app/utils/types.t",{"_index":1847,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/environments/environment.prod.t",{"_index":1639,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":1640,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":1641,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":837,"title":{"index.html":{}},"body":{"classes/Filter.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/User.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["state",{"_index":23,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{}}}],["state('back",{"_index":1148,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["state('cent",{"_index":1544,"title":{},"body":{"components/UsercardComponent.html":{}}}],["state('front",{"_index":1144,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["state('left",{"_index":1546,"title":{},"body":{"components/UsercardComponent.html":{}}}],["state('on",{"_index":1553,"title":{},"body":{"components/UsercardComponent.html":{}}}],["state('right",{"_index":1549,"title":{},"body":{"components/UsercardComponent.html":{}}}],["state('two",{"_index":1556,"title":{},"body":{"components/UsercardComponent.html":{}}}],["statement",{"_index":1609,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":253,"title":{},"body":{"interfaces/ApiError.html":{},"injectables/GeocodeService.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["step",{"_index":785,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"index.html":{}}}],["stick",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{}}}],["still",{"_index":466,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["storag",{"_index":473,"title":{},"body":{"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"injectables/TokenStorage.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":1319,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/UploadService.html":{},"index.html":{}}}],["street",{"_index":87,"title":{},"body":{"classes/AddressModel.html":{}}}],["string",{"_index":81,"title":{},"body":{"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"injectables/GeocodeService.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"interfaces/Register.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["strnum",{"_index":727,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["structur",{"_index":1071,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["style",{"_index":1137,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["styleurl",{"_index":113,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["sub",{"_index":136,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"components/UsercardComponent.html":{}}}],["submit",{"_index":753,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["success",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GeocodeService.html":{},"injectables/UploadService.html":{},"index.html":{}}}],["successfuli",{"_index":941,"title":{},"body":{"components/HowToComponent.html":{}}}],["such",{"_index":255,"title":{},"body":{"interfaces/ApiError.html":{}}}],["support",{"_index":668,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"modules.html":{}}}],["sure",{"_index":690,"title":{},"body":{"components/CarRegistrationComponent.html":{},"index.html":{}}}],["svg",{"_index":1834,"title":{},"body":{"modules.html":{}}}],["swipcard",{"_index":1068,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["swipe",{"_index":990,"title":{},"body":{"components/HowToComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["swipe(act",{"_index":1512,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipe_act",{"_index":1501,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipebio",{"_index":1536,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipecard",{"_index":1062,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["swipecardbio",{"_index":1502,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipecardmain",{"_index":1503,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipecardmodel",{"_index":1070,"title":{"classes/SwipecardModel.html":{}},"body":{"components/LikesComponent.html":{},"classes/SwipecardModel.html":{},"components/UsercardComponent.html":{},"coverage.html":{}}}],["swipeleft",{"_index":1528,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swipemain",{"_index":1538,"title":{},"body":{"components/UsercardComponent.html":{}}}],["swiperight",{"_index":1530,"title":{},"body":{"components/UsercardComponent.html":{}}}],["switch",{"_index":134,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"components/UsercardComponent.html":{}}}],["system",{"_index":74,"title":{},"body":{"classes/AddressModel.html":{},"components/AppComponent.html":{},"components/CarRegistrationComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Register.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{}}}],["tab",{"_index":968,"title":{},"body":{"components/HowToComponent.html":{}}}],["tabl",{"_index":709,"title":{},"body":{"components/CarRegistrationComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":1643,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":784,"title":{},"body":{"interceptors/ErrorInterceptor.html":{},"components/HowToComponent.html":{},"injectables/MapsControllerService.html":{},"index.html":{}}}],["tap",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["tell",{"_index":1315,"title":{},"body":{"components/NavbarComponent.html":{}}}],["templat",{"_index":99,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["templateurl",{"_index":115,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["tennesse",{"_index":1768,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["test",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["texa",{"_index":1770,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["text",{"_index":966,"title":{},"body":{"components/HowToComponent.html":{}}}],["text\">contact",{"_index":1114,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{}}}],["th",{"_index":159,"title":{},"body":{"components/AdminComponent.html":{}}}],["thank",{"_index":1849,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["themselv",{"_index":168,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{}}}],["there'",{"_index":1593,"title":{},"body":{"components/UsercardComponent.html":{}}}],["there\\'",{"_index":1595,"title":{},"body":{"components/UsercardComponent.html":{}}}],["thing",{"_index":639,"title":{},"body":{"components/CallbackComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["think",{"_index":975,"title":{},"body":{"components/HowToComponent.html":{}}}],["third",{"_index":971,"title":{},"body":{"components/HowToComponent.html":{}}}],["this.addressselect.emit(this.getformattedaddress(autocomplete.getplac",{"_index":1366,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["this.animst",{"_index":1575,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.animthumbst",{"_index":1573,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.auth.author",{"_index":515,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["this.auth.logout",{"_index":543,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["this.auth.parsehash((err",{"_index":516,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["this.auth0.logout0",{"_index":1328,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.auth0service.login",{"_index":1037,"title":{},"body":{"components/LandingComponent.html":{}}}],["this.authenticator(email",{"_index":596,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.authservice.authenticate(this.useremail",{"_index":1202,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.istrain",{"_index":173,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.authservice.logout",{"_index":810,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["this.batchend",{"_index":182,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.car",{"_index":720,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carmak",{"_index":741,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carmodel",{"_index":743,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject",{"_index":719,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.id",{"_index":738,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.mak",{"_index":740,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.model",{"_index":742,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.own",{"_index":744,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.carobject.year",{"_index":745,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.cars.length",{"_index":721,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.cars.push(el",{"_index":731,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.caryear",{"_index":746,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.client_id",{"_index":496,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["this.currentindex",{"_index":1583,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.currentswipecard",{"_index":1569,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.currentus",{"_index":1034,"title":{},"body":{"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.datelocationencrypt",{"_index":179,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.drop",{"_index":1331,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.el",{"_index":1358,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["this.elref.nativeel",{"_index":1359,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["this.encryptedlocationd",{"_index":186,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.fold",{"_index":1422,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.geocod",{"_index":859,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.geocoder.geocod",{"_index":862,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.getoffic",{"_index":175,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.gets3bucket().upload(param",{"_index":1429,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.http",{"_index":589,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.http.delete[]>(environment.apiurl",{"_index":1288,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["this.http.get(environment.apiurl",{"_index":1224,"title":{},"body":{"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{}}}],["this.http.get[]>(environment.apiurl",{"_index":1278,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["this.http.post(environment.apiurl",{"_index":1281,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["this.http.put[]>(environment.apiurl",{"_index":1286,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["this.isadmin",{"_index":637,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.likecards.push(card",{"_index":1170,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["this.mapsapiloader.load().then",{"_index":1362,"title":{},"body":{"directives/PlacesAutocompleteDirective.html":{}}}],["this.matchservice.dislikedriver(this.currentuser.id",{"_index":1488,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.matchservice.getlikeddrivers(this.currentuser.id).subscrib",{"_index":1076,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["this.matchservice.getmatchingdrivers(+(sessionstorage.getitem(\"id\"))).subscrib",{"_index":1470,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.matchservice.getmatchingdrivers(this.currentuser.id).subscrib",{"_index":1566,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.matchservice.likedriver(this.currentuser.id",{"_index":1486,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.matchservice.undislikedriver(this.currentuser.id",{"_index":1484,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.matchservice.unlikedriver(this.currentuser.id",{"_index":1487,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.officeobject",{"_index":189,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.officeobjectarray",{"_index":188,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.registrationkey",{"_index":178,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.requestedscop",{"_index":501,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["this.resetus",{"_index":722,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.rol",{"_index":1327,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.route.navigate([\"/land",{"_index":174,"title":{},"body":{"components/AdminComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"components/UsercardComponent.html":{}}}],["this.route.navigate(['/land",{"_index":1201,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.route.url",{"_index":1329,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router.navigate(['/map",{"_index":521,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["this.router.navigate(['login",{"_index":63,"title":{},"body":{"guards/AccessGuard.html":{},"interceptors/ErrorInterceptor.html":{}}}],["this.sess",{"_index":1036,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["this.sessioncheck",{"_index":1035,"title":{},"body":{"components/LandingComponent.html":{},"components/NavbarComponent.html":{}}}],["this.setcurrentrol",{"_index":1325,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.setsession(authresult",{"_index":520,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["this.swipe_action.left",{"_index":1579,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipe_action.right",{"_index":1515,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecardmain.nativeelement.classlist.add('hidden",{"_index":1571,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecardmain.nativeelement.classlist.remove('hidden",{"_index":1572,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecards.length",{"_index":1568,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecards.push(card",{"_index":1107,"title":{},"body":{"components/LikesComponent.html":{},"components/UsercardComponent.html":{}}}],["this.swipecards.splice(this.currentindex",{"_index":1582,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecards[0",{"_index":1570,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.swipecards[this.currentindex].user.id).subscrib",{"_index":1578,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.thumbimg",{"_index":1576,"title":{},"body":{"components/UsercardComponent.html":{}}}],["this.tokenstorage.gettoken",{"_index":1010,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["this.tokenstorage.savetoken(token",{"_index":594,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.url",{"_index":1435,"title":{},"body":{"injectables/UploadService.html":{}}}],["this.us",{"_index":1491,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.userobject",{"_index":736,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userobject.cars.push(this.carobject",{"_index":747,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userobject.id",{"_index":724,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userpass",{"_index":1203,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.users.push(card",{"_index":1473,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.users.splice(index",{"_index":1489,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.users[index].choos",{"_index":1483,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.users[index].user.id).subscrib",{"_index":1485,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["this.userservice.createcar(this.carobject).subscribe(car",{"_index":751,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userservice.getallcars().subscribe(c",{"_index":725,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userservice.getalloffices().subscribe(data",{"_index":187,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.userservice.getcarbyid(num).subscrib",{"_index":1087,"title":{},"body":{"components/LikesComponent.html":{}}}],["this.userservice.getcontactinfobyid(num).subscrib",{"_index":1096,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["this.userservice.getcurrentuser().pip",{"_index":60,"title":{},"body":{"guards/AccessGuard.html":{}}}],["this.userservice.getcurrentuser().subscrib",{"_index":1074,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["this.userservice.getcurrentuser().subscribe(us",{"_index":732,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["this.userservice.getcurrentuserobservable().subscrib",{"_index":1033,"title":{},"body":{"components/LandingComponent.html":{}}}],["this.userservice.getregistrationkey().subscrib",{"_index":176,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.userservice.getuserbyemail(email).then((x",{"_index":601,"title":{},"body":{"injectables/AuthService.html":{}}}],["those",{"_index":1454,"title":{},"body":{"interfaces/User.html":{}}}],["thrash",{"_index":1682,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["three",{"_index":918,"title":{},"body":{"components/HowToComponent.html":{}}}],["throwerror",{"_index":792,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(apierror",{"_index":811,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["throwerror(err.error",{"_index":803,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["thu",{"_index":931,"title":{},"body":{"components/HowToComponent.html":{}}}],["thumb",{"_index":1518,"title":{},"body":{"components/UsercardComponent.html":{}}}],["thumbanimdon",{"_index":1506,"title":{},"body":{"components/UsercardComponent.html":{}}}],["thumbimg",{"_index":1504,"title":{},"body":{"components/UsercardComponent.html":{}}}],["thumbnail",{"_index":1542,"title":{},"body":{"components/UsercardComponent.html":{}}}],["time",{"_index":1220,"title":{},"body":{"injectables/MapsControllerService.html":{},"interfaces/RouteInfo.html":{},"interfaces/User.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"index.html":{}}}],["titl",{"_index":285,"title":{},"body":{"components/AppComponent.html":{}}}],["tn",{"_index":1769,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["to'},{'nam",{"_index":218,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["to.compon",{"_index":351,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["to.component.css",{"_index":877,"title":{},"body":{"components/HowToComponent.html":{}}}],["to.component.html",{"_index":878,"title":{},"body":{"components/HowToComponent.html":{}}}],["to.component.t",{"_index":874,"title":{},"body":{"components/HowToComponent.html":{},"coverage.html":{}}}],["to/how",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/HowToComponent.html":{},"coverage.html":{}}}],["today",{"_index":1039,"title":{},"body":{"components/LandingComponent.html":{}}}],["toggl",{"_index":1301,"title":{},"body":{"components/NavbarComponent.html":{}}}],["token",{"_index":465,"title":{},"body":{"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"interfaces/Register.html":{},"injectables/TokenStorage.html":{},"miscellaneous/variables.html":{}}}],["token.storag",{"_index":1009,"title":{},"body":{"interceptors/JwtInterceptor.html":{}}}],["token_key",{"_index":1393,"title":{},"body":{"injectables/TokenStorage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokenstorag",{"_index":552,"title":{"injectables/TokenStorage.html":{}},"body":{"injectables/AuthService.html":{},"interceptors/JwtInterceptor.html":{},"injectables/TokenStorage.html":{},"coverage.html":{}}}],["top",{"_index":926,"title":{},"body":{"components/HowToComponent.html":{}}}],["topromis",{"_index":595,"title":{},"body":{"injectables/AuthService.html":{}}}],["total",{"_index":1381,"title":{},"body":{"interfaces/RouteInfo.html":{}}}],["tpye",{"_index":1875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["track",{"_index":1522,"title":{},"body":{"components/UsercardComponent.html":{}}}],["trainer",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{},"components/HowToComponent.html":{},"interfaces/Register.html":{},"miscellaneous/enumerations.html":{}}}],["transform",{"_index":1145,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["transit",{"_index":1138,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["transition('on",{"_index":1559,"title":{},"body":{"components/UsercardComponent.html":{}}}],["transition('two",{"_index":1561,"title":{},"body":{"components/UsercardComponent.html":{}}}],["translatex",{"_index":1547,"title":{},"body":{"components/UsercardComponent.html":{}}}],["translatex(0",{"_index":1545,"title":{},"body":{"components/UsercardComponent.html":{}}}],["translatex(200",{"_index":1550,"title":{},"body":{"components/UsercardComponent.html":{}}}],["trash",{"_index":1481,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{}}}],["travel",{"_index":1219,"title":{},"body":{"injectables/MapsControllerService.html":{}}}],["tree",{"_index":101,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["trigger",{"_index":1139,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["trigger('flip",{"_index":1143,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["trigger('pop",{"_index":1552,"title":{},"body":{"components/UsercardComponent.html":{}}}],["trigger('slid",{"_index":1543,"title":{},"body":{"components/UsercardComponent.html":{}}}],["true",{"_index":65,"title":{},"body":{"guards/AccessGuard.html":{},"modules/AppModule.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{},"miscellaneous/variables.html":{}}}],["two",{"_index":948,"title":{},"body":{"components/HowToComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{}}}],["tx",{"_index":1771,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type",{"_index":18,"title":{},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"interfaces/RouteInfo.html":{},"classes/SwipecardModel.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.model.t",{"_index":1676,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typealias",{"_index":1840,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["u",{"_index":1492,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{},"index.html":{}}}],["u.photourl",{"_index":1493,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["ui.com/images/avatar/large/chris.jpg",{"_index":1082,"title":{},"body":{"components/LikesComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["unauthor",{"_index":275,"title":{},"body":{"interfaces/ApiError.html":{},"miscellaneous/enumerations.html":{}}}],["unavail",{"_index":632,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefin",{"_index":634,"title":{},"body":{"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{}}}],["under",{"_index":1195,"title":{},"body":{"components/LoginComponent.html":{}}}],["underneath",{"_index":884,"title":{},"body":{"components/HowToComponent.html":{}}}],["undislikedriv",{"_index":1243,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["undislikedriver(riderid",{"_index":1273,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["unit",{"_index":1685,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["unknown",{"_index":1142,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["unlik",{"_index":1249,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["unlikedriv",{"_index":1244,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["unlikedriver(riderid",{"_index":1275,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["until",{"_index":994,"title":{},"body":{"components/HowToComponent.html":{}}}],["up",{"_index":129,"title":{},"body":{"components/AdminComponent.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"interceptors/ErrorInterceptor.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"injectables/GeocodeService.html":{},"interceptors/JwtInterceptor.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["updat",{"_index":294,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["updatefilt",{"_index":1596,"title":{},"body":{"components/UsermatchwebComponent.html":{}}}],["upload",{"_index":1399,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadfil",{"_index":1408,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadfile(fil",{"_index":1411,"title":{},"body":{"injectables/UploadService.html":{}}}],["uploadservic",{"_index":1397,"title":{"injectables/UploadService.html":{}},"body":{"injectables/UploadService.html":{},"coverage.html":{}}}],["upresult",{"_index":1428,"title":{},"body":{"injectables/UploadService.html":{}}}],["upresult.fail",{"_index":1433,"title":{},"body":{"injectables/UploadService.html":{}}}],["uri",{"_index":1265,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["url",{"_index":48,"title":{},"body":{"guards/AccessGuard.html":{},"classes/Car.html":{},"injectables/UploadService.html":{},"interfaces/User.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["us",{"_index":55,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"injectables/GeocodeService.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/Marker.html":{},"components/NavbarComponent.html":{},"interfaces/Register.html":{},"injectables/TokenStorage.html":{},"injectables/UploadService.html":{},"interfaces/UserCard.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":399,"title":{},"body":{"modules/AppModule.html":{}}}],["usepromis",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{}}}],["user",{"_index":53,"title":{"interfaces/User.html":{}},"body":{"guards/AccessGuard.html":{},"classes/AddressModel.html":{},"components/AdminComponent.html":{},"interfaces/ApiError.html":{},"components/AppComponent.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"interfaces/ContactInfo.html":{},"components/FavoritesComponent.html":{},"classes/Filter.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"interfaces/Marker.html":{},"injectables/MatchingControllerService.html":{},"components/NavbarComponent.html":{},"interfaces/Office.html":{},"directives/PlacesAutocompleteDirective.html":{},"interfaces/Register.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user'",{"_index":766,"title":{},"body":{"interfaces/ContactInfo.html":{},"classes/Filter.html":{},"components/HowToComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"injectables/MatchingControllerService.html":{},"interfaces/User.html":{},"interfaces/UserCard.html":{}}}],["user.model",{"_index":664,"title":{},"body":{"classes/Car.html":{},"classes/SwipecardModel.html":{}}}],["user.user.address",{"_index":1176,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user.user.batchend",{"_index":1177,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user.user.bio",{"_index":1179,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user.user.email",{"_index":1174,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user.user.firstnam",{"_index":1172,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user.user.lastnam",{"_index":1173,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["user\\'",{"_index":1000,"title":{},"body":{"components/HowToComponent.html":{}}}],["usercard",{"_index":434,"title":{"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{}}}],["usercard'},{'nam",{"_index":234,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["usercard.component.css",{"_index":1495,"title":{},"body":{"components/UsercardComponent.html":{}}}],["usercard.component.html",{"_index":1496,"title":{},"body":{"components/UsercardComponent.html":{}}}],["usercardcompon",{"_index":233,"title":{"components/UsercardComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usercontrollerservic",{"_index":11,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["useremail",{"_index":1190,"title":{},"body":{"components/LoginComponent.html":{}}}],["userhasscop",{"_index":448,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["userhasscopes(scop",{"_index":480,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["userid",{"_index":723,"title":{},"body":{"components/CarRegistrationComponent.html":{},"interfaces/Marker.html":{}}}],["userlink",{"_index":1075,"title":{},"body":{"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["usermatchweb",{"_index":1462,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["usermatchweb'},{'nam",{"_index":236,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["usermatchweb.component.css",{"_index":1464,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["usermatchweb.component.html",{"_index":1463,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["usermatchwebcompon",{"_index":235,"title":{"components/UsermatchwebComponent.html":{}},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usernam",{"_index":891,"title":{},"body":{"components/HowToComponent.html":{},"components/LoginComponent.html":{},"interfaces/Register.html":{},"interfaces/User.html":{}}}],["username/phon",{"_index":767,"title":{},"body":{"interfaces/ContactInfo.html":{}}}],["userobject",{"_index":678,"title":{},"body":{"components/CarRegistrationComponent.html":{}}}],["userpass",{"_index":1191,"title":{},"body":{"components/LoginComponent.html":{}}}],["userprofil",{"_index":436,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/Auth0Service.html":{}}}],["users/{userid",{"_index":1270,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["userservic",{"_index":20,"title":{},"body":{"guards/AccessGuard.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/NavbarComponent.html":{},"interfaces/UserCard.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["ut",{"_index":1773,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["utah",{"_index":1772,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["util",{"_index":130,"title":{},"body":{"components/AdminComponent.html":{},"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"injectables/UploadService.html":{}}}],["utils/error.interceptor",{"_index":381,"title":{},"body":{"modules/AppModule.html":{}}}],["utils/jwt.interceptor",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["utils/token.storag",{"_index":582,"title":{},"body":{"injectables/AuthService.html":{}}}],["va",{"_index":1777,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["valid",{"_index":461,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["valu",{"_index":163,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/Auth0Service.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"injectables/GeocodeService.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"interfaces/Location.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"classes/SwipecardModel.html":{},"injectables/UploadService.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":203,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["variabl",{"_index":1638,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["varieti",{"_index":889,"title":{},"body":{"components/HowToComponent.html":{}}}],["vehicl",{"_index":658,"title":{},"body":{"classes/Car.html":{},"components/HowToComponent.html":{}}}],["venmo",{"_index":1446,"title":{},"body":{"interfaces/User.html":{}}}],["verdict",{"_index":1476,"title":{},"body":{"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["veri",{"_index":1160,"title":{},"body":{"components/LikesmatchwebComponent.html":{},"interfaces/UserCard.html":{}}}],["vermont",{"_index":1774,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["version",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["via",{"_index":1829,"title":{},"body":{"index.html":{}}}],["view",{"_index":161,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/UserCard-1.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["viewchild",{"_index":1534,"title":{},"body":{"components/UsercardComponent.html":{}}}],["viewchild('swipebio",{"_index":1563,"title":{},"body":{"components/UsercardComponent.html":{}}}],["viewchild('swipemain",{"_index":1562,"title":{},"body":{"components/UsercardComponent.html":{}}}],["viewprofilecompon",{"_index":237,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CallbackComponent.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{},"coverage.html":{},"overview.html":{}}}],["virginia",{"_index":1776,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["visibl",{"_index":1106,"title":{},"body":{"components/LikesComponent.html":{},"classes/SwipecardModel.html":{},"components/UsercardComponent.html":{}}}],["visit",{"_index":964,"title":{},"body":{"components/HowToComponent.html":{}}}],["void",{"_index":141,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{},"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/LikesComponent.html":{},"components/LikesmatchwebComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"directives/PlacesAutocompleteDirective.html":{},"components/RideswipeComponent.html":{},"injectables/TokenStorage.html":{},"components/UsercardComponent.html":{},"components/UsermatchwebComponent.html":{}}}],["vs",{"_index":1375,"title":{},"body":{"components/RideswipeComponent.html":{}}}],["vt",{"_index":1775,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wa",{"_index":1779,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wait",{"_index":643,"title":{},"body":{"components/CallbackComponent.html":{}}}],["want",{"_index":58,"title":{},"body":{"guards/AccessGuard.html":{},"components/HowToComponent.html":{},"components/LandingComponent.html":{}}}],["washingston",{"_index":969,"title":{},"body":{"components/HowToComponent.html":{}}}],["washington",{"_index":1778,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["way",{"_index":960,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{},"index.html":{}}}],["we'r",{"_index":779,"title":{},"body":{"interceptors/ErrorInterceptor.html":{}}}],["web",{"_index":1405,"title":{},"body":{"injectables/UploadService.html":{}}}],["westvirginia",{"_index":1780,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["whater",{"_index":1859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whether",{"_index":464,"title":{},"body":{"injectables/Auth0Service.html":{},"injectables/AuthService.html":{},"components/FavoritesComponent.html":{},"components/LandingComponent.html":{},"components/NavbarComponent.html":{},"components/RideswipeComponent.html":{},"interfaces/User.html":{},"interfaces/UserCard-1.html":{},"components/UsermatchwebComponent.html":{}}}],["whichev",{"_index":984,"title":{},"body":{"components/HowToComponent.html":{}}}],["wi",{"_index":1783,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["window.location.hash",{"_index":519,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["window.screen.width",{"_index":828,"title":{},"body":{"components/FavoritesComponent.html":{},"components/RideswipeComponent.html":{}}}],["wisconsin",{"_index":1782,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wish",{"_index":958,"title":{},"body":{"components/HowToComponent.html":{}}}],["within",{"_index":917,"title":{},"body":{"components/HowToComponent.html":{},"components/LandingComponent.html":{}}}],["without",{"_index":1263,"title":{},"body":{"injectables/MatchingControllerService.html":{}}}],["work",{"_index":698,"title":{},"body":{"components/CarRegistrationComponent.html":{},"components/LandingComponent.html":{},"injectables/MapsControllerService.html":{},"interfaces/User.html":{}}}],["write:messag",{"_index":511,"title":{},"body":{"injectables/Auth0Service.html":{}}}],["wv",{"_index":1781,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wy",{"_index":1785,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wyom",{"_index":1784,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["x",{"_index":598,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.activ",{"_index":618,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.address",{"_index":612,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.batchend",{"_index":614,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.firstnam",{"_index":606,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.id.tostr",{"_index":604,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.lastnam",{"_index":608,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.role",{"_index":610,"title":{},"body":{"injectables/AuthService.html":{}}}],["xcvf",{"_index":185,"title":{},"body":{"components/AdminComponent.html":{}}}],["ye",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{},"components/CarRegistrationComponent.html":{}}}],["year",{"_index":653,"title":{},"body":{"classes/Car.html":{},"components/CarRegistrationComponent.html":{},"components/HowToComponent.html":{}}}],["you'r",{"_index":1042,"title":{},"body":{"components/LandingComponent.html":{}}}],["you'v",{"_index":1812,"title":{},"body":{"index.html":{}}}],["you\\'r",{"_index":1057,"title":{},"body":{"components/LandingComponent.html":{}}}],["yourself",{"_index":902,"title":{},"body":{"components/HowToComponent.html":{}}}],["ype",{"_index":1680,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["yyyi",{"_index":1448,"title":{},"body":{"interfaces/User.html":{}}}],["zip",{"_index":80,"title":{},"body":{"classes/AddressModel.html":{}}}],["zone.j",{"_index":1669,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":324,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["zxcjhd5+grqjenpwbs31mtoy1gsetewyuhsm5h6p",{"_index":1420,"title":{},"body":{"injectables/UploadService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AccessGuard.html":{"url":"guards/AccessGuard.html","title":"guard - AccessGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AccessGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/access.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/access.guard.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/guards/access.guard.ts:21\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                        \n                                                                    ActivatedRouteSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    RouterStateSnapshot\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean | Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  Router,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n} from '@angular/router';\nimport { catchError, mapTo } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { UserControllerService } from '../../app/services/api/user-controller.service';\n\n\n@Injectable({\n    providedIn: 'root',\n  })\n  export class AccessGuard implements CanActivate {\n    constructor(private userService: UserControllerService, private router: Router) {}\n  \n    // RouterStateSnapshot to cache the url attempted to be accessed on the auth service\n    // after user logs in, use this url to direct them to the page they want\n    canActivate(\n      route: ActivatedRouteSnapshot,\n      state: RouterStateSnapshot\n    ): boolean | Observable {\n      if (route.data.requiresLogin) {\n        return this.userService.getCurrentUser().pipe(\n          mapTo(true),\n          catchError(_ => {\n            this.router.navigate(['login']);\n            return of(false);\n          })\n        );\n      }\n      return true;\n    }\n  }\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddressModel.html":{"url":"classes/AddressModel.html","title":"class - AddressModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddressModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/address.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents possible adress of Users of the system \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                    Optional\n                                address2\n                            \n                            \n                                addressID\n                            \n                            \n                                city\n                            \n                            \n                                state\n                            \n                            \n                                zip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        address:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:6\n                            \n                        \n\n                \n                    \n                        First line of the address (house number, Street name) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            address2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        address2:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:8\n                            \n                        \n\n                \n                    \n                        Second line of the address \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addressID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        addressID:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:4\n                            \n                        \n\n                \n                    \n                        The id (and possible key) of the address \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        city:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:10\n                            \n                        \n\n                \n                    \n                        THe City of the address \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        state:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:12\n                            \n                        \n\n                \n                    \n                        The State the address is in \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zip\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        zip:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/address.model.ts:14\n                            \n                        \n\n                \n                    \n                        Represents the zip-code \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AddressModel {\n    /** The id (and possible key) of the address */\n    addressID: number;\n    /** First line of the address (house number, Street name) */\n    address: string;\n    /** Second line of the address */\n    address2?: string;\n    /** THe City of the address */\n    city: string;\n    /** The State the address is in */\n    state: string;\n    /** Represents the zip-code */\n    zip: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/admin/admin.component.ts\n\n\n    \n        Description\n    \n    \n        Allows extra features reserved for Administrators\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n            \n                styleUrls\n                admin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                batchEnd\n                            \n                            \n                                encryptedLocationDate\n                            \n                            \n                                officeObject\n                            \n                            \n                                officeObjectArray\n                            \n                            \n                                registrationKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dateLocationEncryption\n                            \n                            \n                                getOffices\n                            \n                            \n                                getRegistrationKey\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService, authService: AuthService, route: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/admin/admin.component.ts:27\n                            \n                        \n\n                \n                    \n                            Sets up Component with User Service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows User Services to be utilized\n\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows Authentication Services to be utilized\n\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows Nav compnent to switch between sub-components\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateLocationEncryption\n                            \n                            \n                        \n                    \n                \n                \n                    \ndateLocationEncryption()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Sets up a date and location encryption key \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getOffices\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetOffices()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:70\n                            \n                        \n\n\n                \n                    \n                            Retrieves all offices, called on component initialization\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRegistrationKey\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRegistrationKey()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            Alows a New registration key to be used for New User Registration \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:42\n                            \n                        \n\n\n                \n                    \n                            Initilaizes the Component with the offices \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            batchEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        batchEnd:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:22\n                            \n                        \n\n                \n                    \n                        When the current batch ends \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            encryptedLocationDate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        encryptedLocationDate:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:27\n                            \n                        \n\n                \n                    \n                        Holds the office and batch end \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            officeObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        officeObject:     \n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:24\n                            \n                        \n\n                \n                    \n                        Holds th current office being viewed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            officeObjectArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        officeObjectArray:     Office[]\n\n                    \n                \n                    \n                        \n                            Type :     Office[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:20\n                            \n                        \n\n                \n                    \n                        Holds a list of offices \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registrationKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        registrationKey:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/admin/admin.component.ts:18\n                            \n                        \n\n                \n                    \n                        Holds a registration key that new users can use to regiser themselves \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { Office } from '../../models/office.model';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\n\n/**\n * Allows extra features reserved for Administrators\n */\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  /** Holds a registration key that new users can use to regiser themselves */\n  registrationKey: string;\n  /** Holds a list of offices */\n  officeObjectArray: Office[] = [];\n  /** When the current batch ends */\n  batchEnd: string;\n  /** Holds th current office being viewed */\n  officeObject;\n\n  /** Holds the office and batch end */\n  encryptedLocationDate: string;\n\n  /**\n   * Sets up Component with User Service\n   * @param {UserControllerService} userService - Allows User Services to be utilized\n   * @param {AuthService} authService - Allows Authentication Services to be utilized\n   * @param {Router} route - Allows Nav compnent to switch between sub-components\n   */\n  constructor(\n    private userService: UserControllerService,\n    private authService: AuthService,\n    private route: Router\n    ) { }\n\n  /** Initilaizes the Component with the offices */\n  ngOnInit() {\n    if (!this.authService.isTrainer())\n      this.route.navigate([\"/landing\"]);\n    this.getOffices();\n  }\n\n  /** Alows a New registration key to be used for New User Registration */\n  getRegistrationKey() {\n    this.userService.getRegistrationKey().subscribe(\n      data => {\n        this.registrationKey = data;\n        this.dateLocationEncryption();\n      }\n    );\n  }\n\n  /** Sets up a date and location encryption key */\n  dateLocationEncryption() {\n    let middleEncryption = btoa(this.officeObject + '~' + this.batchEnd);\n    if (middleEncryption.length != 28) {\n      middleEncryption = 'XcvF' + middleEncryption;\n    }\n    this.encryptedLocationDate = middleEncryption;\n  }\n\n  /**\n   * Retrieves all offices, called on component initialization\n   */\n  getOffices() {\n    this.userService.getAllOffices().subscribe(data => {\n      this.officeObjectArray = data;\n      this.officeObject = '';\n    });\n  }\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n      Generate Key\n      This key expires after 2 hours\n      \n        \n          Batch End\n        \n        \n      \n      \n        \n          Office Address\n        \n        \n          \n            Select Office\n            {{office.name}}\n          \n        \n      \n      Get Key\n      \n      \n      Please send this key to your batch associates\n      \n      \n        {{encryptedLocationDate}}{{registrationKey}}\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Generate Key      This key expires after 2 hours                        Batch End                                              Office Address                                      Select Office            {{office.name}}                              Get Key                  Please send this key to your batch associates                    {{encryptedLocationDate}}{{registrationKey}}            '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiError.html":{"url":"interfaces/ApiError.html","title":"interface - ApiError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ApiError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/api-error.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents an error that accompanied the response to an HTTP request\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        details\n                                \n                                \n                                        message\n                                \n                                \n                                        status\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                    \n                                \n                                \n                                    \n                                        details:     String[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Any additional details, such which fields were missing/incorrect in a\nrequest format error. An empty array indicates that there are no such\ndetails.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The primary message corresponding to the error.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The HTTP status that accompanied the error. This is not returned by the\nAPI, but is provided as a convenience by the ErrorInterceptor.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     ApiErrorType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ApiErrorType\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The type of the error, if a specific type can be associated.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ApiError {\n    /**\n     * The primary message corresponding to the error.\n     */\n    message: String;\n    /**\n     * Any additional details, such which fields were missing/incorrect in a\n     * request format error. An empty array indicates that there are no such\n     * details.\n     */\n    details: String[];\n    /**\n   * The HTTP status that accompanied the error. This is not returned by the\n   * API, but is provided as a convenience by the ErrorInterceptor.\n   */\n    status: number;\n    /**\n    * The type of the error, if a specific type can be associated.\n    */\n    type?: ApiErrorType;\n}\n\n/**\n * A specific type of error which can be returned by the API.\n */\nexport enum ApiErrorType {\n    /**\n     * The user is not logged in.\n     */\n    NotLoggedIn = 'NOT_LOGGED_IN',\n    /**\n     * The user is logged in, but does not have permission to access an endpoint.\n     */\n    Unauthorized = 'UNAUTHORIZED',\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        Serves as the root component for the entire page\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth0\n                            \n                            \n                                confirmPassword\n                            \n                            \n                                password\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onTap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth0: Auth0Service)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:18\n                            \n                        \n\n                \n                    \n                            Creates the Root component of the Ride-share front-end\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth0\n                                                  \n                                                        \n                                                                    Auth0Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe updated authentication service to use\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTap\n                            \n                            \n                        \n                    \n                \n                \n                    \nonTap(event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Log any tap that the system detects\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nwhat ever tap that occurs\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth0:     Auth0Service\n\n                    \n                \n                    \n                        \n                            Type :     Auth0Service\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:24\n                            \n                        \n\n                \n                    \n                        - the updated authentication service to use\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            confirmPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        confirmPassword:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n                \n                    \n                        Confirms the user password \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:16\n                            \n                        \n\n                \n                    \n                        Provides a password for the user \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'app'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                        Provides a basic title \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Auth0Service} from './services/auth0.service';\n\n/**\n * Serves as the root component for the entire page\n */\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  /** Provides a basic title */\n  title = 'app';\n  /** Provides a password for the user */\n  password: string;\n  /** Confirms the user password */\n  confirmPassword: string;\n\n  /**\n   * Creates the Root component of the Ride-share front-end\n   * @param auth0 - the updated authentication service to use\n   */\n  constructor(public auth0: Auth0Service) {\n    auth0.handleAuthentication();\n  }\n\n  /**\n   *  Log any tap that the system detects\n   * @param event - what ever tap that occurs\n   */\n  onTap(event) {\n    console.log(event);\n  }\n\n\n}\n\n\n\n    \n\n    \n        \n\n\n \n \n -->\n\n    \n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->    '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAccountinfoComponent\n\nAccountinfoComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountinfoComponent->AppModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCallbackComponent\n\nCallbackComponent\n\nAppModule -->\n\nCallbackComponent->AppModule\n\n\n\n\n\nCarRegistrationComponent\n\nCarRegistrationComponent\n\nAppModule -->\n\nCarRegistrationComponent->AppModule\n\n\n\n\n\nFavoritesComponent\n\nFavoritesComponent\n\nAppModule -->\n\nFavoritesComponent->AppModule\n\n\n\n\n\nHowToComponent\n\nHowToComponent\n\nAppModule -->\n\nHowToComponent->AppModule\n\n\n\n\n\nLandingComponent\n\nLandingComponent\n\nAppModule -->\n\nLandingComponent->AppModule\n\n\n\n\n\nLikesComponent\n\nLikesComponent\n\nAppModule -->\n\nLikesComponent->AppModule\n\n\n\n\n\nLikesmatchwebComponent\n\nLikesmatchwebComponent\n\nAppModule -->\n\nLikesmatchwebComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPlacesAutocompleteDirective\n\nPlacesAutocompleteDirective\n\nAppModule -->\n\nPlacesAutocompleteDirective->AppModule\n\n\n\n\n\nRideswipeComponent\n\nRideswipeComponent\n\nAppModule -->\n\nRideswipeComponent->AppModule\n\n\n\n\n\nUsercardComponent\n\nUsercardComponent\n\nAppModule -->\n\nUsercardComponent->AppModule\n\n\n\n\n\nUsermatchwebComponent\n\nUsermatchwebComponent\n\nAppModule -->\n\nUsermatchwebComponent->AppModule\n\n\n\n\n\nViewProfileComponent\n\nViewProfileComponent\n\nAppModule -->\n\nViewProfileComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nAppModule -->\n\nJwtInterceptor->AppModule\n\n\n\n\n\nMapsControllerService\n\nMapsControllerService\n\nAppModule -->\n\nMapsControllerService->AppModule\n\n\n\n\n\nMatchingControllerService\n\nMatchingControllerService\n\nAppModule -->\n\nMatchingControllerService->AppModule\n\n\n\n\n\nUserControllerService\n\nUserControllerService\n\nAppModule -->\n\nUserControllerService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Serves as the collection/base for the entire Angular Project\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AccountinfoComponent\n                            \n                            \n                                AdminComponent\n                            \n                            \n                                AppComponent\n                            \n                            \n                                CallbackComponent\n                            \n                            \n                                CarRegistrationComponent\n                            \n                            \n                                FavoritesComponent\n                            \n                            \n                                HowToComponent\n                            \n                            \n                                LandingComponent\n                            \n                            \n                                LikesComponent\n                            \n                            \n                                LikesmatchwebComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                MapComponent\n                            \n                            \n                                NavbarComponent\n                            \n                            \n                                PlacesAutocompleteDirective\n                            \n                            \n                                RideswipeComponent\n                            \n                            \n                                UsercardComponent\n                            \n                            \n                                UsermatchwebComponent\n                            \n                            \n                                ViewProfileComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                            \n                                     ErrorInterceptor\n                            \n                            \n                                     JwtInterceptor\n                            \n                            \n                                     MapsControllerService\n                            \n                            \n                                     MatchingControllerService\n                            \n                            \n                                     UserControllerService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { RideswipeComponent } from './components/rideswipe/rideswipe.component';\nimport { LandingComponent } from './components/landing/landing.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { UsercardComponent } from './components/usercard/usercard.component';\nimport { HowToComponent } from './components/how-to/how-to.component';\nimport { MapComponent } from './components/map/map.component';\nimport { AgmCoreModule, GoogleMapsAPIWrapper, CircleManager } from '@agm/core';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { AppRoutingModule } from './app-routing/app-routing.module';\nimport { LikesComponent } from './components/likes/likes.component';\nimport { UsermatchwebComponent } from './components/usermatchweb/usermatchweb.component';\nimport { LikesmatchwebComponent } from './components/likesmatchweb/likesmatchweb.component';\nimport { UserControllerService } from './services/api/user-controller.service';\nimport { MapsControllerService } from './services/api/maps-controller.service';\nimport { MatchingControllerService } from './services/api/matching-controller.service';\nimport { AuthService } from '../app/services/auth.service';\nimport { HttpClientModule, HttpClient, HttpHandler, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { PlacesAutocompleteDirective } from './directives/places-autocomplete/places-autocomplete.directive';\nimport { FavoritesComponent } from './components/favorites/favorites.component';\nimport { AccountinfoComponent } from './components/accountinfo/accountinfo.component';\nimport { AnimateOnScrollModule } from 'ng2-animate-on-scroll';\nimport { JwtInterceptor } from './utils/jwt.interceptor';\nimport { ErrorInterceptor } from './utils/error.interceptor';\nimport { AdminComponent } from './components/admin/admin.component';\nimport { CarRegistrationComponent } from './components/car-registration/car-registration.component';\nimport { ViewProfileComponent } from './components/view-profile/view-profile.component';\nimport { CallbackComponent } from './callback/callback/callback.component';\n// import { DateFormatPipe } from './pipes/date-format.pipe';\n\n/**\n * Serves as the collection/base for the entire Angular Project\n */\n@NgModule({\n  declarations: [\n    AppComponent,\n    RideswipeComponent,\n    LandingComponent,\n    UsercardComponent,\n    HowToComponent,\n    MapComponent,\n    NavbarComponent,\n    LoginComponent,\n    LikesComponent,\n    UsermatchwebComponent,\n    LikesmatchwebComponent,\n    PlacesAutocompleteDirective,\n    FavoritesComponent,\n    AccountinfoComponent,\n    AdminComponent,\n    CarRegistrationComponent,\n    ViewProfileComponent,\n    CallbackComponent,\n    // DateFormatPipe,\n  ],\n  imports: [\n    BrowserModule,\n    AnimateOnScrollModule.forRoot(),\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyDxGFZzCVmm1PxV8C0KvG6EG6Tt3S_HeXw',\n      libraries: ['places'],\n    }),\n    NgbModule,\n    FormsModule,\n    HttpClientModule,\n  ],\n  providers: [\n    NgbActiveModal,\n    MapsControllerService,\n    UserControllerService,\n    AuthService,\n    MatchingControllerService,\n    GoogleMapsAPIWrapper,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptor,\n      multi: true,\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getParagraphText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetParagraphText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/app.po.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigateTo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in e2e/app.po.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HowToComponent } from '../components/how-to/how-to.component';\nimport { LandingComponent } from '../components/landing/landing.component';\nimport { LoginComponent } from '../components/login/login.component';\nimport { MapComponent } from '../components/map/map.component';\nimport { RideswipeComponent } from '../components/rideswipe/rideswipe.component';\nimport { UsercardComponent } from '../components/usercard/usercard.component';\nimport { FavoritesComponent } from '../components/favorites/favorites.component';\nimport { AccountinfoComponent } from '../components/accountinfo/accountinfo.component';\nimport { AdminComponent } from '../components/admin/admin.component';\nimport { CarRegistrationComponent } from '../components/car-registration/car-registration.component';\nimport { ViewProfileComponent } from '../components/view-profile/view-profile.component';\nimport { CallbackComponent } from '../callback/callback/callback.component';\n\n/**\n * This is where we set our routerLink attribute.\n * For example...\n * About\n * creates an  element of class \"dropdown-item\" that will \n * refer to these routes to find which component to route to.\n */\nexport const routes: Routes = [\n  { path: '',  pathMatch: 'full', redirectTo: 'landing' },\n  { path: 'howTo', component: HowToComponent },\n  { path: 'landing', component: LandingComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'map', component: MapComponent },\n  { path: 'accountInfo', component: AccountinfoComponent},\n  { path: 'rideswipe', component: RideswipeComponent },\n  { path: 'userCard', component: UsercardComponent },\n  { path: 'favorites', component: FavoritesComponent },\n  { path: 'admin', component: AdminComponent },\n  { path: 'cars', component: CarRegistrationComponent },\n  { path: 'userProfile', component: ViewProfileComponent},\n  { path: 'callback', component: CallbackComponent}\n  //{ path: 'logout', redirectTo: 'landing' }\n];\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [ RouterModule ],\n  declarations: []\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Auth0Service.html":{"url":"injectables/Auth0Service.html","title":"injectable - Auth0Service","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Auth0Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth0.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                auth\n                            \n                            \n                                client_id\n                            \n                            \n                                requestedScopes\n                            \n                            \n                                userProfile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getProfile\n                            \n                            \n                                    Public\n                                handleAuthentication\n                            \n                            \n                                    Public\n                                isAuthenticated\n                            \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout0\n                            \n                            \n                                    Private\n                                setSession\n                            \n                            \n                                    Public\n                                userHasScopes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth0.service.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getProfile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getProfile(cb: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth0.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            Fetches profile information from access_token and decompiles information (not used) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cb\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            handleAuthentication\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleAuthentication()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth0.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            After login(), app.component runs this to handle if we have a valid Auth0 login \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isAuthenticated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isAuthenticated()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth0.service.ts:65\n                            \n                        \n\n\n                \n                    \n                            Checks whether or not a token is still valid, or has expired (not used) \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        login()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth0.service.ts:33\n                            \n                        \n\n\n                \n                    \n                            Launches the Auth0 remote login page \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logout0\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logout0()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth0.service.ts:92\n                            \n                        \n\n\n                \n                    \n                            Clears session storage and Auth0 cookies, informing the Auth0 API that the user is logging out \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setSession\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setSession(authResult: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth0.service.ts:55\n                            \n                        \n\n\n                \n                    \n                            Saves information from a valid Auth0 login in sessionStorage \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authResult\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userHasScopes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        userHasScopes(scopes: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth0.service.ts:86\n                            \n                        \n\n\n                \n                    \n                            Validates that a given user has access to a set of Auth0 scopes (not used) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        scopes\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     \n\n                    \n                \n                    \n                        \n                            Default value : new auth0.WebAuth({\n    //this is a personal account, set up a new one at https://auth0.com/signup and put the new domain here\n    domain: '11crandall.auth0.com',\n    //this will need to be replaced too\n    clientID: this.client_id,\n    responseType: 'token id_token',\n    redirectUri: 'http://localhost:4200/callback',\n    scope: this.requestedScopes\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth0.service.ts:20\n                            \n                        \n\n                \n                    \n                        An Auth0 controller object, used to call functionality with the Auth0 API \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            client_id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        client_id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : '9OlhtIHLjsGJMZ8a4YIEKPwFJ0FoeJbt'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth0.service.ts:14\n                            \n                        \n\n                \n                    \n                        Auth0 API client ID \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            requestedScopes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        requestedScopes:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'openid profile read:messages write:messages'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth0.service.ts:11\n                            \n                        \n\n                \n                    \n                        Auth0 Scoping declaration \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userProfile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userProfile:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/auth0.service.ts:17\n                            \n                        \n\n                \n                    \n                        Object that will hold the decompiled Auth0 profile \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as auth0 from 'auth0-js';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Auth0Service {\n\n  /** Auth0 Scoping declaration */\n  requestedScopes: string = 'openid profile read:messages write:messages';\n\n  /** Auth0 API client ID */\n  client_id: string = '9OlhtIHLjsGJMZ8a4YIEKPwFJ0FoeJbt';\n\n  /** Object that will hold the decompiled Auth0 profile */\n  userProfile: any;\n\n  /** An Auth0 controller object, used to call functionality with the Auth0 API */\n  auth = new auth0.WebAuth({\n    //this is a personal account, set up a new one at https://auth0.com/signup and put the new domain here\n    domain: '11crandall.auth0.com',\n    //this will need to be replaced too\n    clientID: this.client_id,\n    responseType: 'token id_token',\n    redirectUri: 'http://localhost:4200/callback',\n    scope: this.requestedScopes\n  });\n\n  constructor(private router: Router) {}\n\n  /** Launches the Auth0 remote login page */\n  public login(): void{\n    this.auth.authorize();\n  }\n\n  /** After login(), app.component runs this to handle if we have a valid Auth0 login */\n  public handleAuthentication(): void {\n    this.auth.parseHash((err, authResult) =>{\n      if (authResult && authResult.accessToken && authResult.idToken){\n        window.location.hash = '';\n        this.setSession(authResult);\n        this.router.navigate(['/map']);\n        location.reload(true);\n      }\n      else if (err){\n        this.router.navigate(['/map']);\n        console.log(err);\n        location.reload(true);\n      }\n    })\n  }\n\n  /** Saves information from a valid Auth0 login in sessionStorage */\n  private setSession(authResult):void {\n    const expiresAt = JSON.stringify((authResult.expiresIn * 1000) + new Date().getTime());\n    const scopes = authResult.scope || this.requestedScopes || '';\n    sessionStorage.setItem('access_token', authResult.accessToken);\n    sessionStorage.setItem('api_token', authResult.idToken);\n    sessionStorage.setItem('expires_at',expiresAt);\n    sessionStorage.setItem('scopes',JSON.stringify(scopes));\n  }\n\n  /** Checks whether or not a token is still valid, or has expired (not used) */\n  public isAuthenticated(): boolean {\n    const expiresAt = JSON.parse(sessionStorage.getItem('expires_at'));\n    return new Date().getTime()  {\n      if (profile){\n        self.userProfile = profile;\n      }\n      cb(err, profile);\n    });\n  }\n\n  /** Validates that a given user has access to a set of Auth0 scopes (not used) */\n  public userHasScopes(scopes: Array): boolean {  \n    const grantedScopes = JSON.parse(sessionStorage.getItem('scopes')).split(' ');\n    return scopes.every(scope => grantedScopes.includes(scope));\n  }\n\n  /** Clears session storage and Auth0 cookies, informing the Auth0 API that the user is logging out */\n  public logout0() {\n    sessionStorage.clear();\n    this.auth.logout({\n      returnTo: \"http://localhost:4200/landing\",\n      client_id: this.client_id\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Allows Users to authenticate themselves with the server\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                authenticate\n                            \n                            \n                                authenticator\n                            \n                            \n                                isAdmin\n                            \n                            \n                                isTrainer\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, userService: UserControllerService, tokenStorage: TokenStorage)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/auth.service.ts:18\n                            \n                        \n\n                \n                    \n                            Sets up the Authentication service with the required dependencies\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nOur http client dependency for making http requests\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService used to grab any user information from the API\n\n\n                                                        \n                                                \n                                                \n                                                        tokenStorage\n                                                  \n                                                        \n                                                                    TokenStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nUsed to save our generated token locally\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            authenticate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        authenticate(email: string, password: string, usePromise?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:59\n                            \n                        \n\n\n                \n                    \n                            Attempts to log the user in and if successful, sets the sessionStorage\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe user identifier\n\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe password of the account\n\n\n                                                        \n                                                \n                                                \n                                                        usePromise\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                \n(TESTING) whether to use the promise version or stick with observable\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authenticator\n                            \n                            \n                        \n                    \n                \n                \n                    \nauthenticator(email: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:40\n                            \n                        \n\n\n                \n                    \n                            Attempts to log the user in\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The email address to be sent from the view to the API\n\n                                                        \n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The password to be sent from the view to the API\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nUser mapped to token storage now\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAdmin\n                            \n                            \n                        \n                    \n                \n                \n                    \nisAdmin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:113\n                            \n                        \n\n\n                \n                    \n                            Returns whether the current user is logged in as an Admin\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isTrainer\n                            \n                            \n                        \n                    \n                \n                \n                    \nisTrainer()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:105\n                            \n                        \n\n\n                \n                    \n                            Returns whether the current user is logged in as a Trainer\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/auth.service.ts:121\n                            \n                        \n\n\n                \n                    \n                            Logs the user out of the service\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { User } from '../../app/models/user.model';\nimport { Observable, of } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { tap, map } from 'rxjs/operators';\nimport { UserControllerService } from './api/user-controller.service';\nimport { TokenStorage } from './../utils/token.storage';\nimport { Router } from '@angular/router';\n\n/**\n * Allows Users to authenticate themselves with the server\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  /**\n   * Sets up the Authentication service with the required dependencies\n   * @param {HttpClient} http - Our http client dependency for making http requests\n   * @param {UserControllerService} userService - Service used to grab any user information from the API\n   * @param {TokenStorage} tokenStorage - Used to save our generated token locally\n   * @param {Router} route - enables navigation between components (does not appear to be used)\n   */\n  constructor(\n    private http: HttpClient,\n    private userService: UserControllerService,\n    private tokenStorage: TokenStorage /*,\n    private route: Router*/\n  ) { }\n\n  /**\n   * Attempts to log the user in\n   * @param email The email address to be sent from the view to the API\n   * @param password The password to be sent from the view to the API\n   * @returns {null} - User mapped to token storage now\n   */\n  authenticator(email: string, password: string) {\n    const credentials = { email, password };\n    console.log('in authenticate');\n    return this.http\n      .post(environment.apiUrl + '/login', credentials)\n      .pipe(\n        map(token => {\n          console.log('Saving token');\n          this.tokenStorage.saveToken(token);\n        })\n      ).toPromise();\n  }\n\n  /**\n   * Attempts to log the user in and if successful, sets the sessionStorage\n   * @param email - the user identifier\n   * @param password - the password of the account\n   * @param {boolean} usePromise - (TESTING) whether to use the promise version or stick with observable\n   */\n  async authenticate(email: string, password: string, usePromise?: boolean) {\n    this.authenticator(email, password).then(\n      (x) => {\n        console.log('Got user from Authenticate (Promise mode)');\n        this.userService.getUserByEmail(email).then((x) => {\n          console.log('Gotten email of user');\n          sessionStorage.setItem('id', x.id.toString());\n          sessionStorage.setItem('firstName', x.firstName);\n          sessionStorage.setItem('lastName', x.lastName);\n          sessionStorage.setItem('role', x.role);\n          sessionStorage.setItem('address', x.address);\n          sessionStorage.setItem('batchEnd', x.batchEnd);\n          sessionStorage.setItem('userEmail', email);\n          sessionStorage.setItem('userPassword', password);\n          sessionStorage.setItem('active', x.active);\n          location.reload(true);\n        });\n      },\n      (e) => {\n        // error coming from the backend\n        console.log('Printing Login error (Promise Mode)!');\n        console.log(e);\n        if (document) {\n          const messageLogin = document.getElementById('errorMessageLogin');\n          if (messageLogin) {\n            messageLogin.style.display = 'block';\n            console.log(e.message);\n            if (e.message == 'GENERAL') {\n              messageLogin.innerHTML = 'Server unavailable';\n            } else if(e.message == 'undefined') {\n              messageLogin.innerHTML = 'GATEWAY unavailable';\n            }else{\n              messageLogin.innerHTML = e.message;\n            }\n          }\n        }\n        return e.message;\n      }\n    );\n  }\n\n\n  \n  /**\n   * Returns whether the current user is logged in as a Trainer\n   */\n  isTrainer(): boolean {\n    return sessionStorage.getItem('role') == \"TRAINER\" || this.isAdmin();\n  }\n\n  \n  /**\n   * Returns whether the current user is logged in as an Admin\n   */\n  isAdmin(): boolean {\n    return sessionStorage.getItem('role') == \"ADMIN\";\n  }\n\n  \n  /**\n   * Logs the user out of the service\n   */\n  logout() {\n    sessionStorage.clear();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CallbackComponent.html":{"url":"components/CallbackComponent.html","title":"component - CallbackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CallbackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/callback/callback/callback.component.ts\n\n\n    \n        Description\n    \n    \n        Callback is a thing required by Auth0, it basically is the sitting place for\nRideForce to go to while waiting for the Auth0 remote login page to return\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-callback\n            \n\n            \n                styleUrls\n                callback.component.css\n            \n\n\n\n            \n                templateUrl\n                ./callback.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n /**\n   * Callback is a thing required by Auth0, it basically is the sitting place for\n   * RideForce to go to while waiting for the Auth0 remote login page to return\n   */\n@Component({\n  selector: 'app-callback',\n  templateUrl: './callback.component.html',\n  styleUrls: ['./callback.component.css']\n})\nexport class CallbackComponent implements OnInit {\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'CallbackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Car.html":{"url":"classes/Car.html","title":"class - Car","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Car\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/car.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents the Car a User (cheifly a Driver) owns \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                make\n                            \n                            \n                                model\n                            \n                            \n                                owner\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:9\n                            \n                        \n\n                \n                    \n                        The ID of the car in the database.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            make\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        make:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:15\n                            \n                        \n\n                \n                    \n                        The Producer of the Vehicle \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        model:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:17\n                            \n                        \n\n                \n                    \n                        THe model of the vehicle \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            owner\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        owner:     Link\n\n                    \n                \n                    \n                        \n                            Type :     Link\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:13\n                            \n                        \n\n                \n                    \n                        The owner of this car. Represents the URL mapping to the actual user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            year\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        year:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/car.model.ts:19\n                            \n                        \n\n                \n                    \n                        THe year the car was produced \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user.model';\nimport { Link } from './link.model';\n\n/** Represents the Car a User (cheifly a Driver) owns */\nexport class Car {\n  /**\n   * The ID of the car in the database.\n   */\n  id: number;\n  /**\n   * The owner of this car. Represents the URL mapping to the actual user\n   */\n  owner: Link;\n  /** The Producer of the Vehicle */\n  make: string;\n  /** THe model of the vehicle */\n  model: string;\n  /** THe year the car was produced */\n  year: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CarRegistrationComponent.html":{"url":"components/CarRegistrationComponent.html","title":"component - CarRegistrationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CarRegistrationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/car-registration/car-registration.component.ts\n\n\n    \n        Description\n    \n    \n        Supports the functionality of car registration and management\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-car-registration\n            \n\n            \n                styleUrls\n                car-registration.component.css\n            \n\n\n\n            \n                templateUrl\n                ./car-registration.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                btnCarInfo\n                            \n                            \n                                carMake\n                            \n                            \n                                carModel\n                            \n                            \n                                carObject\n                            \n                            \n                                cars\n                            \n                            \n                                carYear\n                            \n                            \n                                optInToDrive\n                            \n                            \n                                userObject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addCarToUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                refreshFields\n                            \n                            \n                                resetCars\n                            \n                            \n                                resetUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserControllerService, route: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/car-registration/car-registration.component.ts:53\n                            \n                        \n\n                \n                    \n                            Sets up the Car Registration component with dependencies\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe Service that allows us to manager the user AND the cars available on the system\n\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows Nav compnent to switch between sub-components\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addCarToUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddCarToUser(inTesting?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:118\n                            \n                        \n\n\n                \n                    \n                            Sets the car with appropriate values and sends it to the server using the User Service\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        inTesting\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:70\n                            \n                        \n\n\n                \n                    \n                            Makes sure there is a car object available to operate on\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refreshFields\n                            \n                            \n                        \n                    \n                \n                \n                    \nrefreshFields()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:148\n                            \n                        \n\n\n                \n                    \n                            Refreshes the fields in the Car form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetCars\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetCars()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Clears the fields in the form\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:103\n                            \n                        \n\n\n                \n                    \n                            Ensures that the component is working with the logged on user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            btnCarInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        btnCarInfo:     Number\n\n                    \n                \n                    \n                        \n                            Type :     Number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carMake\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        carMake:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:30\n                            \n                        \n\n                \n                    \n                        The company that manufactured it\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        carModel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:35\n                            \n                        \n\n                \n                    \n                        Model of the car\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        carObject:     Car\n\n                    \n                \n                    \n                        \n                            Type :     Car\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:26\n                            \n                        \n\n                \n                    \n                        The car to create and register\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cars\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cars:     Car[]\n\n                    \n                \n                    \n                        \n                            Type :     Car[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:50\n                            \n                        \n\n                \n                    \n                        List of cars owned by the ownwer to present in a table\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            carYear\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        carYear:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:40\n                            \n                        \n\n                \n                    \n                        When the car was produced\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optInToDrive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        optInToDrive:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:45\n                            \n                        \n\n                \n                    \n                        Relic from the AccountInfoComponent that previously managed cars\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userObject:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/car-registration/car-registration.component.ts:20\n                            \n                        \n\n                \n                    \n                        The User that owns the car\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Car } from '../../models/car.model';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { User } from '../../models/user.model';\nimport { Router } from '@angular/router';\n\n/**\n * Supports the functionality of car registration and management\n */\n@Component({\n  selector: 'app-car-registration',\n  templateUrl: './car-registration.component.html',\n  styleUrls: ['./car-registration.component.css']\n})\nexport class CarRegistrationComponent implements OnInit {\n\n  /**\n   * The User that owns the car\n   */\n  userObject: User;\n\n  // for drivers\n  /**\n   * The car to create and register\n   */\n  carObject: Car;\n  /**\n   * The company that manufactured it\n   */\n  carMake: string;\n\n  /**\n   * Model of the car\n   */\n  carModel: string;\n\n  /**\n   * When the car was produced\n   */\n  carYear: number;\n\n  /**\n   * Relic from the AccountInfoComponent that previously managed cars\n   */\n  optInToDrive: boolean;\n\n  /**\n   * List of cars owned by the ownwer to present in a table\n   */\n  cars: Car[];\n\n  // booleans for car information buttons\n  btnCarInfo: Number = 0;\n\n  /**\n   * Sets up the Car Registration component with dependencies\n   * @param {UserControllerService} userService - the Service that allows us to manager the user AND the cars available on the system\n   * @param {Router} route - Allows Nav compnent to switch between sub-components\n   */\n  constructor(\n    private userService: UserControllerService,\n    private route: Router\n    ) {\n\n   }\n\n  /**\n   * Makes sure there is a car object available to operate on\n   */\n  ngOnInit() {\n    if (sessionStorage.length == 0)\n      this.route.navigate([\"/landing\"]);\n    this.carObject = new Car();\n  }\n\n  /**\n   * Clears the fields in the form\n   */\n  resetCars() {\n\n    if (this.cars !== undefined && this.cars != null && this.cars.length !== 0) {\n      return;\n    }\n    this.resetUser();\n    const userId = this.userObject.id;\n    this.cars = [];\n    this.userService.getAllCars().subscribe(c => {\n\n      c.forEach(element => {\n        const strNum = element.owner.substring(7);\n        const num = Number.parseInt(strNum);\n        if (num === userId) {\n          this.cars.push(element);\n        }\n      });\n    });\n  }\n\n\n  /**\n   * Ensures that the component is working with the logged on user\n   */\n  resetUser() {\n    this.userService.getCurrentUser().subscribe(user => {\n      // console.log('Car reg: Gotten User: ' + user);\n      this.userObject = user;\n    },\n    e => {\n      // console.log('Car reg: Failed to get user: ');\n      // console.log(e);\n    });\n\n  }\n \n  /**\n   * Sets the car with appropriate values and sends it to the server using the User Service\n   */\n  addCarToUser(inTesting?: boolean) {\n\n    if (!inTesting) {\n      this.resetUser();\n    }\n\n    if (!this.carObject) {\n      this.carObject = new Car();\n    }\n\n    this.carObject.id = 1;\n    this.carObject.make = this.carMake;\n    this.carObject.model = this.carModel;\n\n    this.carObject.owner = '/users/' + this.userObject.id;\n    this.carObject.year = this.carYear;\n    // this.userObject.cars.push(this.carObject);\n\n    console.log('Owner prop (car reg):');\n    console.log(this.carObject.owner);\n\n    this.userService.createCar(this.carObject).subscribe(car => {\n      this.carObject = car;\n    });\n\n  }\n\n  /**\n   * Refreshes the fields in the Car form\n   */\n  refreshFields() {\n    this.carMake = '';\n    this.carModel = '';\n    this.carYear = new Date().getFullYear();\n  }\n\n}\n\n    \n\n    \n        \n  \n  Car Information:\n  \n  \n  \n  \n    \n      \n        Make\n      \n      \n    \n\n    \n      \n        Model\n      \n      \n    \n\n    \n      \n        Year\n      \n      \n    \n    \n      \n        Submit\n      \n      Add Car\n      Clear Fields\n    \n    \n       0\">\n        \n          ID\n          Make\n          Model\n          Year\n        \n        \n          {{c.id}}\n          {{c.make}}\n          {{c.model}}\n          {{c.year}}\n          \n        \n      \n    \n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Car Information:                          Make                                  Model                                  Year                                  Submit            Add Car      Clear Fields               0\">                  ID          Make          Model          Year                          {{c.id}}          {{c.make}}          {{c.model}}          {{c.year}}                                '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'CarRegistrationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContactInfo.html":{"url":"interfaces/ContactInfo.html","title":"interface - ContactInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ContactInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/contact-info.model.ts\n        \n\n            \n                Description\n            \n            \n                Holds a means of contacting a user \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        info\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of this contact info entry in the database.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                    \n                                \n                                \n                                    \n                                        info:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The details specifying the user's username/phone number/etc. on the\nservice.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Represente the type of contact info available \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface ContactInfo {\n    /**\n     * The ID of this contact info entry in the database.\n     */\n    id: Number;\n    /** Represente the type of contact info available */\n    type: String;\n    /**\n     * The details specifying the user's username/phone number/etc. on the\n     * service.\n     */\n    info: String;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ErrorInterceptor.html":{"url":"interceptors/ErrorInterceptor.html","title":"interceptor - ErrorInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ErrorInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/error.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Meant to catch any error occuring in an HTTP request\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/error.interceptor.ts:20\n                            \n                        \n\n                \n                    \n                            Sets up our HTTP error handling with the services needed to handle them properly\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nallows us to log out if the servier says we're not logged on\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nenables component routing\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(request: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/error.interceptor.ts:33\n                            \n                        \n\n\n                \n                    \n                            Catches HTTP requests for errors and takes basic steps to inform devs about it (logs out if the servier says to log out)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe HTTP request to examine\n\n\n                                                        \n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe means of proceeding with out HTTP request\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { ApiError, ApiErrorType } from '../models/api-error.model';\nimport { AuthService } from './../services/auth.service';\n\n/**\n * Meant to catch any error occuring in an HTTP request\n */\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  /**\n   * Sets up our HTTP error handling with the services needed to handle them properly\n   * @param {AuthService} authService - allows us to log out if the servier says we're not logged on\n   * @param {Router} router - enables component routing\n   */\n  constructor(private authService: AuthService, private router: Router) {}\n\n  /**\n   * Catches HTTP requests for errors and takes basic steps to inform devs about it (logs out if the servier says to log out)\n   * @param request - the HTTP request to examine\n   * @param next - the means of proceeding with out HTTP request\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    return next.handle(request).pipe(\n      catchError((err: HttpErrorResponse) => {\n        if (err.error instanceof ErrorEvent) {\n          // A client-side or network error occurred.\n          console.error('Network error:', err.error);\n          return throwError(err.error);\n        } else {\n          // API error.\n          const apiError = err.error;\n          apiError.status = err.status;\n          // Automatically log out if the error was due to being not logged in.\n          if (apiError.type === ApiErrorType.NotLoggedIn) {\n            this.authService.logout();\n            this.router.navigate(['login']);\n          }\n          return throwError(apiError);\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavoritesComponent.html":{"url":"components/FavoritesComponent.html","title":"component - FavoritesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FavoritesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/favorites/favorites.component.ts\n\n\n    \n        Description\n    \n    \n        Provides an over view of User Likes, distinguishing between the mobile view and desktop view \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-favorites\n            \n\n            \n                styleUrls\n                favorites.component.css\n            \n\n\n\n            \n                templateUrl\n                ./favorites.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                mobile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, route: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/favorites/favorites.component.ts:14\n                            \n                        \n\n                \n                    \n                            Simply sets up the Favorites component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows Authentication Services to be utilized\n\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows Nav compnent to switch between sub-components\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/favorites/favorites.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Checks to see if the device is amobile device and sets view accordingly \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mobile:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/favorites/favorites.component.ts:14\n                            \n                        \n\n                \n                    \n                        Whether or not the Device is a mobile device \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n/** Provides an over view of User Likes, distinguishing between the mobile view and desktop view */\n@Component({\n  selector: 'app-favorites',\n  templateUrl: './favorites.component.html',\n  styleUrls: ['./favorites.component.css']\n})\nexport class FavoritesComponent implements OnInit {\n\n  /** Whether or not the Device is a mobile device */\n  public mobile = false;\n\n  /**\n   * Simply sets up the Favorites component.\n   * @param {AuthService} authService - Allows Authentication Services to be utilized\n   * @param {Router} route - Allows Nav compnent to switch between sub-components\n   */\n  constructor(\n    private authService: AuthService,\n    private route: Router\n    ) { }\n\n  /** Checks to see if the device is amobile device and sets view accordingly */\n  ngOnInit() {\n    if (sessionStorage.length == 0)\n      this.route.navigate([\"/landing\"]);\n    if (window.screen.width \n    \n\n    \n        \n    \n  \n  \n    \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'FavoritesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Filter.html":{"url":"classes/Filter.html","title":"class - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Filter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/filter.ts\n        \n\n            \n                Description\n            \n            \n                Provides a list of possible filters set up for the matching service\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                batchEndChange\n                            \n                            \n                                dayStartChange\n                            \n                            \n                                distanceChange\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            batchEndChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        batchEndChange:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/filter.ts:6\n                            \n                        \n\n                \n                    \n                        Filter by the user's batch end date \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dayStartChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dayStartChange:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/filter.ts:8\n                            \n                        \n\n                \n                    \n                        Filter by the day the user started \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            distanceChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        distanceChange:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/filter.ts:10\n                            \n                        \n\n                \n                    \n                        Filter by the distance between the users \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Filter {\n    /** Filter by the user's batch end date */\n    batchEndChange: boolean;\n    /** Filter by the day the user started */\n    dayStartChange: boolean;\n    /** Filter by the distance between the users */\n    distanceChange: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeocodeService.html":{"url":"injectables/GeocodeService.html","title":"injectable - GeocodeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeocodeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/geocode.service.ts\n        \n\n            \n                Description\n            \n            \n                Provides Specific geolocation services from Google maps\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                geocoder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                geocode\n                            \n                            \n                                reverseGeocode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/geocode.service.ts:15\n                            \n                        \n\n                \n                    \n                            Sets up the Service with a Google Maps object\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geocode\n                            \n                            \n                        \n                    \n                \n                \n                    \ngeocode(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/geocode.service.ts:51\n                            \n                        \n\n\n                \n                    \n                            Attempts to mark a location using an address\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe address of a location to obtain information about\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \ninformation about your given location\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reverseGeocode\n                            \n                            \n                        \n                    \n                \n                \n                    \nreverseGeocode(latLng: google.maps.LatLng)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/geocode.service.ts:29\n                            \n                        \n\n\n                \n                    \n                            Attempts to mark a location using a latitude and longitude value\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        latLng\n                                                        \n                                                                    google.maps.LatLng\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe location to set up\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \ninformation about your given location\n\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geocoder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geocoder:     google.maps.Geocoder\n\n                    \n                \n                    \n                        \n                            Type :     google.maps.Geocoder\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/geocode.service.ts:15\n                            \n                        \n\n                \n                    \n                        Enables communication with Google Map services\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\n/**\n * Provides Specific geolocation services from Google maps\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeocodeService {\n\n  /**\n   * Enables communication with Google Map services\n   */\n  geocoder: google.maps.Geocoder;\n\n  /**\n   * Sets up the Service with a Google Maps object\n   */\n  constructor() {\n    this.geocoder = new google.maps.Geocoder();\n  }\n\n  /**\n   * Attempts to mark a location using a latitude and longitude value\n   * @param {google.maps.LatLng} latLng - the location to set up\n   * @returns {Observable} - information about your given location\n   */\n  reverseGeocode(latLng: google.maps.LatLng): Observable {\n    return Observable.create((observer: Observer) => {\n      // Invokes geocode method of Google Maps API geocoding.\n      this.geocoder.geocode({ location: latLng }, (\n        (results: google.maps.GeocoderResult[], status: google.maps.GeocoderStatus) => {\n          if (status === google.maps.GeocoderStatus.OK) {\n            observer.next(results);\n            observer.complete();\n          } else {\n            console.log('Geocoding service: geocoder failed due to: ' + status);\n            observer.error(status);\n          }\n        })\n      );\n    });\n  }\n\n  /**\n   * Attempts to mark a location using an address\n   * @param address - the address of a location to obtain information about\n   * @returns {Observable} - information about your given location\n   */\n  geocode(address: string): Observable {\n    return Observable.create((observer: Observer) => {\n      // Invokes geocode method of Google Maps API geocoding.\n      this.geocoder.geocode({ address: address }, (\n        (results: google.maps.GeocoderResult[], status: google.maps.GeocoderStatus) => {\n          if (status === google.maps.GeocoderStatus.OK) {\n            observer.next(results);\n            observer.complete();\n          } else {\n            console.log(\n              'Geocoding service: geocode was not successful for the following reason: '\n              + status\n            );\n            observer.error(status);\n          }\n        })\n      );\n    });\n    return null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HowToComponent.html":{"url":"components/HowToComponent.html","title":"component - HowToComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HowToComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/how-to/how-to.component.ts\n\n\n    \n        Description\n    \n    \n        Exists for Displaying a How-to page \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-how-to\n            \n\n            \n                styleUrls\n                how-to.component.css\n            \n\n\n\n            \n                templateUrl\n                ./how-to.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/** Exists for Displaying a How-to page */\n@Component({\n  selector: 'app-how-to',\n  templateUrl: './how-to.component.html',\n  styleUrls: ['./how-to.component.css']\n})\nexport class HowToComponent implements OnInit {\n\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n      How to Use Revature RideForce\n    \n      \n      Registering an Account:\n      To register a new account click \"Get Started\" on the main home page or \"Login\" on the navbar and then \"Register\" underneath the input fields.\n      \n      \n      Create Profile:\n      Creating your profile is the first part of the process for registering a new account.\n      \n      This section requires you to input a variety of information:\n      \n        Your first name\n        Last name\n        Username\n        Password\n        Confirm Password\n        Key: Allows access to RideForce given to you by your instructor\n        Office Address\n        Apartment Address\n        Batch End Date: Instructor should also notify you on your batch end date\n      \n      Once all of this information is entered, you may move on to the \"Biography\" section, by clicking the \"Next\" button.\n        Biography:\n        The \"Biography\" section requires some more information from you with a little more effort on detail:\n        \n          About You: Here you can enter some details about yourself so your fellow employees can see if you are a good potential\n            fit as a passenger or driver.\n          Contact Info: This is where you enter your contact information, click the \"+\" button to add a new contact option. There are seven main types you may select from: Phone number, Email, Slack, Skype,\n            Discord, GroupMe, and other potential services of your choosing.\n        \n        When you are done with required information within this section, you can move on to the \"Car Info\" section, by clicking\n          on the \"Next\" button.\n        Car Info:\n        Within this section there are three options: Car, Passenger, or Both.\n        \n        If you do not have a car and plan on only being passenger, simply click next and move on to the next section.\n        \n        If you have a car and plan on being a driver, click the \"Car Info\" button and fill out the required input fields:\n        \n          Make: Enter the brand of your vehicle.\n          Model: Enter model of your vehicle.\n          Year: Enter year of your vehicle.\n        \n        Later on, if you want to set yourself as inactive, you can do so in the profile edit page in the navbar at the top.\n        Once all required information is entered depending on the option chose, move on to the final section by clicking the\n          \"Next\" button.\n        Review and Submit:\n        You are now finished entering all required information and may review what you have entered thus far within this section.\n        \n        If some of the information is incorrect, you may go back to previous sections by clicking the respective number and re-enter what is incorrect.\n        \n        Once the information looks good, give it one more look and then click \"Submit\".\n        \n        Congratulations! You have successfuly registered a new account and can login and start ridesharing with your new employees!\n        \n        \n        Login:\n        In order to login, you must have a registered account. If you haven't registered one yet, please refer to the \"Registering Account\" section above.\n        \n        To login, simply click \"Login\" on the navigation bar.\n        \n        You should now see the login view, which contains two input fields: \"Username\" and \"Password\".\n        \n        Simply enter in your registered account's username and password into the respective input fields and click the big blue \"Login\" button underneath them.\n        \n        \n        Map:\n        To view nearby addresses of current drivers and passengers, login and click \"Map\" on the navigation bar.\n        \n        After clicking \"Map\", you will now see a map focused on your location and pins within the map showing nearby driver's and passenger's addresses.\n        \n        If you wish to see the profile page of a driver/passenger, simply click on the pin you wish to view.\n        \n        \n        A user is able to save \"favorite locations\" associated with their account.\n        \n        This way, they do not have constantly type in the same address for frequently visited locations.\n        \n        In order to do so, the user will type in the address in question in the first text box on the map location after clicking the \"Favorite Locations\" tab.\n        \n        The second text box is the name you wish to save the address as. For example, we can save Washingston, DC as DC.\n        \n        We then can use this saved name to type in to the third input box which will remove the location if need be.\n        \n        \n        Browse:\n        To browse potential drivers, once logged in click \"Browse\" on the navigation bar.\n        \n        This will bring you to a view displaying a potential driver.\n        \n        After viewing the potential driver's profile, if you think they are a good match, then \"like\" them as a potential driver.\n        \n        If you think they are not a good match, simply \"dislike\" them and move on to the next.\n        \n        \n        Once a a driver is \"liked or \"disliked\", the next driver is immediately shown and the process repeats.\n        \n        The order of drivers is determined by distance, so closer drivers will appear first on your browse page.\n        \n        You can view all of the potential drivers that you have \"liked\" by viewing your \"liked list\"\n        \n        Within this \"liked list\" you can once again view your \"liked\" drivers profiles.\n        \n        Within their profile is their contact information, so simply reach out to them with whichever messaging service they have listed and hopefully it's a good match!\n        \n        \n        For the Admin/Trainer\n        You can click \"Get Key\" from the navbar which will take you to a page in which you fill out your batch end date and the location of the office.\n        \n         Once the fields are filled, click the \"Get Key\" button to generate a key with the above information already included.\n        \n         After the key has been generated, send it to an associate of your batch so they may create an account and start swiping!\n        \n        \n        An admin is able to make users into admins or trainers by going to the user profile and clicking on the \"View Users\" tab.\n        \n         Both an admin and a trainer can disable a user's account.\n         This will prevent that particular user from logging in until the profile is enabled again.\n        \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              How to Use Revature RideForce                Registering an Account:      To register a new account click \"Get Started\" on the main home page or \"Login\" on the navbar and then \"Register\" underneath the input fields.                  Create Profile:      Creating your profile is the first part of the process for registering a new account.            This section requires you to input a variety of information:              Your first name        Last name        Username        Password        Confirm Password        Key: Allows access to RideForce given to you by your instructor        Office Address        Apartment Address        Batch End Date: Instructor should also notify you on your batch end date            Once all of this information is entered, you may move on to the \"Biography\" section, by clicking the \"Next\" button.        Biography:        The \"Biography\" section requires some more information from you with a little more effort on detail:                  About You: Here you can enter some details about yourself so your fellow employees can see if you are a good potential            fit as a passenger or driver.          Contact Info: This is where you enter your contact information, click the \"+\" button to add a new contact option. There are seven main types you may select from: Phone number, Email, Slack, Skype,            Discord, GroupMe, and other potential services of your choosing.                When you are done with required information within this section, you can move on to the \"Car Info\" section, by clicking          on the \"Next\" button.        Car Info:        Within this section there are three options: Car, Passenger, or Both.                If you do not have a car and plan on only being passenger, simply click next and move on to the next section.                If you have a car and plan on being a driver, click the \"Car Info\" button and fill out the required input fields:                  Make: Enter the brand of your vehicle.          Model: Enter model of your vehicle.          Year: Enter year of your vehicle.                Later on, if you want to set yourself as inactive, you can do so in the profile edit page in the navbar at the top.        Once all required information is entered depending on the option chose, move on to the final section by clicking the          \"Next\" button.        Review and Submit:        You are now finished entering all required information and may review what you have entered thus far within this section.                If some of the information is incorrect, you may go back to previous sections by clicking the respective number and re-enter what is incorrect.                Once the information looks good, give it one more look and then click \"Submit\".                Congratulations! You have successfuly registered a new account and can login and start ridesharing with your new employees!                        Login:        In order to login, you must have a registered account. If you haven\\'t registered one yet, please refer to the \"Registering Account\" section above.                To login, simply click \"Login\" on the navigation bar.                You should now see the login view, which contains two input fields: \"Username\" and \"Password\".                Simply enter in your registered account\\'s username and password into the respective input fields and click the big blue \"Login\" button underneath them.                        Map:        To view nearby addresses of current drivers and passengers, login and click \"Map\" on the navigation bar.                After clicking \"Map\", you will now see a map focused on your location and pins within the map showing nearby driver\\'s and passenger\\'s addresses.                If you wish to see the profile page of a driver/passenger, simply click on the pin you wish to view.                        A user is able to save \"favorite locations\" associated with their account.                This way, they do not have constantly type in the same address for frequently visited locations.                In order to do so, the user will type in the address in question in the first text box on the map location after clicking the \"Favorite Locations\" tab.                The second text box is the name you wish to save the address as. For example, we can save Washingston, DC as DC.                We then can use this saved name to type in to the third input box which will remove the location if need be.                        Browse:        To browse potential drivers, once logged in click \"Browse\" on the navigation bar.                This will bring you to a view displaying a potential driver.                After viewing the potential driver\\'s profile, if you think they are a good match, then \"like\" them as a potential driver.                If you think they are not a good match, simply \"dislike\" them and move on to the next.                        Once a a driver is \"liked or \"disliked\", the next driver is immediately shown and the process repeats.                The order of drivers is determined by distance, so closer drivers will appear first on your browse page.                You can view all of the potential drivers that you have \"liked\" by viewing your \"liked list\"                Within this \"liked list\" you can once again view your \"liked\" drivers profiles.                Within their profile is their contact information, so simply reach out to them with whichever messaging service they have listed and hopefully it\\'s a good match!                        For the Admin/Trainer        You can click \"Get Key\" from the navbar which will take you to a page in which you fill out your batch end date and the location of the office.                 Once the fields are filled, click the \"Get Key\" button to generate a key with the above information already included.                 After the key has been generated, send it to an associate of your batch so they may create an account and start swiping!                        An admin is able to make users into admins or trainers by going to the user profile and clicking on the \"View Users\" tab.                 Both an admin and a trainer can disable a user\\'s account.         This will prevent that particular user from logging in until the profile is enabled again.              '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'HowToComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/JwtInterceptor.html":{"url":"interceptors/JwtInterceptor.html","title":"interceptor - JwtInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  JwtInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/jwt.interceptor.ts\n        \n\n            \n                Description\n            \n            \n                Ensures that each HTTP request we send has our authentication token\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tokenStorage: TokenStorage)\n                    \n                \n                        \n                            \n                                Defined in src/app/utils/jwt.interceptor.ts:15\n                            \n                        \n\n                \n                    \n                            Sets up our interceptor for token addition\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        tokenStorage\n                                                  \n                                                        \n                                                                    TokenStorage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe Service that allows us to access our authentication token\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(request: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/jwt.interceptor.ts:28\n                            \n                        \n\n\n                \n                    \n                            Catches HTTP requests and adds the authentication token to its header\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe HTTP request to modify\n\n\n                                                        \n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe means of proceeding with the original request\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { TokenStorage } from './token.storage';\n\n/**\n * Ensures that each HTTP request we send has our authentication token\n */\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n\n  /**\n   * Sets up our interceptor for token addition\n   * @param tokenStorage - the Service that allows us to access our authentication token\n   */\n  constructor(private tokenStorage: TokenStorage) {}\n\n  /**\n   * Catches HTTP requests and adds the authentication token to its header\n   * @param {HttpRequest} request - the HTTP request to modify\n   * @param {HttpHandler} next - the means of proceeding with the original request\n   */\n  intercept(\n    request: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    const token = this.tokenStorage.getToken();\n    if (token != null) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n    }\n    return next.handle(request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingComponent.html":{"url":"components/LandingComponent.html","title":"component - LandingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LandingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/landing/landing.component.ts\n\n\n    \n        Description\n    \n    \n        Supports the Carousel Appearence as a Site Intro\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing\n            \n\n            \n                styleUrls\n                landing.component.css\n            \n\n\n\n            \n                templateUrl\n                ./landing.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                session\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                launchAuth0\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sessionCheck\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth0Service: Auth0Service, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/landing/landing.component.ts:19\n                            \n                        \n\n                \n                    \n                            Creates the Landing Component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth0Service\n                                                  \n                                                        \n                                                                    Auth0Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nProvides Auth0 functionality\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows Component to utilize User Functionality\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            launchAuth0\n                            \n                            \n                        \n                    \n                \n                \n                    \nlaunchAuth0()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/landing/landing.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Calls Auth0 remote login page\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/landing/landing.component.ts:34\n                            \n                        \n\n\n                \n                    \n                            Initializes the component by retrieving the User\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessionCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nsessionCheck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/landing/landing.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            Checks to see if there is a session or not\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/landing/landing.component.ts:17\n                            \n                        \n\n                \n                    \n                        Holds the current user of the program \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            session\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        session:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/landing/landing.component.ts:19\n                            \n                        \n\n                \n                    \n                        Whether a User is, in fact, logged on \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { Auth0Service } from '../../services/auth0.service'\n// import { Router } from '@angular/router';\n\n/**\n * Supports the Carousel Appearence as a Site Intro\n */\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.css']\n})\nexport class LandingComponent implements OnInit {\n  /** Holds the current user of the program */\n  currentUser: User;\n  /** Whether a User is, in fact, logged on */\n  session: boolean;\n\n  /**\n   * Creates the Landing Component\n   * @param {UserControllerService} userService - Allows Component to utilize User Functionality\n   * @param {Auth0Service} auth0Service - Provides Auth0 functionality\n   */\n  constructor(\n    private auth0Service: Auth0Service,\n    private userService: UserControllerService\n    ) { }\n\n  /**\n   * Initializes the component by retrieving the User\n   */\n  ngOnInit() {\n    this.userService.getCurrentUserObservable().subscribe(\n      data => {\n        this.currentUser = data;\n      }\n    );\n    this.sessionCheck();\n  }\n\n  /**\n   * Checks to see if there is a session or not\n   */\n  sessionCheck() {\n    this.session = sessionStorage.length > 0;\n  }\n\n  /**\n   * Calls Auth0 remote login page\n   */\n  launchAuth0() {\n    this.auth0Service.login();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n    \n        \n      \n  \n  \n    \n    Previous\n  \n  \n    \n    Next\n  \n\n\n\n    \n   -->\n\n    \n        RideForce\n        Looking for a ride? Sign up today to be a driver or a rider\n        Start browsing for your perfect match here!\n        Get\n            Started\n            \n        Get\n          Started -->\n        Browse\n        \n          For more information,\n          click here\n        \n      \n\n    \n      \n      \n        \n\n          Rider\n          If you're looking to carpool to and from work, then RideForce is the app for you. Use\n            the app to find and like drivers who you enjoy riding with.\n        \n        \n\n          Driver\n          Want to give others a ride? Sign up to be a driver to help others find a way and lessen\n            the burden of gas prices.\n        \n        \n\n          Safe\n          Find drivers and riders within your employer's company, circle, or group. Members are\n            give a token that will expire in 2 hours so both riders and drivers are approved by the group\n        \n      \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                          Previous            Next         -->            RideForce        Looking for a ride? Sign up today to be a driver or a rider        Start browsing for your perfect match here!        Get            Started                    Get          Started -->        Browse                  For more information,          click here                                                Rider          If you\\'re looking to carpool to and from work, then RideForce is the app for you. Use            the app to find and like drivers who you enjoy riding with.                          Driver          Want to give others a ride? Sign up to be a driver to help others find a way and lessen            the burden of gas prices.                          Safe          Find drivers and riders within your employer\\'s company, circle, or group. Members are            give a token that will expire in 2 hours so both riders and drivers are approved by the group              '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'LandingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LikesComponent.html":{"url":"components/LikesComponent.html","title":"component - LikesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LikesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/likes/likes.component.ts\n\n\n    \n        Description\n    \n    \n        Component that shows User Likes on a mobile device\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-likes\n            \n\n            \n                styleUrls\n                likes.component.css\n            \n\n\n\n            \n                templateUrl\n                ./likes.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                swipecards\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: Router, matchService: MatchingControllerService, userService: UserControllerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/likes/likes.component.ts:22\n                            \n                        \n\n                \n                    \n                            Sets up the Component for Like demonstrations\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows Nav compnent to switch between sub-components\n\n\n                                                        \n                                                \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchingControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAccess to Rider Driver matching service\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAccess to user services\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/likes/likes.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Initializes the Component by populating the swipcards array with data on liked drivers\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/likes/likes.component.ts:39\n                            \n                        \n\n                \n                    \n                        Hold current user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipecards\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        swipecards:     SwipecardModel[]\n\n                    \n                \n                    \n                        \n                            Type :     SwipecardModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/likes/likes.component.ts:22\n                            \n                        \n\n                \n                    \n                        Array of data structures that hold list of the User's liked drivers\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { SwipecardModel } from '../../models/swipecard.model';\nimport { Link } from '../../models/link.model';\nimport { User } from '../../models/user.model';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { Router } from '@angular/router';\n\n/**\n * Component that shows User Likes on a mobile device\n */\n@Component({\n    selector: 'app-likes',\n    templateUrl: './likes.component.html',\n    styleUrls: ['./likes.component.css']\n})\nexport class LikesComponent implements OnInit {\n\n    /**\n     * Array of data structures that hold list of the User's liked drivers\n     */\n    swipecards: SwipecardModel[] = [];\n\n    /**\n     * Sets up the Component for Like demonstrations\n   * @param {Router} route - Allows Nav compnent to switch between sub-components\n     * @param matchService - Access to Rider Driver matching service\n     * @param userService - Access to user services\n     */\n    constructor(\n        private route: Router,\n        private matchService: MatchingControllerService, \n        private userService: UserControllerService\n        ) { }\n\n    /**\n     * Hold current user\n     */\n    currentUser: User;\n\n    /**\n     * Initializes the Component by populating the swipcards array with data on liked drivers\n     */\n    ngOnInit() {\n        if (sessionStorage.length == 0)\n          this.route.navigate([\"/landing\"]);\n        this.userService.getCurrentUser().subscribe(\n            data => {\n                this.currentUser = data;\n                let userLinks: Link[] = null;\n                this.matchService.getLikedDrivers(this.currentUser.id).subscribe(\n                    data2 => {\n                        console.log(data2);\n                        userLinks = data2;\n                        for (let i = 0; i  {\n                                    console.log(data3);\n                                    if (!data3.photoUrl || data3.photoUrl === 'null') {\n                                        data3.photoUrl = 'http://semantic-ui.com/images/avatar/large/chris.jpg';\n                                    }\n                                    for(let car in data3.cars){\n                                        let num = +data3.cars[car].substring(6);\n                                        console.log(data3.cars[car].substring(6));\n                                        this.userService.getCarById(num).subscribe(\n                                            data4 =>{\n                                                if(data4.year!=null){\n                                                    console.log(\"data3.cars[\"+car+\"];\")\n                                                    data3.cars[car]=`${data4.year} ${data4.make} ${data4.model}`;\n                                                }\n                                            }\n                                        )\n                                    }\n                                    for(let contact in data3.contactInfo){\n                                        let num = +data3.contactInfo[contact].substring(14);\n                                        this.userService.getContactInfoById(num).subscribe(\n                                            data4=>{\n                                                if(data4.info!=null){\n                                                    if(data3.contactInfo!=null && data3.contactInfo!=undefined){\n                                                        console.log(\"adding at... data3.contactInfo[\"+contact+\"]\");\n                                                        data3.contactInfo[contact]=`${data4.type}: ${data4.info}`;\n                                                    }\n                                                }\n                                            }\n                                        )\n                                    }\n                                    const card: SwipecardModel = {\n                                        user: data3,\n                                        visible: false\n                                    };\n                                    this.swipecards.push(card);\n                                }\n                            );\n                        }\n                    }\n                );\n            }\n        );\n    }\n}\n\n    \n\n    \n        \n   \n      \n        \n        \n          {{card.user.firstName}}\n          {{card.user.address}}\n          Role: {{card.user.role}}\n          Car:\n          1\">Cars:\n          \n              {{car}}\n          \n          0\" class=\"card-text\">Contact Info:\n              {{contact}}\n          Like\n        \n      \n    \n\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                   {{card.user.firstName}}          {{card.user.address}}          Role: {{card.user.role}}          Car:          1\">Cars:                        {{car}}                    0\" class=\"card-text\">Contact Info:              {{contact}}          Like                  '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'LikesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LikesmatchwebComponent.html":{"url":"components/LikesmatchwebComponent.html","title":"component - LikesmatchwebComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LikesmatchwebComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/likesmatchweb/likesmatchweb.component.ts\n\n\n    \n        Description\n    \n    \n        Component that shows User Likes on a desktop device\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-likesmatchweb\n            \n\n            \n                styleUrls\n                likesmatchweb.component.css\n            \n\n\n\n            \n                templateUrl\n                ./likesmatchweb.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                likecards\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                endFlipCard\n                            \n                            \n                                flipCard\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchingControllerService, userService: UserControllerService, route: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:45\n                            \n                        \n\n                \n                    \n                            Sets up the Component for Like demonstrations\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchingControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAccess to Rider Driver matching service\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAccess to user services\n\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows Nav compnent to switch between sub-components\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endFlipCard\n                            \n                            \n                        \n                    \n                \n                \n                    \nendFlipCard(card: UserCard)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:146\n                            \n                        \n\n\n                \n                    \n                            Card goes past 90 degrees and changes face\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    UserCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flipCard\n                            \n                            \n                        \n                    \n                \n                \n                    \nflipCard(card: UserCard)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:135\n                            \n                        \n\n\n                \n                    \n                            Sets the card to rotate 90 degrees\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    UserCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Initializes the Component by populating the swipcards array with data on liked drivers\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:62\n                            \n                        \n\n                \n                    \n                        Hold the current user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            likecards\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        likecards:     UserCard[]\n\n                    \n                \n                    \n                        \n                            Type :     UserCard[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/likesmatchweb/likesmatchweb.component.ts:45\n                            \n                        \n\n                \n                    \n                        Array of data structures that hold list of the User's liked drivers\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Link } from '../../models/link.model';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { Router } from '@angular/router';\n\n/**\n * Used as a more complex data structure for holding info on liked users\n */\nexport interface UserCard {\n    /** The Driver that they like */\n    user: User;\n    /** (Unknown) */\n    choose: string;\n    /** Status of the User */\n    face: String;\n}\n\n/**\n * Component that shows User Likes on a desktop device\n */\n@Component({\n    selector: 'app-likesmatchweb',\n    templateUrl: './likesmatchweb.component.html',\n    styleUrls: ['./likesmatchweb.component.css'],\n    animations: [\n        trigger('flip', [\n            state('front', style({ transform: 'rotateY(0deg)' })),\n            state('front-back', style({ transform: 'rotateY(90deg' })),\n            state('back', style({ transform: 'rotateY(180deg)' })),\n            state('back-front', style({ transform: 'rotateY(90deg' })),\n            transition('* => *', animate(400))\n        ])\n    ]\n})\n\n\nexport class LikesmatchwebComponent implements OnInit {\n\n    /**\n     * Array of data structures that hold list of the User's liked drivers\n     */\n    likecards: UserCard[] = [];\n\n    /**\n     * Sets up the Component for Like demonstrations\n     * @param {MatchingControllerService} matchService - Access to Rider Driver matching service\n     * @param {UserControllerService} userService - Access to user services\n     * @param {Router} route - Allows Nav compnent to switch between sub-components\n     */\n    constructor(\n        private matchService: MatchingControllerService, \n        private userService: UserControllerService,\n        private route: Router\n        ) { }\n\n    /**\n     * Hold the current user\n     */\n    currentUser: User;\n\n    /**\n     * Initializes the Component by populating the swipcards array with data on liked drivers\n     */\n    ngOnInit() {\n        if (sessionStorage.length == 0)\n          this.route.navigate([\"/landing\"]);\n        this.userService.getCurrentUser().subscribe(\n            data => {\n                console.log('this is put into currentUser');\n                console.log(data);\n                this.currentUser = data;\n                let userLinks: Link[] = null;\n                this.matchService.getLikedDrivers(this.currentUser.id).subscribe(\n                    data2 => {\n                        console.log('here?');\n                        console.log(data2);\n                        console.log('loggeddata2');\n                        userLinks = data2;\n                        for (let i = 0; i  {\n                                    if (!data3.photoUrl || data3.photoUrl === 'null') {\n                                        console.log(data3.contactInfo[0]);\n                                        data3.photoUrl = 'https://s3.us-east-1.amazonaws.com/rydeforce/rydeforce-s3/65600312303b.png';\n                                    }\n                                    // This does very bad things.\n                                    // So, for each contact in data3.contactInfo (which is a list of \n                                    // Link), it gets the ContactInfo data by using\n                                    // the function defined in the user service as getContactInfoById().\n                                    // This is an observable. I'm sorry.\n                                    // It basically replaces what is in the Link[] with what is in the actual\n                                    // ContactInfo object. \n                                    // We should probably refactor the User Model object to have a ContactInfo[]\n                                    // instead of a Link[].\n                                    for(let contact in data3.contactInfo){\n                                        let num = +data3.contactInfo[contact].substring(14);\n                                        this.userService.getContactInfoById(num).subscribe(\n                                            data4=>{\n                                                if(data4.info!=null){\n                                                    if(data3.contactInfo!=null && data3.contactInfo!=undefined){\n                                                        console.log(\"adding at... data3.contactInfo[\"+contact+\"]\");\n                                                        data3.contactInfo[contact]=`${data4.type}: ${data4.info}`;\n                                                    }\n                                                }\n                                            }\n                                        )\n                                    }\n                                    const card: UserCard = {\n                                        user: data3,\n                                        choose: 'none',\n                                        face: 'front'\n                                    };\n                                    \n                                    this.likecards.push(card);\n                                }\n                            );\n                        }\n                    }\n                );\n            }\n        );\n\n\n    }\n\n\n    /**\n     *  Sets the card to rotate 90 degrees\n     */\n    flipCard(card: UserCard) {\n        if (card.face === 'front') {\n            card.face = 'front-back';\n        } else if (card.face === 'back') {\n            card.face = 'back-front';\n        }\n    }\n\n    /**\n     * Card goes past 90 degrees and changes face\n     */\n    endFlipCard(card: UserCard) {\n        if (card.face === 'front-back') {\n            card.face = 'back';\n        } else if (card.face === 'back-front') {\n            card.face = 'front';\n        }\n    }\n\n}\n\n    \n\n    \n        \n  Your Likes\n  \n    \n      \n        \n          \n            \n            \n            \n              {{user.user.firstName}} {{user.user.lastName}}\n               {{user.user.email}} \n              Like\n              Ϝlip\n            \n          \n          \n            \n              {{user.user.firstName}} {{user.user.lastName}}\n              {{user.user.address}}\n              {{user.user.email}}\n              {{user.user.batchEnd | date}}\n              0\" class=\"card-text\">Contact Info:\n              {{contact}}\n              User bio: {{user.user.bio}}\n            \n            \n            qilꟻ\n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Your Likes                                                                                {{user.user.firstName}} {{user.user.lastName}}               {{user.user.email}}               Like              Ϝlip                                                          {{user.user.firstName}} {{user.user.lastName}}              {{user.user.address}}              {{user.user.email}}              {{user.user.batchEnd | date}}              0\" class=\"card-text\">Contact Info:              {{contact}}              User bio: {{user.user.bio}}                                    qilꟻ                              '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'LikesmatchwebComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Location.html":{"url":"interfaces/Location.html","title":"interface - Location","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Location\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/location.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents a specific location on Earth \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        latitude\n                                \n                                \n                                        longitude\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        latitude\n                                    \n                                \n                                \n                                    \n                                        latitude:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the North/West value of the location \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        longitude\n                                    \n                                \n                                \n                                    \n                                        longitude:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The East/West value of the location \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Location {\n    /** the North/West value of the location */\n    latitude: number;\n    /** The East/West value of the location */\n    longitude: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Responsible for providing a user the ability to log in\nOnly uses back end authentication, should be removed once Auth0 is fully implemented\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                userEmail\n                            \n                            \n                                userPass\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, route: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:31\n                            \n                        \n\n                \n                    \n                            Sets up the Login compoennt with dependency injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nProvides the ability to authenticate the user\n\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nprovides the ability to navigate to landing if user is already logged on\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Gets the parameters from the login fields.\nIf the login fails, displays the error message sent by the server under the password field.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            Checking to see if there is a current user, and if there is, redirects to landing.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:31\n                            \n                        \n\n                \n                    \n                        The User to log on to\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userEmail\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userEmail:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:21\n                            \n                        \n\n                \n                    \n                        The \"username\" of the user\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userPass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userPass:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/login/login.component.ts:26\n                            \n                        \n\n                \n                    \n                        The password associated with the indended account\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { User } from '../../models/user.model';\n\n/**\n * Responsible for providing a user the ability to log in\n * Only uses back end authentication, should be removed once Auth0 is fully implemented\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  /**\n   * The \"username\" of the user\n   */\n  userEmail: string;\n\n  /**\n   * The password associated with the indended account\n   */\n  userPass: string;\n\n  /**\n   * The User to log on to\n   */\n  currentUser: User;\n\n  /**\n   * Sets up the Login compoennt with dependency injection\n   * @param { AuthService} authService - Provides the ability to authenticate the user\n   * @param {Router} route - provides the ability to navigate to landing if user is already logged on\n   */\n  constructor(\n    private authService: AuthService, \n    private route: Router\n    ) { }\n\n  /**\n   * Checking to see if there is a current user, and if there is, redirects to landing.\n   */\n  ngOnInit() {\n      if (sessionStorage.length > 0){\n        this.route.navigate(['/landing']);\n      }\n    }\n\n  /**\n   * Gets the parameters from the login fields.\n   * If the login fails, displays the error message sent by the server under the password field.\n   */\n  login() {\n    this.authService.authenticate(this.userEmail, this.userPass);\n  }\n}\n\n    \n\n    \n         -->\n\n\n  \n    \n    \n     Sign In \n    Sign Up \n   -->\n    \n    \n\n       \n       -->\n    \n\n    \n    \n    \n      \n      \n      Default Message\n      \n    \n  \n\n    \n    \n      Register\n      |\n      Forgot Password? \n    \n\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' -->               Sign In     Sign Up    -->                      -->                                  Default Message                          Register      |      Forgot Password?       '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MapsControllerService.html":{"url":"injectables/MapsControllerService.html","title":"injectable - MapsControllerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MapsControllerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/maps-controller.service.ts\n        \n\n            \n                Description\n            \n            \n                Enables Components to work with the Mapping Service on the backend\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDistance\n                            \n                            \n                                    Public\n                                getRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api/maps-controller.service.ts:12\n                            \n                        \n\n                \n                    \n                            Sets up the mapping service to interact with the server\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nprovides the Means of communicating with the Server\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDistance\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDistance(address: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/maps-controller.service.ts:25\n                            \n                        \n\n\n                \n                    \n                            Sends address as string to location endpoint in Map Service. Map Service returns geographic location\nin latitude and longitude as a LatLngLiteral. This can be used to create map markers.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        address\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nLocation info with latitude and longitude information\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getRoute\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getRoute(start: string, end: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/maps-controller.service.ts:37\n                            \n                        \n\n\n                \n                    \n                            Takes in 2 addresses and calculates the distance and travel time between them\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        start\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                string address\n\n                                                        \n                                                \n                                                \n                                                        end\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                string address\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nthe Route info generated by the system\n\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { LatLngLiteral } from '@agm/core';\nimport { RouteInfo } from '../../models/route-info.model';\n\n/**\n * Enables Components to work with the Mapping Service on the backend\n */\n@Injectable()\nexport class MapsControllerService {\n\n  /**\n   * Sets up the mapping service to interact with the server\n   * @param {HttpClient} http - provides the Means of communicating with the Server\n   */\n public constructor(private http: HttpClient) { }\n\n  /**\n  * Sends address as string to location endpoint in Map Service. Map Service returns geographic location\n  * in latitude and longitude as a LatLngLiteral. This can be used to create map markers.\n  * @returns {Observable} - Location info with latitude and longitude information\n  */\n  getDistance(address: string): Observable { // gives back latitude and longitude\n    return this.http.get(environment.apiUrl + '/location', {\n      params: { address },\n    });\n  }\n\n  /**\n   * Takes in 2 addresses and calculates the distance and travel time between them\n   * @param start string address\n   * @param end string address\n   * @returns {Observable} - the Route info generated by the system\n   */\n  public getRoute(start: string, end: string): Observable { // gives back latitude and longitude\n    return this.http.get(environment.apiUrl + '/route', {\n      params: { start, end },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Marker.html":{"url":"interfaces/Marker.html","title":"interface - Marker","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Marker\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/marker.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents an object that could appear on a map \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address\n                                \n                                \n                                            Optional\n                                        draggable\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                        location\n                                \n                                \n                                            Optional\n                                        placeId\n                                \n                                \n                                            Optional\n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The address the marker represents \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                    \n                                \n                                \n                                    \n                                        draggable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Can it move around \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any Identifier a User might use \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:     google.maps.LatLngLiteral\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     google.maps.LatLngLiteral\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    the actual location on the map \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeId\n                                    \n                                \n                                \n                                    \n                                        placeId:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Extra identification for the marker \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Does it represent any specific user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Marker {\n    /** the actual location on the map */\n    location: google.maps.LatLngLiteral;\n    /** The address the marker represents */\n    address?: string;\n    /** Any Identifier a User might use */\n    label?: string;\n    /** Does it represent any specific user */\n    userId?: number;\n    /** Can it move around */\n    draggable?: boolean;\n    /** Extra identification for the marker */\n    placeId?: string;\n    // icon?: string;\n    // infoWindow?: boolean;\n    // comments?: string[];\n    // saved?: boolean;\n  }\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MatchingControllerService.html":{"url":"injectables/MatchingControllerService.html","title":"injectable - MatchingControllerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MatchingControllerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/matching-controller.service.ts\n        \n\n            \n                Description\n            \n            \n                Manages User's interactions with other users on Rideshare\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dislikeDriver\n                            \n                            \n                                getDislikedDrivers\n                            \n                            \n                                getFilteredDrivers\n                            \n                            \n                                getFromLink\n                            \n                            \n                                getLikedDrivers\n                            \n                            \n                                getMatchingDrivers\n                            \n                            \n                                likeDriver\n                            \n                            \n                                unDislikeDriver\n                            \n                            \n                                unlikeDriver\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api/matching-controller.service.ts:13\n                            \n                        \n\n                \n                    \n                            Sets up the Service with an HTTPClient injection\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nprovides the means of interacting with the HTTP servier\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dislikeDriver\n                            \n                            \n                        \n                    \n                \n                \n                    \ndislikeDriver(riderId: number, driverId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:108\n                            \n                        \n\n\n                \n                    \n                            Indicates that the user with ID :id unliked the user with ID :liked.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe rider making the request\n\n\n                                                        \n                                                \n                                                \n                                                        driverId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe driver to affect\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nDoes not actually return anything\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDislikedDrivers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDislikedDrivers(riderId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:97\n                            \n                        \n\n\n                \n                    \n                            Returns all users disliked by the user with the given ID\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe rider making the request\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nthe list of drivers the user disliked\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFilteredDrivers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFilteredDrivers(riderId: number, filter: Filter)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:48\n                            \n                        \n\n\n                \n                    \n                            Returns Users who have passed the given filter and resemble the User enough to be returned\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe rider making the request\n\n\n                                                        \n                                                \n                                                \n                                                        filter\n                                                        \n                                                                    Filter\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe specific filters to add to the request\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \nthe list of Users that pass the filter specifications\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromLink\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromLink(uri: Link)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:27\n                            \n                        \n\n\n                \n                    \n                            will deserialize the link object. returns the object reference from the link\na link is a reference to the object without having to fetch the object from the database\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        uri\n                                                        \n                                                                    Link\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe mapping to a specific user\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nanthing that might be returned\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLikedDrivers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLikedDrivers(riderId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Returns all users liked by the user with the given ID.\nReturns this as an array of strings in the format\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe rider making the request\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nlist of Users the User 'liked'\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMatchingDrivers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMatchingDrivers(riderId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:37\n                            \n                        \n\n\n                \n                    \n                            Returns all drivers who match the rider with the given user ID.\n\"/users/{userid}\"\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe id of the rider making the request\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nthe list of drivers that \"match\" the user\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            likeDriver\n                            \n                            \n                        \n                    \n                \n                \n                    \nlikeDriver(riderId: number, driverId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:75\n                            \n                        \n\n\n                \n                    \n                            Indicates that the user with ID :id likes the user with ID :liked.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe rider making the request\n\n\n                                                        \n                                                \n                                                \n                                                        driverId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe driver the rider now likes\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nDoes not actually return anything\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unDislikeDriver\n                            \n                            \n                        \n                    \n                \n                \n                    \nunDislikeDriver(riderId: number, driverId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:119\n                            \n                        \n\n\n                \n                    \n                            Removes any indication that the user with ID :id disliked the user with ID :liked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe rider making the request\n\n\n                                                        \n                                                \n                                                \n                                                        driverId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe driver to affect\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nDoes not actually return anything\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            unlikeDriver\n                            \n                            \n                        \n                    \n                \n                \n                    \nunlikeDriver(riderId: number, driverId: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/api/matching-controller.service.ts:88\n                            \n                        \n\n\n                \n                    \n                            Removes any indication that the user with ID :id likes the user with ID :liked\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        riderId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe rider making the request\n\n\n                                                        \n                                                \n                                                \n                                                        driverId\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe driver the rider now dislikes\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \nDoes not actually return anything\n\n\n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from '../../../app/models/user.model';\nimport { Observable, of } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { Link } from '../../models/link.model';\nimport { Filter } from '../../models/filter';\n\n/**\n * Manages User's interactions with other users on Rideshare\n */\n@Injectable()\nexport class MatchingControllerService {\n\n  /**\n   * Sets up the Service with an HTTPClient injection\n   * @param http - provides the means of interacting with the HTTP servier\n   */\n  constructor(private http: HttpClient) { }\n\n  /**\n   * will deserialize the link object. returns the object reference from the link\n   * a link is a reference to the object without having to fetch the object from the database\n   * @param {Link} uri - the mapping to a specific user\n   * @returns {Observable} - anthing that might be returned\n   */\n  getFromLink(uri: Link): Observable {\n    return this.http.get(environment.apiUrl + uri);\n  }\n  /**\n   * Returns all drivers who match the rider with the given user ID.\n   * \"/users/{userid}\"\n   *\n   * @param {number} riderId - the id of the rider making the request\n   * @returns {Observable[]>} - the list of drivers that \"match\" the user\n   */\n  getMatchingDrivers(riderId: number): Observable[]> {\n\n    return this.http.get[]>(environment.apiUrl + `/matches/${riderId}`);\n  }\n\n  /**\n   * Returns Users who have passed the given filter and resemble the User enough to be returned\n   * @param riderId - the rider making the request\n   * @param filter - the specific filters to add to the request\n   * @returns {Promise} - the list of Users that pass the filter specifications\n   */\n  getFilteredDrivers(riderId: number, filter: Filter): Promise {\n    const body = {\n      filter,\n      riderId\n    };\n    return this.http.post(environment.apiUrl + `matches/filtered`, body).toPromise();\n  }\n\n  /**\n   * Returns all users liked by the user with the given ID.\n   * Returns this as an array of strings in the format\n   *\n   * @param {number} riderId - the rider making the request\n   * @returns {Observable[]>} - list of Users the User 'liked'\n   */\n  getLikedDrivers(riderId: number): Observable[]> {\n    console.log(environment.apiUrl + `/matches/likes/${riderId}`);\n    return this.http.get[]>(environment.apiUrl + `/matches/likes/${riderId}`);\n  }\n\n  /**\n   * Indicates that the user with ID :id likes the user with ID :liked.\n   *\n   * @param {number} riderId - the rider making the request\n   * @param {number} driverId - the driver the rider now likes\n   * @returns {Observable} - Does not actually return anything\n   */\n  likeDriver(riderId: number, driverId: number): Observable {\n\n    return this.http.put[]>(environment.apiUrl + `/matches/likes/${riderId}/${driverId}`, '');\n\n  }\n\n  /**\n   * Removes any indication that the user with ID :id likes the user with ID :liked\n   *\n   * @param {number} riderId - the rider making the request\n   * @param {number} driverId - the driver the rider now dislikes\n   * @returns {Observable} - Does not actually return anything\n   */\n  unlikeDriver(riderId: number, driverId: number): Observable {\n    return this.http.delete[]>(environment.apiUrl + `/matches/likes/${riderId}/${driverId}`);\n  }\n\n  /**\n   * Returns all users disliked by the user with the given ID\n   * @param {number} riderId - the rider making the request\n   * @returns {Observable[]>} - the list of drivers the user disliked\n   */\n  getDislikedDrivers(riderId: number): Observable[]> {\n    return this.http.get[]>(environment.apiUrl + `/matches/dislikes/${riderId}`);\n  }\n\n  /**\n   * Indicates that the user with ID :id unliked the user with ID :liked.\n   *\n   * @param {number} riderId - the rider making the request\n   * @param {number} driverId - the driver to affect\n   * @returns {Observable} - Does not actually return anything\n   */\n  dislikeDriver(riderId: number, driverId: number): Observable {\n    return this.http.put[]>(environment.apiUrl + `/matches/dislikes/${riderId}/${driverId}`, '');\n  }\n\n  /**\n   *  Removes any indication that the user with ID :id disliked the user with ID :liked\n   *\n   * @param {number} riderId - the rider making the request\n   * @param {number} driverId - the driver to affect\n   * @returns {Observable} - Does not actually return anything\n   */\n  unDislikeDriver(riderId: number, driverId: number): Observable {\n    return this.http.delete[]>(environment.apiUrl + `/matches/dislikes/${riderId}/${driverId}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n    \n        Description\n    \n    \n        Hosts the Component that allows users to navigate between components\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                dropped\n                            \n                            \n                                role\n                            \n                            \n                                session\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drop\n                            \n                            \n                                getCurrentUser\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                logout0\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                sessionCheck\n                            \n                            \n                                setCurrentRole\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth0: Auth0Service, authService: AuthService, userService: UserControllerService, route: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:32\n                            \n                        \n\n                \n                    \n                            Sets up the component with relevent services\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth0\n                                                  \n                                                        \n                                                                    Auth0Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nProvides Auth0 functionality\n\n\n                                                        \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows Authentication Services to be utilized\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows User Services to be utilized\n\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows Nav compnent to switch between sub-components\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            drop\n                            \n                            \n                        \n                    \n                \n                \n                    \ndrop()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:104\n                            \n                        \n\n\n                \n                    \n                            Toggles a drop-down menu close to the log-out option \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCurrentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCurrentUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Sets up the current user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:93\n                            \n                        \n\n\n                \n                    \n                            Allows User to log out of their session\nuses await/async to avoid forcing User to reload manually to see the 'log in' button after log out\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout0\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout0()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Allows User to log out of their session, informing\nAuth0 API that a logout has occured\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            Sets up the Log in Session appearence\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessionCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \nsessionCheck()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Updates session, telling if the user is logged in or not\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setCurrentRole\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetCurrentRole()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Sets the role of the Current user to determine what functionality should be available\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:19\n                            \n                        \n\n                \n                    \n                        Holds the current user of the app \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dropped\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dropped:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:32\n                            \n                        \n\n                \n                    \n                        Just a boolean stating whether the dropdown has been toggled.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            role\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        role:     String\n\n                    \n                \n                    \n                        \n                            Type :     String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:28\n                            \n                        \n\n                \n                    \n                        Will store the current role of the user for the purpose of utilizing *ngIf rendering on the navBar\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            session\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        session:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/navbar/navbar.component.ts:23\n                            \n                        \n\n                \n                    \n                        Whether the User is logged on or not\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { User } from '../../models/user.model';\nimport { Auth0Service } from '../../services/auth0.service';\n\n/**\n * Hosts the Component that allows users to navigate between components\n */\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  /** Holds the current user of the app */\n  currentUser: User;\n  /**\n   * Whether the User is logged on or not\n   */\n  session: boolean;\n\n  /**\n   * Will store the current role of the user for the purpose of utilizing *ngIf rendering on the navBar\n   */\n  role: String;\n  /**\n   * Just a boolean stating whether the dropdown has been toggled.\n   */\n  dropped: boolean=false;\n\n  /**\n   * Sets up the component with relevent services\n   * @param {Auth0Service} auth0 - Provides Auth0 functionality\n   * @param {AuthService} authService - Allows Authentication Services to be utilized\n   * @param {UserControllerService} userService - Allows User Services to be utilized\n   * @param {Router} route - Allows Nav compnent to switch between sub-components\n   */\n  constructor(\n    private auth0: Auth0Service,\n    private authService: AuthService,\n    private userService: UserControllerService,\n    private route: Router\n    ) { }\n\n  /**\n   * Sets up the Log in Session appearence\n   */\n  ngOnInit() {\n    this.sessionCheck();\n    this.setCurrentRole();\n  }\n\n  /**\n   * Updates session, telling if the user is logged in or not\n   */\n  sessionCheck() {\n    console.log(sessionStorage);\n    this.session = sessionStorage.length > 0;\n  }\n  /**\n   * Sets up the current user\n   */\n  getCurrentUser() {\n    this.userService.getCurrentUser().subscribe(\n      data => {\n        this.currentUser = data;\n      }\n    );\n  }\n\n  /**\n   * Sets the role of the Current user to determine what functionality should be available\n   */\n  setCurrentRole() {\n    this.role = sessionStorage.getItem('role');\n  }\n\n  /**\n   * Allows User to log out of their session, informing\n   * Auth0 API that a logout has occured\n   */\n  logout0() {\n    this.auth0.logout0();\n  }\n\n  /**\n   * Allows User to log out of their session\n   * uses await/async to avoid forcing User to reload manually to see the 'log in' button after log out\n   */\n  async logout() {\n    sessionStorage.clear();\n    if (this.route.url === '/landing') {\n      location.reload(true);\n    } else {\n      await this.route.navigate(['/landing']);\n      location.reload(true);\n    }\n  }\n\n  /** Toggles a drop-down menu close to the log-out option */\n  drop() {\n    // this.dropped= !this.dropped;\n    if (this.dropped == true) {\n      setTimeout(() => {\n        this.dropped = !this.dropped;\n      }, 390);\n    } else {\n      this.dropped = !this.dropped;\n    }\n  }\n}\n    \n\n    \n        \n   -->\n    \n     -->\n    \n      \n    \n    Logout\n    \n      \n        Home(current)\n        Login\n        Get Key\n        Map\n        Browse\n        Favorites\n        Car\n        Profile\n        About\n      \n  \n  \n  Logout\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->         -->                  Logout                  Home(current)        Login        Get Key        Map        Browse        Favorites        Car        Profile        About            Logout'\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Office.html":{"url":"interfaces/Office.html","title":"interface - Office","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Office\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/office.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents Offices a User might hold \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Where the office is located \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of the office in the database.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The common name of the office (e.g. \"Reston\").\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Office {\n\n  /**\n   * The ID of the office in the database.\n   */\n  id: number;\n  /**\n   * The common name of the office (e.g. \"Reston\").\n   */\n  name: string;\n  /** Where the office is located */\n  address: string;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/PlacesAutocompleteDirective.html":{"url":"directives/PlacesAutocompleteDirective.html","title":"directive - PlacesAutocompleteDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  PlacesAutocompleteDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/directives/places-autocomplete/places-autocomplete.directive.ts\n        \n\n            \n                Description\n            \n            \n                Adds functionality to an HTML input element \n\n            \n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appPlacesAutocomplete]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                element\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                addressSelect\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elRef: ElementRef, mapsAPILoader: MapsAPILoader)\n                    \n                \n                        \n                            \n                                Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:16\n                            \n                        \n\n                \n                    \n                            Sets up the listener with dependency injections\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe element to listen to\n\n\n                                                        \n                                                \n                                                \n                                                        mapsAPILoader\n                                                  \n                                                        \n                                                                    MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nthe external api for mapping services\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        addressSelect\n                    \n                    \n                        Manages data for when the user changes the place \n\n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:16\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:39\n                            \n                        \n\n\n                \n                    \n                            Sets up the Event listener so that auto-complete is possible\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            element\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        element:     HTMLInputElement\n\n                    \n                \n                    \n                        \n                            Type :     HTMLInputElement\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/directives/places-autocomplete/places-autocomplete.directive.ts:12\n                            \n                        \n\n                \n                    \n                        The Input element to focus on \n\n                    \n                \n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, OnInit, ElementRef, EventEmitter, Output } from '@angular/core';\n// import { } from 'googlemaps';\nimport { MapsAPILoader } from '@agm/core';\n\n/** Adds functionality to an HTML input element */\n@Directive({\n  selector: '[appPlacesAutocomplete]'\n})\nexport class PlacesAutocompleteDirective implements OnInit {\n\n  /** The Input element to focus on */\n  private element: HTMLInputElement;\n\n  /** Manages data for when the user changes the place */\n  @Output()\n  addressSelect: EventEmitter = new EventEmitter();\n\n  /**\n   * Sets up the listener with dependency injections\n   * @param {ElementRef} elRef - the element to listen to\n   * @param {MapsAPILoader} mapsAPILoader - the external api for mapping services\n   */\n  constructor(private elRef: ElementRef, private mapsAPILoader: MapsAPILoader) {\n    this.element = this.elRef.nativeElement;\n  }\n\n  /**\n   * @ignore\n   * @param place\n   */\n  getFormattedAddress(place) {\n    const location_obj = {};\n    return place;\n  }\n\n  /**\n   * Sets up the Event listener so that auto-complete is possible\n   */\n  ngOnInit() {\n    this.mapsAPILoader.load().then(() => {\n      const autocomplete = new google.maps.places.Autocomplete(this.element);\n      autocomplete.addListener('place_changed', () => {\n        this.addressSelect.emit(this.getFormattedAddress(autocomplete.getPlace()));\n      });\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Register.html":{"url":"interfaces/Register.html","title":"interface - Register","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Register\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/register.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents the object the Account Info component would use when creating a new user in the system \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        token\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    THe password of the new user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The long token granted by an administrator (or trainer) to allow new User registration \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The User name of the new user \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Register {\n  /** The User name of the new user */\n  username: string;\n  /** THe password of the new user */\n  password: string;\n  /** The long token granted by an administrator (or trainer) to allow new User registration */\n  token: string;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RideswipeComponent.html":{"url":"components/RideswipeComponent.html","title":"component - RideswipeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RideswipeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/rideswipe/rideswipe.component.ts\n\n\n    \n        Description\n    \n    \n        Holds the two components for user matching and selects which to display based on whether view is desktop or mobile \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-rideswipe\n            \n\n            \n                styleUrls\n                rideswipe.component.css\n            \n\n\n\n            \n                templateUrl\n                ./rideswipe.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                mobile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/rideswipe/rideswipe.component.ts:13\n                            \n                        \n\n                \n                    \n                            Sets up a router for managing the Desktop vs mobile component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows Nav compnent to switch between sub-components\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/rideswipe/rideswipe.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            Decides whether to set the view to mobile or not\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mobile\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mobile:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/rideswipe/rideswipe.component.ts:13\n                            \n                        \n\n                \n                    \n                        Whether the view is mobile (Desktop is the default) \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n/** Holds the two components for user matching and selects which to display based on whether view is desktop or mobile */\n@Component({\n  selector: 'app-rideswipe',\n  templateUrl: './rideswipe.component.html',\n  styleUrls: ['./rideswipe.component.css']\n})\nexport class RideswipeComponent implements OnInit {\n\n  /** Whether the view is mobile (Desktop is the default) */\n  public mobile = false;\n\n  /**\n   * Sets up a router for managing the Desktop vs mobile component\n   * @param {Router} route - Allows Nav compnent to switch between sub-components\n   */\n  constructor(\n    private route: Router\n    ) { }\n\n  /**\n   * Decides whether to set the view to mobile or not\n   */\n  ngOnInit() {\n    if (sessionStorage.length == 0) {\n      this.route.navigate(['/landing']);\n    }\n    if (window.screen.width \n    \n\n    \n        \n  \n\n\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'RideswipeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RouteInfo.html":{"url":"interfaces/RouteInfo.html","title":"interface - RouteInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RouteInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/route-info.model.ts\n        \n\n            \n                Description\n            \n            \n                Provides the barebones information about a given route \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        distance\n                                \n                                \n                                        duration\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        distance\n                                    \n                                \n                                \n                                    \n                                        distance:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The total route distance, in meters.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                    \n                                \n                                \n                                    \n                                        duration:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The total route time, in seconds.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface RouteInfo {\n    /**\n * The total route distance, in meters.\n */\n    distance: number;\n    /**\n     * The total route time, in seconds.\n     */\n    duration: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SwipecardModel.html":{"url":"classes/SwipecardModel.html","title":"class - SwipecardModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SwipecardModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/swipecard.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents a User object that could be hidden in an HTML list \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/swipecard.model.ts:6\n                            \n                        \n\n                \n                    \n                        The Given User \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visible:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/swipecard.model.ts:8\n                            \n                        \n\n                \n                    \n                        Is is visible or hidden? \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user.model';\n\n/** Represents a User object that could be hidden in an HTML list */\nexport class SwipecardModel {\n    /** The Given User */\n    user: User;\n    /** Is is visible or hidden? */\n    visible = false;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TokenStorage.html":{"url":"injectables/TokenStorage.html","title":"injectable - TokenStorage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TokenStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utils/token.storage.ts\n        \n\n            \n                Description\n            \n            \n                Provides basic methods for accessing the session token \n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Public\n                                saveToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/token.storage.ts:28\n                            \n                        \n\n\n                \n                    \n                            Retrieves the current authentication token being used\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \nthe authentication token of the current session\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            saveToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        saveToken(token: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/utils/token.storage.ts:20\n                            \n                        \n\n\n                \n                    \n                            Saves the provided authentication token to the session\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe authentication token to save\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/** Used to access the Authentication token in our session storage */\nconst TOKEN_KEY = 'authToken';\n\n/** Provides basic methods for accessing the session token */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorage {\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n  /**\n   * Saves the provided authentication token to the session\n   * @param {string} token - the authentication token to save\n   */\n  public saveToken(token: string) {\n    sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  /**\n   * Retrieves the current authentication token being used\n   * @returns {string} - the authentication token of the current session\n   */\n  public getToken(): string {\n    return sessionStorage.getItem(TOKEN_KEY);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UploadService.html":{"url":"injectables/UploadService.html","title":"injectable - UploadService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UploadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/upload.service.ts\n        \n\n            \n                Description\n            \n            \n                Enables components to upload files (cheifly images) to the dedicated S3 Bucket on Amazon Web Services\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                FOLDER\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getS3Bucket\n                            \n                            \n                                uploadfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/upload.service.ts:15\n                            \n                        \n\n                \n                    \n                            Basic set up of the Service - it uses no dependency injection\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getS3Bucket\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetS3Bucket()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/upload.service.ts:26\n                            \n                        \n\n\n                \n                    \n                            Retrieves an S3 bucket object so we can upload files to an actual S3 bucket on Amazon\n\n\n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nthe S3 representation to utillize\n\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadfile\n                            \n                            \n                        \n                    \n                \n                \n                    \nuploadfile(file: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/upload.service.ts:42\n                            \n                        \n\n\n                \n                    \n                            Attempts to actually upload a file to the S3 Service\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        file\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe file to upload to the S3 service\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \nthe url used for the file\n\n\n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FOLDER\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        FOLDER:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'rydeforce-s3/'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/upload.service.ts:13\n                            \n                        \n\n                \n                    \n                        The Root folder name used by this system \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/upload.service.ts:15\n                            \n                        \n\n                \n                    \n                        Holds the url where the image will be stored\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as S3 from 'aws-sdk/clients/s3';\n\n/**\n * Enables components to upload files (cheifly images) to the dedicated S3 Bucket on Amazon Web Services\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadService {\n\n  /** The Root folder name used by this system */\n  FOLDER = 'rydeforce-s3/';\n  /** Holds the url where the image will be stored*/\n  url: any;\n\n  /**\n   * Basic set up of the Service - it uses no dependency injection\n   */\n  constructor() { }\n\n  /**\n   * Retrieves an S3 bucket object so we can upload files to an actual S3 bucket on Amazon\n   * @returns {S3} - the S3 representation to utillize\n   */\n  getS3Bucket(): any {\n    const bucket = new S3 (\n    {\n    accessKeyId: 'AKIAIRZG4TK6EBLZV7GA',\n    secretAccessKey: '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',\n    region: 'us-east-1'\n    }\n    );\n    return bucket;\n  }\n\n  /**\n   * Attempts to actually upload a file to the S3 Service\n   * @param file - the file to upload to the S3 service\n   * @returns {string} - the url used for the file\n   */\n  uploadfile(file) {\n   const params = {\n      Bucket: 'rydeforce',\n      Key: this.FOLDER + Math.floor(Math.random() * 100000000000) + file.name ,\n      Body: file\n       // allow that and instead assign numbers on the beginning of the name.\n    };\n\n    const upResult = this.getS3Bucket().upload(params, function (err, data) {\n      if (err) {\n        console.log('There was an error uploading your file: ', err);\n        return false;\n      }\n      console.log('Successfully uploaded file.', data);\n      console.log(params);\n\n      return true;\n    });\n    if (!upResult.failed) {\n      console.log('upload successful');\n      this.url = 'https://s3.us-east-1.amazonaws.com/' + params.Bucket + '/' + params.Key;\n    } else {\n      console.log('upload failed');\n    }\n\n    console.log('BEFORE RETURNING, this.url is: ' + this.url);\n    return this.url;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.model.ts\n        \n\n            \n                Description\n            \n            \n                Represents a user of the ride-share system on our front-end\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        active\n                                \n                                \n                                        address\n                                \n                                \n                                        batchEnd\n                                \n                                \n                                        bio\n                                \n                                \n                                        cars\n                                \n                                \n                                        contactInfo\n                                \n                                \n                                        dayStart\n                                \n                                \n                                        email\n                                \n                                \n                                        firstName\n                                \n                                \n                                        id\n                                \n                                \n                                        lastName\n                                \n                                \n                                        office\n                                \n                                \n                                        password\n                                \n                                \n                                        photoUrl\n                                \n                                \n                                        role\n                                \n                                \n                                            Optional\n                                        venmo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                    \n                                \n                                \n                                    \n                                        active:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the user's account is active.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's home address (where they currently live).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        batchEnd\n                                    \n                                \n                                \n                                    \n                                        batchEnd:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The end date of the batch, in the format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z').\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bio\n                                    \n                                \n                                \n                                    \n                                        bio:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's about me that has a character limit of 255\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cars\n                                    \n                                \n                                \n                                    \n                                        cars:     Link[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Link[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    List of cars the User might own (holds the URL mapping to those cars) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        contactInfo\n                                    \n                                \n                                \n                                    \n                                        contactInfo:     Link[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Link[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's contact information.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dayStart\n                                    \n                                \n                                \n                                    \n                                        dayStart:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The time of day the users batch starts daily sessions \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The username of a user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                    \n                                \n                                \n                                    \n                                        firstName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The first name of a user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The ID of the user in the database.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                    \n                                \n                                \n                                    \n                                        lastName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The last name of a user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        office\n                                    \n                                \n                                \n                                    \n                                        office:     Link\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Link\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's office (where they work).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The URL to the user's profile photo.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photoUrl\n                                    \n                                \n                                \n                                    \n                                        photoUrl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The url to find the user's profile \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                    \n                                \n                                \n                                    \n                                        role:     Role\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Role\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user's role, determining what permissions they have to access data on\nthe server.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        venmo\n                                    \n                                \n                                \n                                    \n                                        venmo:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The user's Venmo username.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Link } from './link.model';\nimport { Office } from './office.model';\nimport { Car } from './car.model';\nimport { ContactInfo } from './contact-info.model';\nimport { Role } from './role.model';\n\n/**\n * Represents a user of the ride-share system on our front-end\n */\nexport interface User {\n  /**\n   * The ID of the user in the database.\n   */\n  id: number;\n  /** The first name of a user */\n  firstName: string;\n  /** The last name of a user */\n  lastName: string;\n  /** The username of a user */\n  email: string;\n  /**\n   * The URL to the user's profile photo.\n   */\n  password: string;\n  /** The url to find the user's profile */\n  photoUrl: string;\n  /**\n   * The user's home address (where they currently live).\n   */\n  address: string;\n  /**\n   * The user's office (where they work).\n   */\n  office: Link;\n  /**\n   * The end date of the batch, in the format (yyyy-MM-dd'T'HH:mm:ss.SSS'Z').\n   */\n  batchEnd: any;\n  /** The time of day the users batch starts daily sessions */\n  dayStart: number;\n  /**\n   *  The user's about me that has a character limit of 255\n   */\n  bio: string;\n  /** List of cars the User might own (holds the URL mapping to those cars) */\n  cars: Link[];\n  /**\n   * The user's Venmo username.\n   */\n  venmo?: string;\n  /**\n   * The user's contact information.\n   */\n  contactInfo: Link[];\n  /**\n   * Whether the user's account is active.\n   */\n  active: string;\n  /**\n   * The user's role, determining what permissions they have to access data on\n   * the server.\n   */\n  role: Role;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCard.html":{"url":"interfaces/UserCard.html","title":"interface - UserCard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/likesmatchweb/likesmatchweb.component.ts\n        \n\n            \n                Description\n            \n            \n                Used as a more complex data structure for holding info on liked users\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choose\n                                \n                                \n                                        face\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choose\n                                    \n                                \n                                \n                                    \n                                        choose:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    (Unknown) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        face\n                                    \n                                \n                                \n                                    \n                                        face:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Status of the User \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     User\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The Driver that they like \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { Link } from '../../models/link.model';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { Router } from '@angular/router';\n\n/**\n * Used as a more complex data structure for holding info on liked users\n */\nexport interface UserCard {\n    /** The Driver that they like */\n    user: User;\n    /** (Unknown) */\n    choose: string;\n    /** Status of the User */\n    face: String;\n}\n\n/**\n * Component that shows User Likes on a desktop device\n */\n@Component({\n    selector: 'app-likesmatchweb',\n    templateUrl: './likesmatchweb.component.html',\n    styleUrls: ['./likesmatchweb.component.css'],\n    animations: [\n        trigger('flip', [\n            state('front', style({ transform: 'rotateY(0deg)' })),\n            state('front-back', style({ transform: 'rotateY(90deg' })),\n            state('back', style({ transform: 'rotateY(180deg)' })),\n            state('back-front', style({ transform: 'rotateY(90deg' })),\n            transition('* => *', animate(400))\n        ])\n    ]\n})\n\n\nexport class LikesmatchwebComponent implements OnInit {\n\n    /**\n     * Array of data structures that hold list of the User's liked drivers\n     */\n    likecards: UserCard[] = [];\n\n    /**\n     * Sets up the Component for Like demonstrations\n     * @param {MatchingControllerService} matchService - Access to Rider Driver matching service\n     * @param {UserControllerService} userService - Access to user services\n     * @param {Router} route - Allows Nav compnent to switch between sub-components\n     */\n    constructor(\n        private matchService: MatchingControllerService, \n        private userService: UserControllerService,\n        private route: Router\n        ) { }\n\n    /**\n     * Hold the current user\n     */\n    currentUser: User;\n\n    /**\n     * Initializes the Component by populating the swipcards array with data on liked drivers\n     */\n    ngOnInit() {\n        if (sessionStorage.length == 0)\n          this.route.navigate([\"/landing\"]);\n        this.userService.getCurrentUser().subscribe(\n            data => {\n                console.log('this is put into currentUser');\n                console.log(data);\n                this.currentUser = data;\n                let userLinks: Link[] = null;\n                this.matchService.getLikedDrivers(this.currentUser.id).subscribe(\n                    data2 => {\n                        console.log('here?');\n                        console.log(data2);\n                        console.log('loggeddata2');\n                        userLinks = data2;\n                        for (let i = 0; i  {\n                                    if (!data3.photoUrl || data3.photoUrl === 'null') {\n                                        console.log(data3.contactInfo[0]);\n                                        data3.photoUrl = 'https://s3.us-east-1.amazonaws.com/rydeforce/rydeforce-s3/65600312303b.png';\n                                    }\n                                    // This does very bad things.\n                                    // So, for each contact in data3.contactInfo (which is a list of \n                                    // Link), it gets the ContactInfo data by using\n                                    // the function defined in the user service as getContactInfoById().\n                                    // This is an observable. I'm sorry.\n                                    // It basically replaces what is in the Link[] with what is in the actual\n                                    // ContactInfo object. \n                                    // We should probably refactor the User Model object to have a ContactInfo[]\n                                    // instead of a Link[].\n                                    for(let contact in data3.contactInfo){\n                                        let num = +data3.contactInfo[contact].substring(14);\n                                        this.userService.getContactInfoById(num).subscribe(\n                                            data4=>{\n                                                if(data4.info!=null){\n                                                    if(data3.contactInfo!=null && data3.contactInfo!=undefined){\n                                                        console.log(\"adding at... data3.contactInfo[\"+contact+\"]\");\n                                                        data3.contactInfo[contact]=`${data4.type}: ${data4.info}`;\n                                                    }\n                                                }\n                                            }\n                                        )\n                                    }\n                                    const card: UserCard = {\n                                        user: data3,\n                                        choose: 'none',\n                                        face: 'front'\n                                    };\n                                    \n                                    this.likecards.push(card);\n                                }\n                            );\n                        }\n                    }\n                );\n            }\n        );\n\n\n    }\n\n\n    /**\n     *  Sets the card to rotate 90 degrees\n     */\n    flipCard(card: UserCard) {\n        if (card.face === 'front') {\n            card.face = 'front-back';\n        } else if (card.face === 'back') {\n            card.face = 'back-front';\n        }\n    }\n\n    /**\n     * Card goes past 90 degrees and changes face\n     */\n    endFlipCard(card: UserCard) {\n        if (card.face === 'front-back') {\n            card.face = 'back';\n        } else if (card.face === 'back-front') {\n            card.face = 'front';\n        }\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCard-1.html":{"url":"interfaces/UserCard-1.html","title":"interface - UserCard-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserCard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/usermatchweb/usermatchweb.component.ts\n        \n\n            \n                Description\n            \n            \n                Represents the User selection item in the html page \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choose\n                                \n                                \n                                        face\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choose\n                                    \n                                \n                                \n                                    \n                                        choose:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The status of the given user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        face\n                                    \n                                \n                                \n                                    \n                                        face:     String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Link to profile picture of the user \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:     User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     User\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The User being represented \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { Link } from '../../models/link.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { Router } from '@angular/router';\nimport { Filter } from '../../models/filter';\n\n/** Represents the User selection item in the html page */\ninterface UserCard {\n  /** The User being represented */\n  user: User;\n  /** The status of the given user */\n  choose: string;\n  /** Link to profile picture of the user */\n  face: String;\n}\n\n/**\n * Allows Views for Other Users in a desktop view\n */\n@Component({\n  selector: 'app-usermatchweb',\n  templateUrl: './usermatchweb.component.html',\n  styleUrls: ['./usermatchweb.component.css'],\n  animations: [\n    trigger('flip', [\n      state('front', style({ transform: 'rotateY(0deg)' })),\n      state('front-back', style({ transform: 'rotateY(90deg' })),\n      state('back', style({ transform: 'rotateY(180deg)' })),\n      state('back-front', style({ transform: 'rotateY(90deg' })),\n      transition('* => *', animate(400))\n    ])\n  ]\n})\nexport class UsermatchwebComponent implements OnInit {\n\n  // Dummy data\n  users: UserCard[] = [];\n\n  /**\n     * Sets up Component with the Matching and User services injected\n     * @param {MatchingControllerService} matchService - Enables the matching service\n     * @param {UserControllerService} userService - Enables access to User management\n     */\n  constructor(\n    private matchService: MatchingControllerService,\n    private userService: UserControllerService,\n    private route: Router\n    ) { }\n\n  /** Holds the current user of the system */\n  currentUser: User;\n\n  /** Whether or not to filter users by batch-end date */\n  filterBatchEnd: boolean;\n  /** Whether or not to filter users by day start-time */\n  filterStartTime: boolean;\n  /** Whether or not to filter users by Distance */\n  filterDistance: boolean;\n\n  /**\n   * Sets up the component by populating the list of possibel matches for the current user\n   */\n  ngOnInit() {\n    if (sessionStorage.length == 0) {\n      this.route.navigate(['/landing']);\n    }\n    this.userService.getCurrentUser().subscribe(\n      data => {\n        this.currentUser = data;\n        let userLinks: Link[] = null;\n        this.matchService.getMatchingDrivers(+(sessionStorage.getItem(\"id\"))).subscribe(\n          data2 => {\n            // console.log(\"data2 is \" + data2);\n            userLinks = data2;\n            console.log(userLinks);\n            for (let i = 0; i  {\n                  if (!data3.photoUrl || data3.photoUrl === 'null') {\n                    data3.photoUrl = 'http://semantic-ui.com/images/avatar/large/chris.jpg';\n                  }\n                  const card: UserCard = {\n                    user: data3,\n                    choose: 'none',\n                    face: 'front'\n                  };\n                  this.users.push(card);\n                  // Sets the current swipe card to the first element of the array if the array has something in it.\n                },\n                e => {\n                   console.log('error getting match user!');\n                   console.log(e);\n                }\n              );\n            }\n          },\n          e => {\n            console.log('error getting match Drivers!');\n            console.log(e);\n          }\n        );\n      },\n      e => {\n        console.log('error getting user (matching service)!');\n        console.log(e);\n     }\n    );\n  }\n\n  /**\n   * Handles verdict a user gives on a potential match\n   * @param {number} index - The user being evaluated\n   * @param {number} interest - the judgment on the viewed user\n   */\n  like(index: number, interest: number) {\n    /**\n     * interest:\n     * 0 - dislike\n     * 1 - like\n     * 2 - trash\n     * 3 - clear\n     */\n    if (interest !== 2) {\n      if (interest === 1) {\n        this.users[index].choose = 'liked';\n        this.matchService.unDislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.likeDriver(this.currentUser.id, this.users[index].user.id).subscribe(\n          data => {\n          }\n        );\n      } else if (interest === 0) {\n        this.users[index].choose = 'disliked';\n        this.matchService.unlikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.dislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe(\n          data => {\n          }\n        );\n      } else {\n        this.users[index].choose = 'none';\n        this.matchService.unlikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.unDislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n      }\n    } else {\n      if (this.users[index].choose === 'disliked') {\n        this.users.splice(index, 1);\n      }\n    }\n  }\n\n  /**\n   * Sets the card to rotate 90 degrees\n   * @param {UserCard} card - the card to operate on\n   */\n  flipCard(card: UserCard) {\n    if (card.face === 'front') {\n      card.face = 'front-back';\n    } else if (card.face === 'back') {\n      card.face = 'back-front';\n    }\n  }\n\n  /**\n   * Card goes past 90 degrees and changes face\n   * @param {UserCard} card - the card to operate on\n   */\n  endFlipCard(card: UserCard) {\n    if (card.face === 'front-back') {\n      card.face = 'back';\n    } else if (card.face === 'back-front') {\n      card.face = 'front';\n    }\n  }\n\n  // filter() {\n  //   for(var i = 0; i  {\n        this.users = [];\n        for (const u of users) {\n          if (!u.photoUrl || u.photoUrl === 'null') {\n            u.photoUrl = 'http://semantic-ui.com/images/avatar/large/chris.jpg';\n          }\n          const card: UserCard = {\n            user: u,\n            choose: 'none',\n            face: 'front'\n          };\n          this.users.push(card);\n        }\n\n\n      },\n      (e) => console.log(e)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsercardComponent.html":{"url":"components/UsercardComponent.html","title":"component - UsercardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UsercardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/usercard/usercard.component.ts\n\n\n    \n        Description\n    \n    \n        Allows Views for Other Users in a mobile view\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-usercard\n            \n\n            \n                styleUrls\n                usercard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./usercard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animState\n                            \n                            \n                                animThumbState\n                            \n                            \n                                currentIndex\n                            \n                            \n                                currentSwipeCard\n                            \n                            \n                                currentUser\n                            \n                            \n                                SWIPE_ACTION\n                            \n                            \n                                swipeCardBio\n                            \n                            \n                                swipeCardMain\n                            \n                            \n                                swipecards\n                            \n                            \n                                thumbImg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hideImage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                swipe\n                            \n                            \n                                swiped\n                            \n                            \n                                thumbAnimDone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchingControllerService, userService: UserControllerService, route: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/usercard/usercard.component.ts:57\n                            \n                        \n\n                \n                    \n                            Sets up Component with the Matching and User services injected\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchingControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nEnables the matching service\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nEnables access to User management\n\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAllows Nav compnent to switch between sub-components\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideImage\n                            \n                            \n                        \n                    \n                \n                \n                    \nhideImage(hide: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:128\n                            \n                        \n\n\n                \n                    \n                            Hides the card picture\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        hide\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Sets up the component by populating the list of possibel matches for the current user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipe\n                            \n                            \n                        \n                    \n                \n                \n                    \nswipe(action: , user: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:139\n                            \n                        \n\n\n                \n                    \n                            action triggered when user swipes\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.SWIPE_ACTION.RIGHT\n                                                        \n\n                                                \n                                                \n                                                        user\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swiped\n                            \n                            \n                        \n                    \n                \n                \n                    \nswiped()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:170\n                            \n                        \n\n\n                \n                    \n                            Called when the swipe animation has completed\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbAnimDone\n                            \n                            \n                        \n                    \n                \n                \n                    \nthumbAnimDone()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:194\n                            \n                        \n\n\n                \n                    \n                            Called when the Thumb Animation is done\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animState:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'center'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:48\n                            \n                        \n\n                \n                    \n                        Keeps track of the Animation state \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animThumbState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        animThumbState:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'one'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:50\n                            \n                        \n\n                \n                    \n                        Keeps track of the Thumb animation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentIndex:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:46\n                            \n                        \n\n                \n                    \n                        Index of the Current User being viewed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentSwipeCard\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentSwipeCard:     SwipecardModel\n\n                    \n                \n                    \n                        \n                            Type :     SwipecardModel\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:44\n                            \n                        \n\n                \n                    \n                        User currently being looked at \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:72\n                            \n                        \n\n                \n                    \n                        Holds the current user of the system \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SWIPE_ACTION\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        SWIPE_ACTION:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : { LEFT: 'swipeleft', RIGHT: 'swiperight' }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:36\n                            \n                        \n\n                \n                    \n                        constant for swipe action: left or right \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipeCardBio\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        swipeCardBio:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:57\n                            \n                        \n\n                \n                    \n                        Represents the div element 'swipeBio' \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipeCardMain\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        swipeCardMain:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:55\n                            \n                        \n\n                \n                    \n                        Represents the div element 'swipeMain' \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            swipecards\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        swipecards:     SwipecardModel[]\n\n                    \n                \n                    \n                        \n                            Type :     SwipecardModel[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n\n    ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:38\n                            \n                        \n\n                \n                    \n                        our list of swipecards: DUMMY DATA \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            thumbImg\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        thumbImg:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'assets/icons/thumbsDown.png'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usercard/usercard.component.ts:52\n                            \n                        \n\n                \n                    \n                        Location of the thumbnail image files \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { Link } from '../../models/link.model';\nimport { SwipecardModel } from '../../models/swipecard.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { Router } from '@angular/router';\n\n/**\n * Allows Views for Other Users in a mobile view\n */\n@Component({\n    selector: 'app-usercard',\n    templateUrl: './usercard.component.html',\n    styleUrls: ['./usercard.component.css'],\n    animations: [\n        trigger('slide', [\n            state('center', style({ transform: 'translateX(0)' })),\n            state('left', style({ transform: 'translateX(-200%)' })),\n            state('right', style({ transform: 'translateX(200%)' })),\n            transition('* => *', animate(100))\n        ]),\n        trigger('pop', [\n            state('one', style({ transform: 'scale(1)', opacity: 0 })),\n            state('two', style({ transform: 'scale(1.2)', opacity: .8 })),\n            transition('one => two', animate(200)),\n            transition('two => one', animate(100))\n        ])\n    ]\n})\nexport class UsercardComponent implements OnInit {\n\n    /** constant for swipe action: left or right */\n    SWIPE_ACTION = { LEFT: 'swipeleft', RIGHT: 'swiperight' };\n    /** our list of swipecards: DUMMY DATA */\n    swipecards: SwipecardModel[] = [\n\n    ];\n\n\n    /** User currently being looked at */\n    currentSwipeCard: SwipecardModel;\n    /** Index of the Current User being viewed */\n    currentIndex = 0;\n    /** Keeps track of the Animation state */\n    animState = 'center';\n    /** Keeps track of the Thumb animation */\n    animThumbState = 'one';\n    /** Location of the thumbnail image files */\n    thumbImg = 'assets/icons/thumbsDown.png';\n\n    /** Represents the div element 'swipeMain' */\n    @ViewChild('swipeMain') swipeCardMain: ElementRef;\n    /** Represents the div element 'swipeBio' */\n    @ViewChild('swipeBio') swipeCardBio: ElementRef;\n\n    /**\n     * Sets up Component with the Matching and User services injected\n     * @param {MatchingControllerService} matchService - Enables the matching service\n     * @param {UserControllerService} userService - Enables access to User management\n     * @param {Router} route - Allows Nav compnent to switch between sub-components\n     */\n    constructor(\n        private matchService: MatchingControllerService, \n        private userService: UserControllerService,\n        private route: Router\n        ) { }\n\n    /** Holds the current user of the system */\n    currentUser: User;\n\n    /**\n     * Sets up the component by populating the list of possibel matches for the current user\n     */\n    ngOnInit() {\n        if (sessionStorage.length == 0)\n          this.route.navigate([\"/landing\"]);\n        this.userService.getCurrentUser().subscribe(\n            data => {\n                console.log('data');\n                this.currentUser = data;\n                console.log(this.currentUser);\n                let userLinks: Link[] = null;\n                this.matchService.getMatchingDrivers(this.currentUser.id).subscribe(\n                    data2 => {\n                        // console.log(\"data2 is \" + data2);\n                        userLinks = data2;\n                        console.log(userLinks);\n                        for (let i = 0; i  {\n                                    console.log(data3);\n                                    if (!data3.photoUrl || data3.photoUrl === 'null') {\n                                        console.log(data3.photoUrl);\n                                        data3.photoUrl = 'http://semantic-ui.com/images/avatar/large/chris.jpg';\n                                    }\n                                    const card: SwipecardModel = {\n                                        user: data3,\n                                        visible: false\n                                    };\n                                    this.swipecards.push(card);\n                                    // Sets the current swipe card to the first element of the array if the array has something in it.\n                                    if (this.swipecards.length > 0) {\n                                        this.currentSwipeCard = this.swipecards[0];\n                                    }\n                                }\n                            );\n                        }\n                    }\n                );\n\n            }\n        );\n\n\n\n    }\n\n    /**\n     * Hides the card picture\n     *\n     * @param hide\n     */\n    hideImage(hide: boolean) {\n        if (hide) {\n            this.swipeCardMain.nativeElement.classList.add('hidden');\n        } else {\n            this.swipeCardMain.nativeElement.classList.remove('hidden');\n        }\n    }\n\n    /**\n     *  action triggered when user swipes\n     */\n     swipe(action = this.SWIPE_ACTION.RIGHT, user) {\n        this.animThumbState = 'two';\n        // swipe right, next avatar\n        if (action === this.SWIPE_ACTION.RIGHT) {\n            this.animState = 'right';\n            this.thumbImg = 'assets/icons/thumbsUp.png';\n            this.matchService.unDislikeDriver(this.currentUser.id, this.swipecards[this.currentIndex].user.id).subscribe();\n            this.matchService.likeDriver(this.currentUser.id, this.swipecards[this.currentIndex].user.id).subscribe(\n                data => {\n                }\n            );\n        }\n\n        // swipe left, previous avatar\n        if (action === this.SWIPE_ACTION.LEFT) {\n            this.animState = 'left';\n            this.thumbImg = 'assets/icons/thumbsDown.png';\n            console.log(this.currentUser.id);\n            console.log(this.swipecards[this.currentIndex].user.id);\n            this.matchService.unlikeDriver(this.currentUser.id, this.swipecards[this.currentIndex].user.id).subscribe();\n            this.matchService.dislikeDriver(this.currentUser.id, this.swipecards[this.currentIndex].user.id).subscribe(\n                data => {\n                }\n            );\n        }\n        this.swipecards.splice(this.currentIndex, 1);\n    }\n\n    /**\n     * Called when the swipe animation has completed\n     */\n    swiped() {\n        if (this.animState === 'left') {\n            this.animState = 'center';\n            if (this.currentIndex + 1 > this.swipecards.length - 1) {\n                this.currentIndex = 0;\n            } else {\n                this.currentIndex++;\n            }\n        } else if (this.animState === 'right') {\n            this.animState = 'center';\n            if (this.currentIndex - 1 \n    \n\n    \n        \n    \n     0\">\n        \n            \n                \n                \n                     -->\n                    \n                \n\n                \n                    \n                        {{currentSwipeCard.user.firstName}} \n                    \n                    Address: {{currentSwipeCard.user.address}}\n                    Email: {{currentSwipeCard.user.email}}\n                    Batch end date: {{currentSwipeCard.user.batchEnd | date}}\n                    \n                    see comment\n                \n                \n                \n                \n                \n                \n            \n            \n                \n                    \n                        Name: {{currentSwipeCard.user.firstName}} {{currentSwipeCard.user.lastName}}\n                    \n                    \n                    {{contact.type}}: {{contact.info}}\n                    \n                        \n                            Car info:\n                            {{car.make}}, {{car.model}}, {{car.year}}\n                        \n                    \n                    Contact info:\n                    {{contact.type}}: {{contact.info}}\n                    \n                    RIDER\n                \n            \n        \n    \n    \n        There's nobody here.\n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         0\">                                                                         -->                                                                                                {{currentSwipeCard.user.firstName}}                                         Address: {{currentSwipeCard.user.address}}                    Email: {{currentSwipeCard.user.email}}                    Batch end date: {{currentSwipeCard.user.batchEnd | date}}                                        see comment                                                                                                                                                                                    Name: {{currentSwipeCard.user.firstName}} {{currentSwipeCard.user.lastName}}                                                            {{contact.type}}: {{contact.info}}                                                                        Car info:                            {{car.make}}, {{car.model}}, {{car.year}}                                                                Contact info:                    {{contact.type}}: {{contact.info}}                                        RIDER                                                    There\\'s nobody here.    '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'UsercardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsermatchwebComponent.html":{"url":"components/UsermatchwebComponent.html","title":"component - UsermatchwebComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UsermatchwebComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/usermatchweb/usermatchweb.component.ts\n\n\n    \n        Description\n    \n    \n        Allows Views for Other Users in a desktop view\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-usermatchweb\n            \n\n            \n                styleUrls\n                usermatchweb.component.css\n            \n\n\n\n            \n                templateUrl\n                ./usermatchweb.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                filterBatchEnd\n                            \n                            \n                                filterDistance\n                            \n                            \n                                filterStartTime\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                endFlipCard\n                            \n                            \n                                flipCard\n                            \n                            \n                                like\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matchService: MatchingControllerService, userService: UserControllerService, route: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/usermatchweb/usermatchweb.component.ts:40\n                            \n                        \n\n                \n                    \n                            Sets up Component with the Matching and User services injected\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matchService\n                                                  \n                                                        \n                                                                    MatchingControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nEnables the matching service\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserControllerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nEnables access to User management\n\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endFlipCard\n                            \n                            \n                        \n                    \n                \n                \n                    \nendFlipCard(card: UserCard)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:170\n                            \n                        \n\n\n                \n                    \n                            Card goes past 90 degrees and changes face\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    UserCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe card to operate on\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flipCard\n                            \n                            \n                        \n                    \n                \n                \n                    \nflipCard(card: UserCard)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:158\n                            \n                        \n\n\n                \n                    \n                            Sets the card to rotate 90 degrees\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        card\n                                                        \n                                                                    UserCard\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe card to operate on\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            like\n                            \n                            \n                        \n                    \n                \n                \n                    \nlike(index: number, interest: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:119\n                            \n                        \n\n\n                \n                    \n                            Handles verdict a user gives on a potential match\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe user being evaluated\n\n\n                                                        \n                                                \n                                                \n                                                        interest\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nthe judgment on the viewed user\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Sets up the component by populating the list of possibel matches for the current user\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateFilter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:187\n                            \n                        \n\n\n                \n                    \n                            Updates the filter each time a filter checkbox is clicked\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentUser:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:54\n                            \n                        \n\n                \n                    \n                        Holds the current user of the system \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterBatchEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterBatchEnd:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:57\n                            \n                        \n\n                \n                    \n                        Whether or not to filter users by batch-end date \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterDistance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterDistance:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:61\n                            \n                        \n\n                \n                    \n                        Whether or not to filter users by Distance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterStartTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterStartTime:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:59\n                            \n                        \n\n                \n                    \n                        Whether or not to filter users by day start-time \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     UserCard[]\n\n                    \n                \n                    \n                        \n                            Type :     UserCard[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/usermatchweb/usermatchweb.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from '../../models/user.model';\nimport { Link } from '../../models/link.model';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { MatchingControllerService } from '../../services/api/matching-controller.service';\nimport { UserControllerService } from '../../services/api/user-controller.service';\nimport { Router } from '@angular/router';\nimport { Filter } from '../../models/filter';\n\n/** Represents the User selection item in the html page */\ninterface UserCard {\n  /** The User being represented */\n  user: User;\n  /** The status of the given user */\n  choose: string;\n  /** Link to profile picture of the user */\n  face: String;\n}\n\n/**\n * Allows Views for Other Users in a desktop view\n */\n@Component({\n  selector: 'app-usermatchweb',\n  templateUrl: './usermatchweb.component.html',\n  styleUrls: ['./usermatchweb.component.css'],\n  animations: [\n    trigger('flip', [\n      state('front', style({ transform: 'rotateY(0deg)' })),\n      state('front-back', style({ transform: 'rotateY(90deg' })),\n      state('back', style({ transform: 'rotateY(180deg)' })),\n      state('back-front', style({ transform: 'rotateY(90deg' })),\n      transition('* => *', animate(400))\n    ])\n  ]\n})\nexport class UsermatchwebComponent implements OnInit {\n\n  // Dummy data\n  users: UserCard[] = [];\n\n  /**\n     * Sets up Component with the Matching and User services injected\n     * @param {MatchingControllerService} matchService - Enables the matching service\n     * @param {UserControllerService} userService - Enables access to User management\n     */\n  constructor(\n    private matchService: MatchingControllerService,\n    private userService: UserControllerService,\n    private route: Router\n    ) { }\n\n  /** Holds the current user of the system */\n  currentUser: User;\n\n  /** Whether or not to filter users by batch-end date */\n  filterBatchEnd: boolean;\n  /** Whether or not to filter users by day start-time */\n  filterStartTime: boolean;\n  /** Whether or not to filter users by Distance */\n  filterDistance: boolean;\n\n  /**\n   * Sets up the component by populating the list of possibel matches for the current user\n   */\n  ngOnInit() {\n    if (sessionStorage.length == 0) {\n      this.route.navigate(['/landing']);\n    }\n    this.userService.getCurrentUser().subscribe(\n      data => {\n        this.currentUser = data;\n        let userLinks: Link[] = null;\n        this.matchService.getMatchingDrivers(+(sessionStorage.getItem(\"id\"))).subscribe(\n          data2 => {\n            // console.log(\"data2 is \" + data2);\n            userLinks = data2;\n            console.log(userLinks);\n            for (let i = 0; i  {\n                  if (!data3.photoUrl || data3.photoUrl === 'null') {\n                    data3.photoUrl = 'http://semantic-ui.com/images/avatar/large/chris.jpg';\n                  }\n                  const card: UserCard = {\n                    user: data3,\n                    choose: 'none',\n                    face: 'front'\n                  };\n                  this.users.push(card);\n                  // Sets the current swipe card to the first element of the array if the array has something in it.\n                },\n                e => {\n                   console.log('error getting match user!');\n                   console.log(e);\n                }\n              );\n            }\n          },\n          e => {\n            console.log('error getting match Drivers!');\n            console.log(e);\n          }\n        );\n      },\n      e => {\n        console.log('error getting user (matching service)!');\n        console.log(e);\n     }\n    );\n  }\n\n  /**\n   * Handles verdict a user gives on a potential match\n   * @param {number} index - The user being evaluated\n   * @param {number} interest - the judgment on the viewed user\n   */\n  like(index: number, interest: number) {\n    /**\n     * interest:\n     * 0 - dislike\n     * 1 - like\n     * 2 - trash\n     * 3 - clear\n     */\n    if (interest !== 2) {\n      if (interest === 1) {\n        this.users[index].choose = 'liked';\n        this.matchService.unDislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.likeDriver(this.currentUser.id, this.users[index].user.id).subscribe(\n          data => {\n          }\n        );\n      } else if (interest === 0) {\n        this.users[index].choose = 'disliked';\n        this.matchService.unlikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.dislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe(\n          data => {\n          }\n        );\n      } else {\n        this.users[index].choose = 'none';\n        this.matchService.unlikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n        this.matchService.unDislikeDriver(this.currentUser.id, this.users[index].user.id).subscribe();\n      }\n    } else {\n      if (this.users[index].choose === 'disliked') {\n        this.users.splice(index, 1);\n      }\n    }\n  }\n\n  /**\n   * Sets the card to rotate 90 degrees\n   * @param {UserCard} card - the card to operate on\n   */\n  flipCard(card: UserCard) {\n    if (card.face === 'front') {\n      card.face = 'front-back';\n    } else if (card.face === 'back') {\n      card.face = 'back-front';\n    }\n  }\n\n  /**\n   * Card goes past 90 degrees and changes face\n   * @param {UserCard} card - the card to operate on\n   */\n  endFlipCard(card: UserCard) {\n    if (card.face === 'front-back') {\n      card.face = 'back';\n    } else if (card.face === 'back-front') {\n      card.face = 'front';\n    }\n  }\n\n  // filter() {\n  //   for(var i = 0; i  {\n        this.users = [];\n        for (const u of users) {\n          if (!u.photoUrl || u.photoUrl === 'null') {\n            u.photoUrl = 'http://semantic-ui.com/images/avatar/large/chris.jpg';\n          }\n          const card: UserCard = {\n            user: u,\n            choose: 'none',\n            face: 'front'\n          };\n          this.users.push(card);\n        }\n\n\n      },\n      (e) => console.log(e)\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Filter \n    \n    \n    \n       Batch End Date \n       Day Start Time \n       Distance \n      Submit-->\n    \n  \n  Potential Matches \n  \n    \n      \n        \n          \n            \n            \n              {{user.user.firstName}} {{user.user.lastName}}\n              {{user.user.address}}\n              \n                \n                \n                \n                 \n\n              \n            \n          \n          \n            \n              {{user.user.firstName}} {{user.user.lastName}}\n              {{user.user.address}}\n              {{user.user.email}}\n              {{user.user.batchEnd | date}}\n              \n              \n                {{contact.type}}: {{contact.info}}\n               -->\n              User bio: {{user.user.bio}}\n            \n          \n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Filter                    Batch End Date        Day Start Time        Distance       Submit-->        Potential Matches                                                                     {{user.user.firstName}} {{user.user.lastName}}              {{user.user.address}}                                                                                                                                                       {{user.user.firstName}} {{user.user.lastName}}              {{user.user.address}}              {{user.user.email}}              {{user.user.batchEnd | date}}                                            {{contact.type}}: {{contact.info}}               -->              User bio: {{user.user.bio}}                                          '\n    var COMPONENTS = [{'name': 'AccountinfoComponent', 'selector': 'app-accountinfo'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CallbackComponent', 'selector': 'app-callback'},{'name': 'CarRegistrationComponent', 'selector': 'app-car-registration'},{'name': 'FavoritesComponent', 'selector': 'app-favorites'},{'name': 'HowToComponent', 'selector': 'app-how-to'},{'name': 'LandingComponent', 'selector': 'app-landing'},{'name': 'LikesComponent', 'selector': 'app-likes'},{'name': 'LikesmatchwebComponent', 'selector': 'app-likesmatchweb'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'MapComponent', 'selector': 'app-map'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'RideswipeComponent', 'selector': 'app-rideswipe'},{'name': 'UsercardComponent', 'selector': 'app-usercard'},{'name': 'UsermatchwebComponent', 'selector': 'app-usermatchweb'},{'name': 'ViewProfileComponent', 'selector': 'app-view-profile'}];\n    var DIRECTIVES = [{'name': 'PlacesAutocompleteDirective', 'selector': '[appPlacesAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'UsermatchwebComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/app.po.ts\n            \n            \n                class\n            \n            \n                AppPage\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/callback/callback/callback.component.ts\n            \n            \n                component\n            \n            \n                CallbackComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/accountinfo/accountinfo.component.ts\n            \n            \n                component\n            \n            \n                AccountinfoComponent\n            \n            \n                93 %\n                (57/61)\n            \n        \n        \n            \n                \n                src/app/components/admin/admin.component.ts\n            \n            \n                component\n            \n            \n                AdminComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/components/car-registration/car-registration.component.ts\n            \n            \n                component\n            \n            \n                CarRegistrationComponent\n            \n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                src/app/components/favorites/favorites.component.ts\n            \n            \n                component\n            \n            \n                FavoritesComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/how-to/how-to.component.ts\n            \n            \n                component\n            \n            \n                HowToComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/landing/landing.component.ts\n            \n            \n                component\n            \n            \n                LandingComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/components/likes/likes.component.ts\n            \n            \n                component\n            \n            \n                LikesComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/components/likesmatchweb/likesmatchweb.component.ts\n            \n            \n                component\n            \n            \n                LikesmatchwebComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/components/likesmatchweb/likesmatchweb.component.ts\n            \n            \n                interface\n            \n            \n                UserCard\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/components/map/map.component.ts\n            \n            \n                component\n            \n            \n                MapComponent\n            \n            \n                90 %\n                (55/61)\n            \n        \n        \n            \n                \n                src/app/components/navbar/navbar.component.ts\n            \n            \n                component\n            \n            \n                NavbarComponent\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/components/rideswipe/rideswipe.component.ts\n            \n            \n                component\n            \n            \n                RideswipeComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/usercard/usercard.component.ts\n            \n            \n                component\n            \n            \n                UsercardComponent\n            \n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/app/components/usermatchweb/usermatchweb.component.ts\n            \n            \n                component\n            \n            \n                UsermatchwebComponent\n            \n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                src/app/components/usermatchweb/usermatchweb.component.ts\n            \n            \n                interface\n            \n            \n                UserCard\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/components/view-profile/view-profile.component.ts\n            \n            \n                component\n            \n            \n                ViewProfileComponent\n            \n            \n                79 %\n                (23/29)\n            \n        \n        \n            \n                \n                src/app/directives/places-autocomplete/places-autocomplete.directive.ts\n            \n            \n                directive\n            \n            \n                PlacesAutocompleteDirective\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/address.model.ts\n            \n            \n                class\n            \n            \n                AddressModel\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/models/api-error.model.ts\n            \n            \n                interface\n            \n            \n                ApiError\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/models/car.model.ts\n            \n            \n                class\n            \n            \n                Car\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/models/contact-info.model.ts\n            \n            \n                interface\n            \n            \n                ContactInfo\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/filter.ts\n            \n            \n                class\n            \n            \n                Filter\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/location.model.ts\n            \n            \n                interface\n            \n            \n                Location\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/marker.model.ts\n            \n            \n                interface\n            \n            \n                Marker\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/models/office.model.ts\n            \n            \n                interface\n            \n            \n                Office\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/register.model.ts\n            \n            \n                interface\n            \n            \n                Register\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/models/route-info.model.ts\n            \n            \n                interface\n            \n            \n                RouteInfo\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/swipecard.model.ts\n            \n            \n                class\n            \n            \n                SwipecardModel\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/models/user.model.ts\n            \n            \n                interface\n            \n            \n                User\n            \n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/app/services/api/maps-controller.service.ts\n            \n            \n                injectable\n            \n            \n                MapsControllerService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/app/services/api/matching-controller.service.ts\n            \n            \n                injectable\n            \n            \n                MatchingControllerService\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/app/services/api/user-controller.service.ts\n            \n            \n                injectable\n            \n            \n                UserControllerService\n            \n            \n                96 %\n                (30/31)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/services/auth0.service.ts\n            \n            \n                injectable\n            \n            \n                Auth0Service\n            \n            \n                84 %\n                (11/13)\n            \n        \n        \n            \n                \n                src/app/services/geocode.service.ts\n            \n            \n                injectable\n            \n            \n                GeocodeService\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/services/upload.service.ts\n            \n            \n                injectable\n            \n            \n                UploadService\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/utils/token.storage.ts\n            \n            \n                injectable\n            \n            \n                TokenStorage\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/utils/token.storage.ts\n            \n            \n                variable\n            \n            \n                TOKEN_KEY\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @agm/core : ^1.0.0-beta.4\n        \n            @angular/animations : ^6.1.8\n        \n            @angular/cdk : ^6.4.7\n        \n            @angular/common : ^6.1.8\n        \n            @angular/compiler : ^6.1.8\n        \n            @angular/core : ^6.1.8\n        \n            @angular/forms : ^6.1.8\n        \n            @angular/http : ^6.1.8\n        \n            @angular/material : ^6.4.7\n        \n            @angular/platform-browser : ^6.1.8\n        \n            @angular/platform-browser-dynamic : ^6.1.8\n        \n            @angular/router : ^6.1.8\n        \n            @ng-bootstrap/ng-bootstrap : ^3.2.2\n        \n            auth0-lock : ^11.10.0\n        \n            aws-sdk : ^2.321.0\n        \n            core-js : ^2.4.1\n        \n            googlemaps : ^1.12.0\n        \n            hammerjs : ^2.0.8\n        \n            ng2-animate-on-scroll : ^1.0.11\n        \n            rxjs : ^6.3.2\n        \n            rxjs-compat : ^6.0.0-rc.0\n        \n            zone.js : ^0.8.19\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiErrorType   (src/.../api-error.model.ts)\n                        \n                        \n                            ContactInfoType   (src/.../contact-info-type.model.ts)\n                        \n                        \n                            Interest   (src/.../interest.model.ts)\n                        \n                        \n                            Role   (src/.../role.model.ts)\n                        \n                        \n                            State   (src/.../state.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/api-error.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ApiErrorType\n                    \n                \n                    \n                        \n                            A specific type of error which can be returned by the API.\n\n                        \n                    \n                        \n                            \n                                 NotLoggedIn\n                            \n                        \n                        \n                            \n                                Value : NOT_LOGGED_IN\n                            \n                        \n                        \n                            \n                                 Unauthorized\n                            \n                        \n                        \n                            \n                                Value : UNAUTHORIZED\n                            \n                        \n            \n        \n\n    src/app/models/contact-info-type.model.ts\n    \n        \n            \n                \n                    \n                        \n                        ContactInfoType\n                    \n                \n                    \n                        \n                            Represents the ype of contact information available for a user \n\n                        \n                    \n                        \n                            \n                                 Phone\n                            \n                        \n                        \n                            \n                                Value : PHONE\n                            \n                        \n                        \n                            \n                                 Slack\n                            \n                        \n                        \n                            \n                                Value : SLACK\n                            \n                        \n                        \n                            \n                                 Skype\n                            \n                        \n                        \n                            \n                                Value : SKYPE\n                            \n                        \n                        \n                            \n                                 Other\n                            \n                        \n                        \n                            \n                                Value : OTHER\n                            \n                        \n            \n        \n\n    src/app/models/interest.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Interest\n                    \n                \n                    \n                        \n                            Holds the Interest type \n\n                        \n                    \n                        \n                            \n                                 like\n                            \n                        \n                        \n                            \n                                Value : LIKE\n                            \n                        \n                        \n                            \n                                 dislike\n                            \n                        \n                        \n                            \n                                Value : DISLIKE\n                            \n                        \n                        \n                            \n                                 thrash\n                            \n                        \n                        \n                            \n                                Value : TRASH\n                            \n                        \n            \n        \n\n    src/app/models/role.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                    \n                        \n                            Represents the type of user in the system \n\n                        \n                    \n                        \n                            \n                                 Driver\n                            \n                        \n                        \n                            \n                                Value : DRIVER\n                            \n                        \n                        \n                            \n                                 Rider\n                            \n                        \n                        \n                            \n                                Value : RIDER\n                            \n                        \n                        \n                            \n                                 Trainer\n                            \n                        \n                        \n                            \n                                Value : TRAINER\n                            \n                        \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n            \n        \n\n    src/app/models/state.model.ts\n    \n        \n            \n                \n                    \n                        \n                        State\n                    \n                \n                    \n                        \n                            Represents a State in the United States (Plus DC and Puerto Rico) \n\n                        \n                    \n                        \n                            \n                                 Alabama\n                            \n                        \n                        \n                            \n                                Value : AL\n                            \n                        \n                        \n                            \n                                 Alaska\n                            \n                        \n                        \n                            \n                                Value : AK\n                            \n                        \n                        \n                            \n                                 Arkansas\n                            \n                        \n                        \n                            \n                                Value : AR\n                            \n                        \n                        \n                            \n                                 Arizona\n                            \n                        \n                        \n                            \n                                Value : AZ\n                            \n                        \n                        \n                            \n                                 California\n                            \n                        \n                        \n                            \n                                Value : CA\n                            \n                        \n                        \n                            \n                                 Colorado\n                            \n                        \n                        \n                            \n                                Value : CO\n                            \n                        \n                        \n                            \n                                 Connecticut\n                            \n                        \n                        \n                            \n                                Value : CT\n                            \n                        \n                        \n                            \n                                 Delaware\n                            \n                        \n                        \n                            \n                                Value : DE\n                            \n                        \n                        \n                            \n                                 DistrictOfColumbia\n                            \n                        \n                        \n                            \n                                Value : DC\n                            \n                        \n                        \n                            \n                                 Florida\n                            \n                        \n                        \n                            \n                                Value : FL\n                            \n                        \n                        \n                            \n                                 Georgia\n                            \n                        \n                        \n                            \n                                Value : GA\n                            \n                        \n                        \n                            \n                                 Hawaii\n                            \n                        \n                        \n                            \n                                Value : HI\n                            \n                        \n                        \n                            \n                                 Idaho\n                            \n                        \n                        \n                            \n                                Value : ID\n                            \n                        \n                        \n                            \n                                 Illinois\n                            \n                        \n                        \n                            \n                                Value : IL\n                            \n                        \n                        \n                            \n                                 Indiana\n                            \n                        \n                        \n                            \n                                Value : IN\n                            \n                        \n                        \n                            \n                                 Iowa\n                            \n                        \n                        \n                            \n                                Value : IA\n                            \n                        \n                        \n                            \n                                 Kansas\n                            \n                        \n                        \n                            \n                                Value : KS\n                            \n                        \n                        \n                            \n                                 Kentucky\n                            \n                        \n                        \n                            \n                                Value : KY\n                            \n                        \n                        \n                            \n                                 Louisiana\n                            \n                        \n                        \n                            \n                                Value : LA\n                            \n                        \n                        \n                            \n                                 Maine\n                            \n                        \n                        \n                            \n                                Value : ME\n                            \n                        \n                        \n                            \n                                 Maryland\n                            \n                        \n                        \n                            \n                                Value : MD\n                            \n                        \n                        \n                            \n                                 Massachusetts\n                            \n                        \n                        \n                            \n                                Value : MA\n                            \n                        \n                        \n                            \n                                 Michigan\n                            \n                        \n                        \n                            \n                                Value : MI\n                            \n                        \n                        \n                            \n                                 Minnesota\n                            \n                        \n                        \n                            \n                                Value : MN\n                            \n                        \n                        \n                            \n                                 Mississippi\n                            \n                        \n                        \n                            \n                                Value : MS\n                            \n                        \n                        \n                            \n                                 Missouri\n                            \n                        \n                        \n                            \n                                Value : MO\n                            \n                        \n                        \n                            \n                                 Montana\n                            \n                        \n                        \n                            \n                                Value : MT\n                            \n                        \n                        \n                            \n                                 Nebraska\n                            \n                        \n                        \n                            \n                                Value : NE\n                            \n                        \n                        \n                            \n                                 Nevada\n                            \n                        \n                        \n                            \n                                Value : NV\n                            \n                        \n                        \n                            \n                                 NewHampshire\n                            \n                        \n                        \n                            \n                                Value : NH\n                            \n                        \n                        \n                            \n                                 NewJersey\n                            \n                        \n                        \n                            \n                                Value : NJ\n                            \n                        \n                        \n                            \n                                 NewMexico\n                            \n                        \n                        \n                            \n                                Value : NM\n                            \n                        \n                        \n                            \n                                 NewYork\n                            \n                        \n                        \n                            \n                                Value : NY\n                            \n                        \n                        \n                            \n                                 NorthCarolina\n                            \n                        \n                        \n                            \n                                Value : NC\n                            \n                        \n                        \n                            \n                                 NorthDakota\n                            \n                        \n                        \n                            \n                                Value : ND\n                            \n                        \n                        \n                            \n                                 Ohio\n                            \n                        \n                        \n                            \n                                Value : OH\n                            \n                        \n                        \n                            \n                                 Oklahoma\n                            \n                        \n                        \n                            \n                                Value : OK\n                            \n                        \n                        \n                            \n                                 Oregon\n                            \n                        \n                        \n                            \n                                Value : OR\n                            \n                        \n                        \n                            \n                                 Pennsylvania\n                            \n                        \n                        \n                            \n                                Value : PA\n                            \n                        \n                        \n                            \n                                 PuertoRico\n                            \n                        \n                        \n                            \n                                Value : PR\n                            \n                        \n                        \n                            \n                                 RhodeIsland\n                            \n                        \n                        \n                            \n                                Value : RI\n                            \n                        \n                        \n                            \n                                 SouthCarolina\n                            \n                        \n                        \n                            \n                                Value : SC\n                            \n                        \n                        \n                            \n                                 SouthDakota\n                            \n                        \n                        \n                            \n                                Value : SD\n                            \n                        \n                        \n                            \n                                 Tennessee\n                            \n                        \n                        \n                            \n                                Value : TN\n                            \n                        \n                        \n                            \n                                 Texas\n                            \n                        \n                        \n                            \n                                Value : TX\n                            \n                        \n                        \n                            \n                                 Utah\n                            \n                        \n                        \n                            \n                                Value : UT\n                            \n                        \n                        \n                            \n                                 Vermont\n                            \n                        \n                        \n                            \n                                Value : VT\n                            \n                        \n                        \n                            \n                                 Virginia\n                            \n                        \n                        \n                            \n                                Value : VA\n                            \n                        \n                        \n                            \n                                 Washington\n                            \n                        \n                        \n                            \n                                Value : WA\n                            \n                        \n                        \n                            \n                                 WestVirginia\n                            \n                        \n                        \n                            \n                                Value : WV\n                            \n                        \n                        \n                            \n                                 Wisconsin\n                            \n                        \n                        \n                            \n                                Value : WI\n                            \n                        \n                        \n                            \n                                 Wyoming\n                            \n                        \n                        \n                            \n                                Value : WY\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nRideshareClient\nThis project was generated with Angular CLI version 1.7.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nInformation for developers\nGit directions\nHere is an overview of the steps you need to take in order to make a\nsuccessful change to the repo. If you do not follow all these steps, there\nmay be problems!\ngit checkout -b your-branch # Omit the '-b' if the branch already exists.\n# Make changes to branch...\ngit add .  # Assuming you are in the root directory.\ngit commit -m 'Descriptive commit message'\ngit push -u origin your-branch # You can use just 'git push' if you've already pushed.Before you make a pull request, it's a good idea to merge any new changes\nfrom the dev branch, especially if you've spent a decent amount of time on\nyour changes (making it more likely that the dev branch has changed). This is\nthe best way to detect merge conflicts early.\n# To merge any new changes from the dev branch:\ngit checkout dev\ngit pull\ngit checkout your-branch\ngit merge devIf you get any merge conflicts, resolve them and then make a new commit (git add . && git commit -m 'Descriptive commit message).\nOnce you've pushed your branch, make a pull request on GitHub and make sure\nthat your PR is based off the dev branch and not master!\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAccountinfoComponent\n\nAccountinfoComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountinfoComponent->AppModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCallbackComponent\n\nCallbackComponent\n\nAppModule -->\n\nCallbackComponent->AppModule\n\n\n\n\n\nCarRegistrationComponent\n\nCarRegistrationComponent\n\nAppModule -->\n\nCarRegistrationComponent->AppModule\n\n\n\n\n\nFavoritesComponent\n\nFavoritesComponent\n\nAppModule -->\n\nFavoritesComponent->AppModule\n\n\n\n\n\nHowToComponent\n\nHowToComponent\n\nAppModule -->\n\nHowToComponent->AppModule\n\n\n\n\n\nLandingComponent\n\nLandingComponent\n\nAppModule -->\n\nLandingComponent->AppModule\n\n\n\n\n\nLikesComponent\n\nLikesComponent\n\nAppModule -->\n\nLikesComponent->AppModule\n\n\n\n\n\nLikesmatchwebComponent\n\nLikesmatchwebComponent\n\nAppModule -->\n\nLikesmatchwebComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nAppModule -->\n\nMapComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPlacesAutocompleteDirective\n\nPlacesAutocompleteDirective\n\nAppModule -->\n\nPlacesAutocompleteDirective->AppModule\n\n\n\n\n\nRideswipeComponent\n\nRideswipeComponent\n\nAppModule -->\n\nRideswipeComponent->AppModule\n\n\n\n\n\nUsercardComponent\n\nUsercardComponent\n\nAppModule -->\n\nUsercardComponent->AppModule\n\n\n\n\n\nUsermatchwebComponent\n\nUsermatchwebComponent\n\nAppModule -->\n\nUsermatchwebComponent->AppModule\n\n\n\n\n\nViewProfileComponent\n\nViewProfileComponent\n\nAppModule -->\n\nViewProfileComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\nErrorInterceptor\n\nErrorInterceptor\n\nAppModule -->\n\nErrorInterceptor->AppModule\n\n\n\n\n\nJwtInterceptor\n\nJwtInterceptor\n\nAppModule -->\n\nJwtInterceptor->AppModule\n\n\n\n\n\nMapsControllerService\n\nMapsControllerService\n\nAppModule -->\n\nMapsControllerService->AppModule\n\n\n\n\n\nMatchingControllerService\n\nMatchingControllerService\n\nAppModule -->\n\nMatchingControllerService->AppModule\n\n\n\n\n\nUserControllerService\n\nUserControllerService\n\nAppModule -->\n\nUserControllerService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    17 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        13 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Link   (src/.../link.model.ts)\n                        \n                        \n                            Overwrite   (src/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/models/link.model.ts\n    \n        \n            \n                \n                    \n                        \n                        Link\n                    \n                \n                    \n                        \n                            Enables the use of Strings as URL mappings to an actual resource in the backend \n\n                        \n                    \n                \n                    \n                        Link:     string\n\n                    \n                \n            \n        \n\n    src/app/utils/types.ts\n    \n        \n            \n                \n                    \n                        \n                        Overwrite\n                    \n                \n                    \n                        \n                            Overwrite certain properties of a type, while keeping others. Thanks to\nhttps://stackoverflow.com/a/46941824!\n\n                        \n                    \n                \n                    \n                        Overwrite:     \n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            TOKEN_KEY   (src/.../token.storage.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n                \n                    \n                        used to determine what files are used for testing (in our case, the *.spec.ts files) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Karma uses this variable to hold the testing context \n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  /** whater instance is in production mode (true in this case) */\n  production: true,\n  /** URL for the service we are relying on */\n  apiUrl: 'http://ec2-35-174-153-234.compute-1.amazonaws.com:2222'\n}\n                        \n                    \n\n                \n                    \n                        Represents an instance's environemnt in the event we are in production mode \n\n                    \n                \n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  /** Are we in production */\n  production: false,\n  /** URL for the service we are relying on */\n  // apiUrl: 'http://ec2-35-174-153-234.compute-1.amazonaws.com:2222'\n  apiUrl: 'http://localhost:2222'\n  // apiUrl: 'http://192.168.60.54:2222'\n  //apiUrl: 'http://e5a3040f.ngrok.io/'\n}\n                        \n                    \n\n                \n                    \n                        Signals what tpye of environment we are running in \n\n                    \n                \n\n            \n        \n\n    src/app/utils/token.storage.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TOKEN_KEY\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TOKEN_KEY:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'authToken'\n                        \n                    \n\n                \n                    \n                        Used to access the Authentication token in our session storage \n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
